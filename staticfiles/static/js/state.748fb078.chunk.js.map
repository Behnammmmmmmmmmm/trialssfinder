{"version":3,"file":"static/js/state.748fb078.chunk.js","mappings":"gHAAA,MAAMA,EAAmBC,IACvB,IAAIC,EACJ,MAAMC,EAA4B,IAAIC,IAChCC,EAAW,CAACC,EAASC,KACzB,MAAMC,EAA+B,oBAAZF,EAAyBA,EAAQJ,GAASI,EACnE,IAAKG,OAAOC,GAAGF,EAAWN,GAAQ,CAChC,MAAMS,EAAgBT,EACtBA,GAAoB,MAAXK,EAAkBA,EAA+B,kBAAdC,GAAwC,OAAdA,GAAsBA,EAAYC,OAAOG,OAAO,CAAC,EAAGV,EAAOM,GACjIL,EAAUU,QAASC,GAAaA,EAASZ,EAAOS,GAClD,GAEII,EAAW,IAAMb,EAcjBc,EAAM,CAAEX,WAAUU,WAAUE,gBAbV,IAAMC,EAaqBC,UAZhCL,IACjBX,EAAUiB,IAAIN,GACP,IAAMX,EAAUkB,OAAOP,IAU8BQ,QAR9C,KACV,EAKJnB,EAAUoB,UAGNL,EAAehB,EAAQD,EAAYI,EAAUU,EAAUC,GAC7D,OAAOA,GAGT,I,oBCzBA,MAAM,cAAEQ,GAAkB,WACpB,iCAAEC,GAAqC,EAC7C,IAAIC,GAAyB,EAC7B,MAAMC,EAAYC,GAAQA,EAkBpBC,EAAc5B,IACd,EAA6F,oBAAhBA,EAAjF,EAKA,MAAMe,EAA6B,oBAAhBf,EDHD,CAACA,GAAgBA,EAAcD,EAAgBC,GAAeD,ECGhC8B,CAAY7B,GAAeA,EACrE8B,EAAgB,CAACC,EAAUC,IAxBnC,SAAkBjB,EAAKgB,EAAWL,EAAUM,GACtC,OACFC,EADwED,IAAeP,IAIvFA,GAAyB,GAE3B,MAAMS,EAAQV,EACZT,EAAIG,UACJH,EAAID,SACJC,EAAIoB,gBAAkBpB,EAAIC,gBAC1Be,EACAC,GAGF,OADAT,EAAcW,GACPA,CACT,CAQkDE,CAASrB,EAAKgB,EAAUC,GAExE,OADAxB,OAAOG,OAAOmB,EAAef,GACtBe,GAEHO,EAAUrC,GAAgBA,EAAc4B,EAAW5B,GAAe4B,C,iBCkNxE,SAASU,EAAkBC,EAAYC,GACrC,IAAIC,EACJ,IACEA,EAAUF,GACZ,CAAE,MAAOG,GACP,MACF,CAsBA,MArBuB,CACrBC,QAAUC,IACR,IAAIC,EACJ,MAAMC,EAASC,GACA,OAATA,EACK,KAEFC,KAAKF,MAAMC,EAAiB,MAAXP,OAAkB,EAASA,EAAQS,SAEvDC,EAAsC,OAA/BL,EAAKJ,EAAQE,QAAQC,IAAiBC,EAAK,KACxD,OAAIK,aAAeC,QACVD,EAAIE,KAAKN,GAEXA,EAAMI,IAEfG,QAAS,CAACT,EAAMU,IAAab,EAAQY,QACnCT,EACAI,KAAKO,UAAUD,EAAqB,MAAXd,OAAkB,EAASA,EAAQgB,WAE9DC,WAAab,GAASH,EAAQgB,WAAWb,GAG7C,C,oCApRA,MAUMc,EAAqC,IAAIC,IACzCC,EAA6BhB,IACjC,MAAM7B,EAAM2C,EAAmBG,IAAIjB,GACnC,OAAK7B,EACEP,OAAOsD,YACZtD,OAAOuD,QAAQhD,EAAIiD,QAAQC,IAAI,EAAEC,EAAKC,KAAU,CAACD,EAAKC,EAAKrD,cAF5C,CAAC,GAiMdsD,EA1Ke,CAACC,EAAIC,EAAkB,CAAC,IAAM,CAACC,EAAKV,EAAK9C,KAC5D,MAAM,QAAEyD,EAAO,oBAAEC,EAAmB,MAAEC,KAAUlC,GAAY8B,EAC5D,IAAIK,EACJ,IACEA,GAAiC,MAAXH,GAAkBA,IAAiFI,OAAOC,4BAClI,CAAE,MAAOnC,GACT,CACA,IAAKiC,EAMH,OALI,EAAsEH,EAA1E,EAKOH,EAAGE,EAAKV,EAAK9C,GAEtB,MAAM,WAAE+D,KAAeC,GAjCY,EAACL,EAAOC,EAAoBnC,KAC/D,QAAc,IAAVkC,EACF,MAAO,CACLM,KAAM,YACNF,WAAYH,EAAmBM,QAAQzC,IAG3C,MAAM0C,EAAqBxB,EAAmBG,IAAIrB,EAAQI,MAC1D,GAAIsC,EACF,MAAO,CAAEF,KAAM,UAAWN,WAAUQ,GAEtC,MAAMC,EAAgB,CACpBL,WAAYH,EAAmBM,QAAQzC,GACvCwB,OAAQ,CAAC,GAGX,OADAN,EAAmBa,IAAI/B,EAAQI,KAAMuC,GAC9B,CAAEH,KAAM,UAAWN,WAAUS,IAiBaC,CAA6BV,EAAOC,EAAoBnC,GACzG,IAAI6C,GAAc,EAClBtE,EAAIX,SAAW,CAACH,EAAOK,EAASgF,KAC9B,MAAMC,EAAIhB,EAAItE,EAAOK,GACrB,IAAK+E,EAAa,OAAOE,EACzB,MAAMC,OAA0B,IAAjBF,EAA0B,CAAEN,KAAMP,GAAuB,aAAwC,kBAAjBa,EAA4B,CAAEN,KAAMM,GAAiBA,EACpJ,YAAc,IAAVZ,GACY,MAAdI,OAAqB,EAASA,EAAWW,KAAKD,EAAQ3B,KAC/C0B,IAEK,MAAdT,OAAqB,EAASA,EAAWW,KACvC,IACKD,EACHR,KAAM,GAAGN,KAASc,EAAOR,QAE3B,IACKpB,EAA0BpB,EAAQI,MACrC,CAAC8B,GAAQ3D,EAAID,aAGVyE,IAET,MAAMG,EAAuB,IAAIC,KAC/B,MAAMC,EAAsBP,EAC5BA,GAAc,EACdd,KAAOoB,GACPN,EAAcO,GAEV3E,EAAeoD,EAAGtD,EAAIX,SAAUyD,EAAK9C,GAc3C,GAbmC,cAA/BgE,EAAsBC,KACV,MAAdF,OAAqB,EAASA,EAAWe,KAAK5E,IAE9C8D,EAAsBf,OAAOe,EAAsBL,OAAS3D,EAC9C,MAAd+D,GAA8BA,EAAWe,KACvCrF,OAAOsD,YACLtD,OAAOuD,QAAQgB,EAAsBf,QAAQC,IAAI,EAAEC,EAAK4B,KAAY,CAClE5B,EACAA,IAAQa,EAAsBL,MAAQzD,EAAe6E,EAAOhF,gBAKhEC,EAAIgF,sBAAgD,oBAAjBhF,EAAIiF,SAAyB,CAClE,IAAIC,GAAiC,EACrC,MAAMC,EAAmBnF,EAAIiF,SAC7BjF,EAAIiF,SAAW,IAAIL,KACb,EAAoF,eAAdA,EAAE,GAAGX,MAA0BiB,SACvGhE,EAGAgE,GAAiC,GAEnCC,KAAoBP,GAExB,CAmGA,OAlGAb,EAAW5D,UAAWiF,IACpB,IAAItD,EACJ,OAAQsD,EAAQnB,MACd,IAAK,SACH,MAA+B,kBAApBmB,EAAQC,cACjBnE,OAGA,GAEKoE,EACLF,EAAQC,QACPZ,IACC,GAAoB,eAAhBA,EAAOR,KAAuB,CAChC,QAAc,IAAVN,EAEF,OADAgB,EAAqBF,EAAOvF,YAC5B,EAEuC,IAArCO,OAAO8F,KAAKd,EAAOvF,OAAOsG,OAA9B,EASA,MAAMC,EAAoBhB,EAAOvF,MAAMyE,GACvC,QAA0B,IAAtB8B,GAAsD,OAAtBA,EAClC,OAKF,OAHIxD,KAAKO,UAAUxC,EAAID,cAAgBkC,KAAKO,UAAUiD,IACpDd,EAAqBc,QAEvB,CACF,CACKzF,EAAIgF,sBACmB,oBAAjBhF,EAAIiF,UACfjF,EAAIiF,SAASR,KAGnB,IAAK,WACH,OAAQW,EAAQC,QAAQpB,MACtB,IAAK,QAEH,OADAU,EAAqBzE,QACP,IAAVyD,EACmB,MAAdI,OAAqB,EAASA,EAAWe,KAAK9E,EAAID,YAEtC,MAAdgE,OAAqB,EAASA,EAAWe,KAAKjC,EAA0BpB,EAAQI,OACzF,IAAK,SACH,YAAc,IAAV8B,GACY,MAAdI,OAAqB,EAASA,EAAWe,KAAK9E,EAAID,iBAClD,GAEmB,MAAdgE,OAAqB,EAASA,EAAWe,KAAKjC,EAA0BpB,EAAQI,OACzF,IAAK,WACH,OAAOyD,EAAcF,EAAQlG,MAAQA,IACnC,QAAc,IAAVyE,EAGF,OAFAgB,EAAqBzF,GACP,MAAd6E,GAA8BA,EAAWe,KAAK9E,EAAID,iBAClD,EAEF4E,EAAqBzF,EAAMyE,IACb,MAAdI,GAA8BA,EAAWe,KAAKjC,EAA0BpB,EAAQI,SAEpF,IAAK,gBACL,IAAK,iBACH,OAAOyD,EAAcF,EAAQlG,MAAQA,IACnC,QAAc,IAAVyE,EAEF,OADAgB,EAAqBzF,QACrB,EAEE+C,KAAKO,UAAUxC,EAAID,cAAgBkC,KAAKO,UAAUtD,EAAMyE,KAC1DgB,EAAqBzF,EAAMyE,MAGjC,IAAK,eAAgB,CACnB,MAAM,gBAAE+B,GAAoBN,EAAQC,QAC9BM,EAA0E,OAArD7D,EAAK4D,EAAgBE,eAAezE,OAAO,GAAG,SAAc,EAASW,EAAG5C,MACnG,IAAKyG,EAAmB,OAWxB,OATEhB,OADY,IAAVhB,EACmBgC,EAEAA,EAAkBhC,IAE3B,MAAdI,GAA8BA,EAAWW,KACvC,KAEAgB,QAEF,CACF,CACA,IAAK,kBACH,OAAOpB,GAAeA,EAE1B,UAGCpE,GAGHoF,EAAgB,CAACO,EAAaC,KAClC,IAAIC,EACJ,IACEA,EAAS9D,KAAKF,MAAM8D,EACtB,CAAE,MAAOG,QACP9E,CAIF,MACe,IAAX6E,GAAmBD,EAAEC,IA0BrBE,EAvB6B3C,GAAO,CAACE,EAAKV,EAAK9C,KACnD,MAAMkG,EAAgBlG,EAAIG,UAoB1B,OAnBAH,EAAIG,UAAY,CAACa,EAAUmF,EAAa1E,KACtC,IAAI3B,EAAWkB,EACf,GAAImF,EAAa,CACf,MAAMlF,GAAyB,MAAXQ,OAAkB,EAASA,EAAQR,aAAexB,OAAOC,GAC7E,IAAI0G,EAAepF,EAAShB,EAAID,YAChCD,EAAYZ,IACV,MAAMmH,EAAYrF,EAAS9B,GAC3B,IAAK+B,EAAWmF,EAAcC,GAAY,CACxC,MAAMC,EAAgBF,EACtBD,EAAYC,EAAeC,EAAWC,EACxC,IAEa,MAAX7E,OAAkB,EAASA,EAAQ8E,kBACrCJ,EAAYC,EAAcA,EAE9B,CACA,OAAOF,EAAcpG,IAEFwD,EAAGE,EAAKV,EAAK9C,IAqC9BwG,EAAclD,GAAQmD,IAC1B,IACE,MAAMC,EAASpD,EAAGmD,GAClB,OAAIC,aAAkBtE,QACbsE,EAEF,CACLrE,KAAKsE,GACIH,EAAWG,EAAXH,CAAwBE,GAEjC,MAAME,GACJ,OAAOC,IACT,EAEJ,CAAE,MAAOb,GACP,MAAO,CACL,IAAA3D,CAAKyE,GACH,OAAOD,IACT,EACAE,MAAMC,GACGR,EAAWQ,EAAXR,CAAuBR,GAGpC,GAwRIiB,EAXc,CAACC,EAAQC,IACvB,eAAgBA,GAAe,cAAeA,GAAe,gBAAiBA,GAC5E,EA7QQ,EAACD,EAAQC,IAAgB,CAAC3D,EAAKV,EAAK9C,KAClD,IAAIyB,EAAU,CACZD,WAAY,IAAM4F,aAClBC,UAAWpF,KAAKO,UAChB8E,YAAarF,KAAKF,MAClBwF,WAAarI,GAAUA,EACvBsI,QAAS,EACTC,MAAO,CAACC,EAAgBC,KAAiB,IACpCA,KACAD,OAEFP,GAEDS,GAAc,EAClB,MAAMC,EAAqC,IAAIzI,IACzC0I,EAA2C,IAAI1I,IACrD,IAAIsC,EACJ,IACEA,EAAUD,EAAQD,YACpB,CAAE,MAAOG,GACT,CACA,IAAKD,EACH,OAAOwF,EACL,IAAIa,UACF7G,EAGAsC,KAAOuE,IAETjF,EACA9C,GAGJ,MAAMgI,EAAoBxB,EAAW/E,EAAQ4F,WACvC/E,EAAU,KACd,MAAMpD,EAAQuC,EAAQ8F,WAAW,IAAKzE,MACtC,IAAImF,EACJ,MAAMC,EAAWF,EAAkB,CAAE9I,QAAOsI,QAAS/F,EAAQ+F,UAAWnF,KACrE8F,GAAoBzG,EAAQY,QAAQb,EAAQI,KAAMsG,IACnDpB,MAAOf,IACPiC,EAAcjC,IAEhB,GAAIiC,EACF,MAAMA,EAER,OAAOC,GAEHE,EAAgBpI,EAAIX,SAC1BW,EAAIX,SAAW,CAACH,EAAOK,KACrB6I,EAAclJ,EAAOK,GAChB+C,KAEP,MAAM+F,EAAenB,EACnB,IAAIa,KACFvE,KAAOuE,GACFzF,KAEPQ,EACA9C,GAEF,IAAIsI,EACJ,MAAMC,EAAU,KACd,IAAIzG,EACJ,IAAKJ,EAAS,OACdkG,GAAc,EACdC,EAAmBhI,QAAS2I,GAAOA,EAAG1F,MACtC,MAAM2F,GAAgE,OAApC3G,EAAKL,EAAQiH,yBAA8B,EAAS5G,EAAG6G,KAAKlH,EAASqB,YAAW,EAClH,OAAO0D,EAAW9E,EAAQE,QAAQgH,KAAKlH,GAAhC8E,CAA0C/E,EAAQI,MAAMQ,KAAMwG,IACnE,GAAIA,EACF,OAAOpH,EAAQ6F,YAAYuB,KAE5BxG,KAAMyG,IACP,GAAIA,EAA0B,CAC5B,GAAgD,kBAArCA,EAAyBtB,SAAwBsB,EAAyBtB,UAAY/F,EAAQ+F,QAWvG,OAAOsB,EAAyB5J,MAVhC,GAAIuC,EAAQsH,QACV,OAAOtH,EAAQsH,QACbD,EAAyB5J,MACzB4J,EAAyBtB,cAG7BtG,CAMJ,IACCmB,KAAM2G,IACP,IAAIC,EAMJ,OALAX,EAAmB7G,EAAQgG,MACzBuB,EACiB,OAAhBC,EAAMnG,KAAiBmG,EAAMZ,GAEhC7E,EAAI8E,GAAkB,GACfhG,MACND,KAAK,KACqB,MAA3BoG,OAAkC,EAASA,EAAwBH,OAAkB,GACrFV,GAAc,EACdE,EAAyBjI,QAAS2I,GAAOA,EAAGF,MAC3CvB,MAAOf,IACmB,MAA3ByC,OAAkC,EAASA,OAAwB,EAAQzC,MAiC/E,OA9BAhG,EAAIiH,QAAU,CACZiC,WAAaC,IACX1H,EAAU,IACLA,KACA0H,GAEDA,EAAW3H,aACbE,EAAUyH,EAAW3H,eAGzB4H,aAAc,KACD,MAAX1H,OAAkB,EAASA,EAAQgB,WAAWjB,EAAQI,OAExDwH,WAAY,IAAM5H,EAClB6H,UAAW,IAAMf,IACjBX,YAAa,IAAMA,EACnB2B,UAAYf,IACVX,EAAmBzH,IAAIoI,GAChB,KACLX,EAAmBxH,OAAOmI,KAG9BgB,kBAAoBhB,IAClBV,EAAyB1H,IAAIoI,GACtB,KACLV,EAAyBzH,OAAOmI,MAItCD,IACOD,GAAoBD,GA6IlBoB,CAAQvC,EAAQC,IA3IX,EAACD,EAAQC,IAAgB,CAAC3D,EAAKV,EAAK9C,KAClD,IAAIyB,EAAU,CACZC,QAASH,EAAkB,IAAM6F,cACjCG,WAAarI,GAAUA,EACvBsI,QAAS,EACTC,MAAO,CAACC,EAAgBC,KAAiB,IACpCA,KACAD,OAEFP,GAEDS,GAAc,EAClB,MAAMC,EAAqC,IAAIzI,IACzC0I,EAA2C,IAAI1I,IACrD,IAAIsC,EAAUD,EAAQC,QACtB,IAAKA,EACH,OAAOwF,EACL,IAAIa,UACF7G,EAGAsC,KAAOuE,IAETjF,EACA9C,GAGJ,MAAMsC,EAAU,KACd,MAAMpD,EAAQuC,EAAQ8F,WAAW,IAAKzE,MACtC,OAAOpB,EAAQY,QAAQb,EAAQI,KAAM,CACnC3C,QACAsI,QAAS/F,EAAQ+F,WAGfY,EAAgBpI,EAAIX,SAC1BW,EAAIX,SAAW,CAACH,EAAOK,KACrB6I,EAAclJ,EAAOK,GAChB+C,KAEP,MAAM+F,EAAenB,EACnB,IAAIa,KACFvE,KAAOuE,GACFzF,KAEPQ,EACA9C,GAGF,IAAIsI,EADJtI,EAAIC,gBAAkB,IAAMoI,EAE5B,MAAME,EAAU,KACd,IAAIzG,EAAI4H,EACR,IAAKhI,EAAS,OACdkG,GAAc,EACdC,EAAmBhI,QAAS2I,IAC1B,IAAIS,EACJ,OAAOT,EAAoB,OAAhBS,EAAMnG,KAAiBmG,EAAMZ,KAE1C,MAAMI,GAAgE,OAApCiB,EAAKjI,EAAQiH,yBAA8B,EAASgB,EAAGf,KAAKlH,EAAyB,OAAfK,EAAKgB,KAAiBhB,EAAKuG,UAAkB,EACrJ,OAAO7B,EAAW9E,EAAQE,QAAQgH,KAAKlH,GAAhC8E,CAA0C/E,EAAQI,MAAMQ,KAAMyG,IACnE,GAAIA,EAA0B,CAC5B,GAAgD,kBAArCA,EAAyBtB,SAAwBsB,EAAyBtB,UAAY/F,EAAQ+F,QAcvG,MAAO,EAAC,EAAOsB,EAAyB5J,OAbxC,GAAIuC,EAAQsH,QACV,MAAO,EACL,EACAtH,EAAQsH,QACND,EAAyB5J,MACzB4J,EAAyBtB,eAI/BtG,CAMJ,CACA,MAAO,EAAC,OAAO,KACdmB,KAAMsH,IACP,IAAIV,EACJ,MAAOW,EAAUZ,GAAiBW,EAMlC,GALArB,EAAmB7G,EAAQgG,MACzBuB,EACiB,OAAhBC,EAAMnG,KAAiBmG,EAAMZ,GAEhC7E,EAAI8E,GAAkB,GAClBsB,EACF,OAAOtH,MAERD,KAAK,KACqB,MAA3BoG,OAAkC,EAASA,EAAwBH,OAAkB,GACrFA,EAAmBxF,IACnB8E,GAAc,EACdE,EAAyBjI,QAAS2I,GAAOA,EAAGF,MAC3CvB,MAAOf,IACmB,MAA3ByC,OAAkC,EAASA,OAAwB,EAAQzC,MAmC/E,OAhCAhG,EAAIiH,QAAU,CACZiC,WAAaC,IACX1H,EAAU,IACLA,KACA0H,GAEDA,EAAWzH,UACbA,EAAUyH,EAAWzH,UAGzB0H,aAAc,KACD,MAAX1H,OAAkB,EAASA,EAAQgB,WAAWjB,EAAQI,OAExDwH,WAAY,IAAM5H,EAClB6H,UAAW,IAAMf,IACjBX,YAAa,IAAMA,EACnB2B,UAAYf,IACVX,EAAmBzH,IAAIoI,GAChB,KACLX,EAAmBxH,OAAOmI,KAG9BgB,kBAAoBhB,IAClBV,EAAyB1H,IAAIoI,GACtB,KACLV,EAAyBzH,OAAOmI,MAIjC/G,EAAQoI,eACXtB,IAEKD,GAAoBD,GAWpByB,CAAQ5C,EAAQC,E,iBC7hBzB,SAAS4C,EAAIC,GAMX,MALI,EAKE,IAAIC,MACR,8BAA8BD,2CAElC,CAIA,SAASE,EAAQC,GACf,QAASA,KAAWA,EAAMC,EAC5B,CACA,SAASC,EAAYF,GACnB,QAAKA,IAEEG,EAAcH,IAAUI,MAAMC,QAAQL,MAAYA,EAAMM,MAAgBN,EAAMO,cAAcD,IAAcE,EAAMR,IAAUS,EAAMT,GACzI,CAEA,SAASG,EAAcH,GACrB,IAAKA,GAA0B,kBAAVA,EACnB,OAAO,EACT,MAAMU,EAAQC,EAAeX,GAC7B,GAAc,OAAVU,EACF,OAAO,EAET,MAAME,EAAOtL,OAAOuL,eAAerC,KAAKkC,EAAO,gBAAkBA,EAAMH,YACvE,OAAIK,IAAStL,QAES,mBAARsL,GAAsBE,SAASC,SAASvC,KAAKoC,KAAUI,CACvE,CAMA,SAASC,EAAKC,EAAKC,GACQ,IAArBC,EAAYF,GACdG,QAAQC,QAAQJ,GAAKxL,QAASsD,IAC5BmI,EAAKnI,EAAKkI,EAAIlI,GAAMkI,KAGtBA,EAAIxL,QAAQ,CAAC6L,EAAOC,IAAUL,EAAKK,EAAOD,EAAOL,GAErD,CACA,SAASE,EAAYK,GACnB,MAAM1M,EAAQ0M,EAAMxB,GACpB,OAAOlL,EAAQA,EAAM2M,MAAQtB,MAAMC,QAAQoB,GAAS,EAAgBjB,EAAMiB,GAAS,EAAchB,EAAMgB,GAAS,EAAc,CAChI,CACA,SAASE,EAAIF,EAAOG,GAClB,OAA8B,IAAvBR,EAAYK,GAAyBA,EAAME,IAAIC,GAAQtM,OAAOuM,UAAUhB,eAAerC,KAAKiD,EAAOG,EAC5G,CAIA,SAASvI,EAAIoI,EAAOK,EAAgB9B,GAClC,MAAM+B,EAAIX,EAAYK,GACZ,IAANM,EACFN,EAAMpI,IAAIyI,EAAgB9B,GACb,IAAN+B,EACPN,EAAMxL,IAAI+J,GAEVyB,EAAMK,GAAkB9B,CAC5B,CAQA,SAASQ,EAAMwB,GACb,OAAOA,aAAkBvJ,GAC3B,CACA,SAASgI,EAAMuB,GACb,OAAOA,aAAkB/M,GAC3B,CACA,SAASgN,EAAOlN,GACd,OAAOA,EAAMmN,OAASnN,EAAMoN,KAC9B,CACA,SAASC,EAAYC,EAAMC,GACzB,GAAI9B,EAAM6B,GACR,OAAO,IAAI5J,IAAI4J,GAEjB,GAAI5B,EAAM4B,GACR,OAAO,IAAIpN,IAAIoN,GAEjB,GAAIjC,MAAMC,QAAQgC,GAChB,OAAOjC,MAAMyB,UAAU7K,MAAMwH,KAAK6D,GACpC,MAAME,EAAUpC,EAAckC,GAC9B,IAAe,IAAXC,GAA8B,eAAXA,IAA4BC,EAAS,CAC1D,MAAMC,EAAclN,OAAOmN,0BAA0BJ,UAC9CG,EAAYvC,GACnB,IAAI7E,EAAOiG,QAAQC,QAAQkB,GAC3B,IAAK,IAAIE,EAAI,EAAGA,EAAItH,EAAKC,OAAQqH,IAAK,CACpC,MAAM1J,EAAMoC,EAAKsH,GACXC,EAAOH,EAAYxJ,IACH,IAAlB2J,EAAKC,WACPD,EAAKC,UAAW,EAChBD,EAAKE,cAAe,IAElBF,EAAKhK,KAAOgK,EAAKtJ,OACnBmJ,EAAYxJ,GAAO,CACjB6J,cAAc,EACdD,UAAU,EAEVE,WAAYH,EAAKG,WACjB9C,MAAOqC,EAAKrJ,IAElB,CACA,OAAO1D,OAAO6B,OAAOwJ,EAAe0B,GAAOG,EAC7C,CAAO,CACL,MAAM9B,EAAQC,EAAe0B,GAC7B,GAAc,OAAV3B,GAAkB6B,EACpB,MAAO,IAAKF,GAEd,MAAMnB,EAAM5L,OAAO6B,OAAOuJ,GAC1B,OAAOpL,OAAOG,OAAOyL,EAAKmB,EAC5B,CACF,CACA,SAASU,EAAO7B,EAAK8B,GAAO,GAC1B,OAAIC,EAAS/B,IAAQnB,EAAQmB,KAAShB,EAAYgB,KAE9CE,EAAYF,GAAO,IACrBA,EAAI7H,IAAM6H,EAAIjL,IAAMiL,EAAI9K,MAAQ8K,EAAIhL,OAASgN,GAE/C5N,OAAOyN,OAAO7B,GACV8B,GACF1N,OAAOuD,QAAQqI,GAAKxL,QAAQ,EAAEsD,EAAKgH,KAAW+C,EAAO/C,GAAO,KANrDkB,CAQX,CACA,SAASgC,IACPtD,EAAI,EACN,CACA,SAASqD,EAAS/B,GAChB,OAAO5L,OAAO2N,SAAS/B,EACzB,CAIA,SAASiC,EAAUC,GACjB,MAAMC,EAASC,EAAQF,GAIvB,OAHKC,GACHzD,EAAI,GAECyD,CACT,CAQA,SAASE,IACP,OAAOC,CACT,CAYA,SAASC,EAAkBC,EAAOC,GAC5BA,IACFR,EAAU,WACVO,EAAME,SAAW,GACjBF,EAAMG,gBAAkB,GACxBH,EAAMI,eAAiBH,EAE3B,CACA,SAASI,EAAYL,GACnBM,EAAWN,GACXA,EAAMO,QAAQvO,QAAQwO,GACtBR,EAAMO,QAAU,IAClB,CACA,SAASD,EAAWN,GACdA,IAAUF,IACZA,EAAeE,EAAMS,QAEzB,CACA,SAASC,EAAWC,GAClB,OAAOb,EA7BA,CACLS,QAAS,GACTE,QA2BgCX,EA1BhCc,OA0B8CD,EAvB9CE,gBAAgB,EAChBC,mBAAoB,EAuBxB,CACA,SAASN,EAAYO,GACnB,MAAM1P,EAAQ0P,EAAMxE,GACA,IAAhBlL,EAAM2M,OAA4C,IAAhB3M,EAAM2M,MAC1C3M,EAAM2P,UAEN3P,EAAM4P,UAAW,CACrB,CAGA,SAASC,EAAcrI,EAAQmH,GAC7BA,EAAMc,mBAAqBd,EAAMO,QAAQ5I,OACzC,MAAMwJ,EAAYnB,EAAMO,QAAQ,GA2BhC,YA1B8B,IAAX1H,GAAqBA,IAAWsI,GAE7CA,EAAU5E,GAAa6E,YACzBf,EAAYL,GACZ9D,EAAI,IAEFM,EAAY3D,KACdA,EAASwI,EAASrB,EAAOnH,GACpBmH,EAAMS,SACTa,EAAYtB,EAAOnH,IAEnBmH,EAAME,UACRT,EAAU,WAAW8B,4BACnBJ,EAAU5E,GAAakC,MACvB5F,EACAmH,EAAME,SACNF,EAAMG,kBAIVtH,EAASwI,EAASrB,EAAOmB,EAAW,IAEtCd,EAAYL,GACRA,EAAME,UACRF,EAAMI,eAAeJ,EAAME,SAAUF,EAAMG,iBAEtCtH,IAAW2I,EAAU3I,OAAS,CACvC,CACA,SAASwI,EAASI,EAAWnF,EAAOoF,GAClC,GAAInC,EAASjD,GACX,OAAOA,EACT,MAAMjL,EAAQiL,EAAMC,GACpB,IAAKlL,EAKH,OAJAkM,EACEjB,EACA,CAAChH,EAAKqM,IAAeC,EAAiBH,EAAWpQ,EAAOiL,EAAOhH,EAAKqM,EAAYD,IAE3EpF,EAET,GAAIjL,EAAMwQ,SAAWJ,EACnB,OAAOnF,EACT,IAAKjL,EAAM+P,UAET,OADAE,EAAYG,EAAWpQ,EAAMoN,OAAO,GAC7BpN,EAAMoN,MAEf,IAAKpN,EAAMyQ,WAAY,CACrBzQ,EAAMyQ,YAAa,EACnBzQ,EAAMwQ,OAAOf,qBACb,MAAMjI,EAASxH,EAAMmN,MACrB,IAAIuD,EAAalJ,EACbmJ,GAAS,EACO,IAAhB3Q,EAAM2M,QACR+D,EAAa,IAAIxQ,IAAIsH,GACrBA,EAAOnG,QACPsP,GAAS,GAEXzE,EACEwE,EACA,CAACzM,EAAKqM,IAAeC,EAAiBH,EAAWpQ,EAAOwH,EAAQvD,EAAKqM,EAAYD,EAAMM,IAEzFV,EAAYG,EAAW5I,GAAQ,GAC3B6I,GAAQD,EAAUvB,UACpBT,EAAU,WAAWwC,iBACnB5Q,EACAqQ,EACAD,EAAUvB,SACVuB,EAAUtB,gBAGhB,CACA,OAAO9O,EAAMmN,KACf,CACA,SAASoD,EAAiBH,EAAWS,EAAaC,EAAcjE,EAAMyD,EAAYS,EAAUC,GAG1F,GAFI,EAEAhG,EAAQsF,GAAa,CACvB,MAEMW,EAAMjB,EAASI,EAAWE,EAFnBS,GAAYF,GAAqC,IAAtBA,EAAYlE,QACnDC,EAAIiE,EAAYK,UAAWrE,GAAQkE,EAASI,OAAOtE,QAAQ,GAG5D,GADAvI,EAAIwM,EAAcjE,EAAMoE,IACpBjG,EAAQiG,GAGV,OAFAb,EAAUZ,gBAAiB,CAG/B,MAAWwB,GACTF,EAAa5P,IAAIoP,GAEnB,GAAInF,EAAYmF,KAAgBpC,EAASoC,GAAa,CACpD,IAAKF,EAAUb,OAAO6B,aAAehB,EAAUX,mBAAqB,EAClE,OAEFO,EAASI,EAAWE,GACdO,GAAgBA,EAAYL,OAAOpB,SAA4B,kBAATvC,IAAqBtM,OAAOuM,UAAUuE,qBAAqB5H,KAAKqH,EAAcjE,IACxIoD,EAAYG,EAAWE,EAC3B,CACF,CACA,SAASL,EAAYtB,EAAO1D,EAAOgD,GAAO,IACnCU,EAAMS,SAAWT,EAAMY,OAAO6B,aAAezC,EAAMa,gBACtDxB,EAAO/C,EAAOgD,EAElB,CAgJA,SAASqD,EAAK5B,EAAO7C,GACnB,MAAM7M,EAAQ0P,EAAMxE,GAEpB,OADelL,EAAQkN,EAAOlN,GAAS0P,GACzB7C,EAChB,CASA,SAAS0E,EAAuBC,EAAQ3E,GACtC,KAAMA,KAAQ2E,GACZ,OACF,IAAI7F,EAAQC,EAAe4F,GAC3B,KAAO7F,GAAO,CACZ,MAAMiC,EAAOrN,OAAOkR,yBAAyB9F,EAAOkB,GACpD,GAAIe,EACF,OAAOA,EACTjC,EAAQC,EAAeD,EACzB,CAEF,CACA,SAAS+F,EAAY1R,GACdA,EAAM+P,YACT/P,EAAM+P,WAAY,EACd/P,EAAMoP,SACRsC,EAAY1R,EAAMoP,SAGxB,CACA,SAASuC,EAAY3R,GACdA,EAAMmN,QACTnN,EAAMmN,MAAQE,EACZrN,EAAMoN,MACNpN,EAAMwQ,OAAOjB,OAAOqC,uBAG1B,CAkJA,SAASC,EAAY5G,EAAO6G,GAC1B,MAAMpC,EAAQjE,EAAMR,GAASmD,EAAU,UAAU2D,UAAU9G,EAAO6G,GAAUpG,EAAMT,GAASmD,EAAU,UAAU4D,UAAU/G,EAAO6G,GAxUlI,SAA0BxE,EAAMwE,GAC9B,MAAMxG,EAAUD,MAAMC,QAAQgC,GACxBtN,EAAQ,CACZ2M,MAAOrB,EAAU,EAAgB,EAEjCkF,OAAQsB,EAASA,EAAOtB,OAAShC,IAEjCuB,WAAW,EAEXU,YAAY,EAEZS,UAAW,CAAC,EAEZ9B,QAAS0C,EAET1E,MAAOE,EAEP2E,OAAQ,KAGR9E,MAAO,KAEPwC,QAAS,KACTuC,WAAW,GAEb,IAAIjF,EAASjN,EACTmS,EAAQC,EACR9G,IACF2B,EAAS,CAACjN,GACVmS,EAAQE,GAEV,MAAM,OAAEC,EAAM,MAAEC,GAAUC,MAAMC,UAAUxF,EAAQkF,GAGlD,OAFAnS,EAAMiS,OAASM,EACfvS,EAAM2P,QAAU2C,EACTC,CACT,CAqS4IG,CAAiBzH,EAAO6G,GAGlK,OAFcA,EAASA,EAAOtB,OAAShC,KACjCU,QAAQyD,KAAKjD,GACZA,CACT,CAGA,SAASkD,EAAQ3H,GAGf,OAFKD,EAAQC,IACXJ,EAAI,IACCgI,EAAY5H,EACrB,CACA,SAAS4H,EAAY5H,GACnB,IAAKE,EAAYF,IAAUiD,EAASjD,GAClC,OAAOA,EACT,MAAMjL,EAAQiL,EAAMC,GACpB,IAAI4H,EACJ,GAAI9S,EAAO,CACT,IAAKA,EAAM+P,UACT,OAAO/P,EAAMoN,MACfpN,EAAMyQ,YAAa,EACnBqC,EAAOzF,EAAYpC,EAAOjL,EAAMwQ,OAAOjB,OAAOqC,sBAChD,MACEkB,EAAOzF,EAAYpC,GAAO,GAQ5B,OANAiB,EAAK4G,EAAM,CAAC7O,EAAKqM,KACfhM,EAAIwO,EAAM7O,EAAK4O,EAAYvC,MAEzBtQ,IACFA,EAAMyQ,YAAa,GAEdqC,CACT,C,iBA/rBA,IAgMIrE,EAhMA0B,EAAU4C,OAAOC,IAAI,iBACrBzH,EAAYwH,OAAOC,IAAI,mBACvB9H,EAAc6H,OAAOC,IAAI,eA8CzBpH,EAAiBrL,OAAOqL,eASxBK,EAAmB1L,OAAOuM,UAAUtB,YAAYQ,WAyHhDuC,EAAU,CAAC,EAyMX6D,EAAc,CAChB,GAAAxO,CAAI5D,EAAO6M,GACT,GAAIA,IAAS3B,EACX,OAAOlL,EACT,MAAMwR,EAAStE,EAAOlN,GACtB,IAAK4M,EAAI4E,EAAQ3E,GACf,OAwGN,SAA2B7M,EAAOwR,EAAQ3E,GACxC,MAAMe,EAAO2D,EAAuBC,EAAQ3E,GAC5C,OAAOe,EAAO,UAAWA,EAAOA,EAAK3C,MAGnC2C,EAAKhK,KAAK6F,KAAKzJ,EAAMiS,aACnB,CACN,CA/GagB,CAAkBjT,EAAOwR,EAAQ3E,GAE1C,MAAM5B,EAAQuG,EAAO3E,GACrB,OAAI7M,EAAMyQ,aAAetF,EAAYF,GAC5BA,EAELA,IAAUqG,EAAKtR,EAAMoN,MAAOP,IAC9B8E,EAAY3R,GACLA,EAAMmN,MAAMN,GAAQgF,EAAY5G,EAAOjL,IAEzCiL,CACT,EACA2B,IAAG,CAAC5M,EAAO6M,IACFA,KAAQK,EAAOlN,GAExBuM,QAAQvM,GACCsM,QAAQC,QAAQW,EAAOlN,IAEhC,GAAAsE,CAAItE,EAAO6M,EAAM5B,GACf,MAAM2C,EAAO2D,EAAuBrE,EAAOlN,GAAQ6M,GACnD,GAAIe,GAAMtJ,IAER,OADAsJ,EAAKtJ,IAAImF,KAAKzJ,EAAMiS,OAAQhH,IACrB,EAET,IAAKjL,EAAM+P,UAAW,CACpB,MAAMmD,EAAW5B,EAAKpE,EAAOlN,GAAQ6M,GAC/BpE,EAAeyK,IAAWhI,GAChC,GAAIzC,GAAgBA,EAAa2E,QAAUnC,EAGzC,OAFAjL,EAAMmN,MAAMN,GAAQ5B,EACpBjL,EAAMkR,UAAUrE,IAAQ,GACjB,EAET,KA1TMsG,EA0TClI,MA1TEmI,EA0TKF,GAxTH,IAANC,GAAW,EAAIA,IAAM,EAAIC,EAEzBD,IAAMA,GAAKC,IAAMA,UAsTgB,IAAVnI,GAAoB2B,EAAI5M,EAAMoN,MAAOP,IAC/D,OAAO,EACT8E,EAAY3R,GACZ0R,EAAY1R,EACd,CA9TJ,IAAYmT,EAAGC,EA+TX,OAAIpT,EAAMmN,MAAMN,KAAU5B,SACf,IAAVA,GAAoB4B,KAAQ7M,EAAMmN,QACnCkG,OAAOC,MAAMrI,IAAUoI,OAAOC,MAAMtT,EAAMmN,MAAMN,MAEhD7M,EAAMmN,MAAMN,GAAQ5B,EACpBjL,EAAMkR,UAAUrE,IAAQ,IAFf,CAIX,EACA0G,eAAc,CAACvT,EAAO6M,UACY,IAA5ByE,EAAKtR,EAAMoN,MAAOP,IAAoBA,KAAQ7M,EAAMoN,OACtDpN,EAAMkR,UAAUrE,IAAQ,EACxB8E,EAAY3R,GACZ0R,EAAY1R,WAELA,EAAMkR,UAAUrE,GAErB7M,EAAMmN,cACDnN,EAAMmN,MAAMN,IAEd,GAIT,wBAAA4E,CAAyBzR,EAAO6M,GAC9B,MAAM2G,EAAQtG,EAAOlN,GACf4N,EAAOtB,QAAQmF,yBAAyB+B,EAAO3G,GACrD,OAAKe,EAEE,CACLC,UAAU,EACVC,aAA8B,IAAhB9N,EAAM2M,OAAoC,WAATE,EAC/CkB,WAAYH,EAAKG,WACjB9C,MAAOuI,EAAM3G,IALNe,CAOX,EACA,cAAA6F,GACE5I,EAAI,GACN,EACAe,eAAe5L,GACN4L,EAAe5L,EAAMoN,OAE9B,cAAAsG,GACE7I,EAAI,GACN,GAEEwH,EAAa,CAAC,EAClBnG,EAAKkG,EAAa,CAACnO,EAAKG,KACtBiO,EAAWpO,GAAO,WAEhB,OADA0P,UAAU,GAAKA,UAAU,GAAG,GACrBvP,EAAGwP,MAAMjM,KAAMgM,UACxB,IAEFtB,EAAWkB,eAAiB,SAASvT,EAAO6M,GAG1C,OAFI,EAEGwF,EAAW/N,IAAImF,KAAK9B,KAAM3H,EAAO6M,OAAM,EAChD,EACAwF,EAAW/N,IAAM,SAAStE,EAAO6M,EAAM5B,GAGrC,OAFI,EAEGmH,EAAY9N,IAAImF,KAAK9B,KAAM3H,EAAM,GAAI6M,EAAM5B,EAAOjL,EAAM,GACjE,EA4CA,IAypBI6T,EAAQ,IAzpBC,MACX,WAAArI,CAAYxD,GACVL,KAAKyJ,aAAc,EACnBzJ,KAAKiK,uBAAwB,EAoB7BjK,KAAKmM,QAAU,CAACxG,EAAMyG,EAAQnF,KAC5B,GAAoB,oBAATtB,GAAyC,oBAAXyG,EAAuB,CAC9D,MAAMC,EAAcD,EACpBA,EAASzG,EACT,MAAM2G,EAAOtM,KACb,OAAO,SAAwBuM,EAAQF,KAAgBnL,GACrD,OAAOoL,EAAKH,QAAQI,EAAQxE,GAAUqE,EAAOtK,KAAK9B,KAAM+H,KAAU7G,GACpE,CACF,CAKA,IAAIrB,EACJ,GALsB,oBAAXuM,GACTlJ,EAAI,QACgB,IAAlB+D,GAAqD,oBAAlBA,GACrC/D,EAAI,GAEFM,EAAYmC,GAAO,CACrB,MAAMqB,EAAQU,EAAW1H,MACnB4K,EAAQV,EAAYvE,OAAM,GAChC,IAAI6G,GAAW,EACf,IACE3M,EAASuM,EAAOxB,GAChB4B,GAAW,CACb,CAAE,QACIA,EACFnF,EAAYL,GAEZM,EAAWN,EACf,CAEA,OADAD,EAAkBC,EAAOC,GAClBiB,EAAcrI,EAAQmH,EAC/B,CAAO,IAAKrB,GAAwB,kBAATA,EAAmB,CAQ5C,GAPA9F,EAASuM,EAAOzG,QACD,IAAX9F,IACFA,EAAS8F,GACP9F,IAAW2I,IACb3I,OAAS,GACPG,KAAKyJ,aACPpD,EAAOxG,GAAQ,GACboH,EAAe,CACjB,MAAMwF,EAAI,GACJC,EAAK,GACXjG,EAAU,WAAW8B,4BAA4B5C,EAAM9F,EAAQ4M,EAAGC,GAClEzF,EAAcwF,EAAGC,EACnB,CACA,OAAO7M,CACT,CACEqD,EAAI,IAERlD,KAAK2M,mBAAqB,CAAChH,EAAMyG,KAC/B,GAAoB,oBAATzG,EACT,MAAO,CAACtN,KAAU6I,IAASlB,KAAK2M,mBAAmBtU,EAAQ0P,GAAUpC,EAAKoC,KAAU7G,IAEtF,IAAI0L,EAASC,EAKb,MAAO,CAJQ7M,KAAKmM,QAAQxG,EAAMyG,EAAQ,CAACK,EAAGC,KAC5CE,EAAUH,EACVI,EAAiBH,IAEHE,EAASC,IAEO,mBAAvBxM,GAAQyM,YACjB9M,KAAK+M,cAAc1M,EAAOyM,YACgB,mBAAjCzM,GAAQ2M,sBACjBhN,KAAKiN,wBAAwB5M,EAAO2M,qBACxC,CACA,WAAAE,CAAYvH,GACLnC,EAAYmC,IACfzC,EAAI,GACFG,EAAQsC,KACVA,EAAOsF,EAAQtF,IACjB,MAAMqB,EAAQU,EAAW1H,MACnB4K,EAAQV,EAAYvE,OAAM,GAGhC,OAFAiF,EAAMrH,GAAagH,WAAY,EAC/BjD,EAAWN,GACJ4D,CACT,CACA,WAAAuC,CAAYpF,EAAOd,GACjB,MAAM5O,EAAQ0P,GAASA,EAAMxE,GACxBlL,GAAUA,EAAMkS,WACnBrH,EAAI,GACN,MAAQ2F,OAAQ7B,GAAU3O,EAE1B,OADA0O,EAAkBC,EAAOC,GAClBiB,OAAc,EAAQlB,EAC/B,CAMA,aAAA+F,CAAczJ,GACZtD,KAAKyJ,YAAcnG,CACrB,CAMA,uBAAA2J,CAAwB3J,GACtBtD,KAAKiK,sBAAwB3G,CAC/B,CACA,YAAA8J,CAAazH,EAAMiH,GACjB,IAAI5G,EACJ,IAAKA,EAAI4G,EAAQjO,OAAS,EAAGqH,GAAK,EAAGA,IAAK,CACxC,MAAMqH,EAAQT,EAAQ5G,GACtB,GAA0B,IAAtBqH,EAAM3E,KAAK/J,QAA6B,YAAb0O,EAAMC,GAAkB,CACrD3H,EAAO0H,EAAM/J,MACb,KACF,CACF,CACI0C,GAAK,IACP4G,EAAUA,EAAQtS,MAAM0L,EAAI,IAE9B,MAAMuH,EAAmB9G,EAAU,WAAW+G,cAC9C,OAAInK,EAAQsC,GACH4H,EAAiB5H,EAAMiH,GAEzB5M,KAAKmM,QACVxG,EACCoC,GAAUwF,EAAiBxF,EAAO6E,GAEvC,GA6gBET,EAAUD,EAAMC,QACKD,EAAMS,mBAAmB5K,KAChDmK,GAEkBA,EAAMa,cAAchL,KAAKmK,GACfA,EAAMe,wBAAwBlL,KAAKmK,GAC9CA,EAAMkB,aAAarL,KAAKmK,GACzBA,EAAMgB,YAAYnL,KAAKmK,GACvBA,EAAMiB,YAAYpL,KAAKmK,GChrCzC,MAOM,EAPauB,GAAgB,CAAC9Q,EAAKV,EAAKa,KAC5CA,EAAMtE,SAAW,CAACkV,EAAShV,KAAYqF,KACrC,MAAMpF,EAA+B,oBAAZ+U,EAAyBvB,EAAQuB,GAAWA,EACrE,OAAO/Q,EAAIhE,EAAWD,KAAYqF,IAE7B0P,EAAY3Q,EAAMtE,SAAUyD,EAAKa,G","sources":["webpack://trialsfinder/./node_modules/zustand/esm/vanilla.mjs","webpack://trialsfinder/./node_modules/zustand/esm/index.mjs","webpack://trialsfinder/./node_modules/zustand/esm/middleware.mjs","webpack://trialsfinder/./node_modules/immer/dist/immer.mjs","webpack://trialsfinder/./node_modules/zustand/esm/middleware/immer.mjs"],"sourcesContent":["const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const destroy = () => {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.\"\n      );\n    }\n    listeners.clear();\n  };\n  const api = { setState, getState, getInitialState, subscribe, destroy };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\nvar vanilla = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\"\n    );\n  }\n  return createStore(createState);\n};\n\nexport { createStore, vanilla as default };\n","import { createStore } from 'zustand/vanilla';\nexport * from 'zustand/vanilla';\nimport ReactExports from 'react';\nimport useSyncExternalStoreExports from 'use-sync-external-store/shim/with-selector.js';\n\nconst { useDebugValue } = ReactExports;\nconst { useSyncExternalStoreWithSelector } = useSyncExternalStoreExports;\nlet didWarnAboutEqualityFn = false;\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity, equalityFn) {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && equalityFn && !didWarnAboutEqualityFn) {\n    console.warn(\n      \"[DEPRECATED] Use `createWithEqualityFn` instead of `create` or use `useStoreWithEqualityFn` instead of `useStore`. They can be imported from 'zustand/traditional'. https://github.com/pmndrs/zustand/discussions/1937\"\n    );\n    didWarnAboutEqualityFn = true;\n  }\n  const slice = useSyncExternalStoreWithSelector(\n    api.subscribe,\n    api.getState,\n    api.getServerState || api.getInitialState,\n    selector,\n    equalityFn\n  );\n  useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && typeof createState !== \"function\") {\n    console.warn(\n      \"[DEPRECATED] Passing a vanilla store will be unsupported in a future version. Instead use `import { useStore } from 'zustand'`.\"\n    );\n  }\n  const api = typeof createState === \"function\" ? createStore(createState) : createState;\n  const useBoundStore = (selector, equalityFn) => useStore(api, selector, equalityFn);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\nvar react = (createState) => {\n  if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n    console.warn(\n      \"[DEPRECATED] Default export is deprecated. Instead use `import { create } from 'zustand'`.\"\n    );\n  }\n  return create(createState);\n};\n\nexport { create, react as default, useStore };\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (_e) {\n  }\n  if (!extensionConnector) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && enabled) {\n      console.warn(\n        \"[zustand devtools middleware] Please install/enable Redux devtools extension\"\n      );\n    }\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format. \n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState) return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0) f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (_e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? void 0 : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst oldImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    getStorage: () => localStorage,\n    serialize: JSON.stringify,\n    deserialize: JSON.parse,\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage;\n  try {\n    storage = options.getStorage();\n  } catch (_e) {\n  }\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const thenableSerialize = toThenable(options.serialize);\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    let errorInSync;\n    const thenable = thenableSerialize({ state, version: options.version }).then(\n      (serializedValue) => storage.setItem(options.name, serializedValue)\n    ).catch((e) => {\n      errorInSync = e;\n    });\n    if (errorInSync) {\n      throw errorInSync;\n    }\n    return thenable;\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => cb(get()));\n    const postRehydrationCallback = ((_a = options.onRehydrateStorage) == null ? void 0 : _a.call(options, get())) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((storageValue) => {\n      if (storageValue) {\n        return options.deserialize(storageValue);\n      }\n    }).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return deserializedStorageValue.state;\n        }\n      }\n    }).then((migratedState) => {\n      var _a2;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      return setItem();\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.getStorage) {\n        storage = newOptions.getStorage();\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  hydrate();\n  return stateFromStorage || configResult;\n};\nconst newImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            return [\n              true,\n              options.migrate(\n                deserializedStorageValue.state,\n                deserializedStorageValue.version\n              )\n            ];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, void 0];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persistImpl = (config, baseOptions) => {\n  if (\"getStorage\" in baseOptions || \"serialize\" in baseOptions || \"deserialize\" in baseOptions) {\n    if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") {\n      console.warn(\n        \"[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.\"\n      );\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","// src/utils/env.ts\nvar NOTHING = Symbol.for(\"immer-nothing\");\nvar DRAFTABLE = Symbol.for(\"immer-draftable\");\nvar DRAFT_STATE = Symbol.for(\"immer-state\");\n\n// src/utils/errors.ts\nvar errors = process.env.NODE_ENV !== \"production\" ? [\n  // All error codes, starting by 0:\n  function(plugin) {\n    return `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`;\n  },\n  function(thing) {\n    return `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`;\n  },\n  \"This object has been frozen and should not be mutated\",\n  function(data) {\n    return \"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" + data;\n  },\n  \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n  \"Immer forbids circular references\",\n  \"The first or second argument to `produce` must be a function\",\n  \"The third argument to `produce` must be a function or undefined\",\n  \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n  \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n  function(thing) {\n    return `'current' expects a draft, got: ${thing}`;\n  },\n  \"Object.defineProperty() cannot be used on an Immer draft\",\n  \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n  \"Immer only supports deleting array indices\",\n  \"Immer only supports setting array indices and the 'length' property\",\n  function(thing) {\n    return `'original' expects a draft, got: ${thing}`;\n  }\n  // Note: if more errors are added, the errorOffset in Patches.ts should be increased\n  // See Patches.ts for additional errors\n] : [];\nfunction die(error, ...args) {\n  if (process.env.NODE_ENV !== \"production\") {\n    const e = errors[error];\n    const msg = typeof e === \"function\" ? e.apply(null, args) : e;\n    throw new Error(`[Immer] ${msg}`);\n  }\n  throw new Error(\n    `[Immer] minified error nr: ${error}. Full error at: https://bit.ly/3cXEKWf`\n  );\n}\n\n// src/utils/common.ts\nvar getPrototypeOf = Object.getPrototypeOf;\nfunction isDraft(value) {\n  return !!value && !!value[DRAFT_STATE];\n}\nfunction isDraftable(value) {\n  if (!value)\n    return false;\n  return isPlainObject(value) || Array.isArray(value) || !!value[DRAFTABLE] || !!value.constructor?.[DRAFTABLE] || isMap(value) || isSet(value);\n}\nvar objectCtorString = Object.prototype.constructor.toString();\nfunction isPlainObject(value) {\n  if (!value || typeof value !== \"object\")\n    return false;\n  const proto = getPrototypeOf(value);\n  if (proto === null) {\n    return true;\n  }\n  const Ctor = Object.hasOwnProperty.call(proto, \"constructor\") && proto.constructor;\n  if (Ctor === Object)\n    return true;\n  return typeof Ctor == \"function\" && Function.toString.call(Ctor) === objectCtorString;\n}\nfunction original(value) {\n  if (!isDraft(value))\n    die(15, value);\n  return value[DRAFT_STATE].base_;\n}\nfunction each(obj, iter) {\n  if (getArchtype(obj) === 0 /* Object */) {\n    Reflect.ownKeys(obj).forEach((key) => {\n      iter(key, obj[key], obj);\n    });\n  } else {\n    obj.forEach((entry, index) => iter(index, entry, obj));\n  }\n}\nfunction getArchtype(thing) {\n  const state = thing[DRAFT_STATE];\n  return state ? state.type_ : Array.isArray(thing) ? 1 /* Array */ : isMap(thing) ? 2 /* Map */ : isSet(thing) ? 3 /* Set */ : 0 /* Object */;\n}\nfunction has(thing, prop) {\n  return getArchtype(thing) === 2 /* Map */ ? thing.has(prop) : Object.prototype.hasOwnProperty.call(thing, prop);\n}\nfunction get(thing, prop) {\n  return getArchtype(thing) === 2 /* Map */ ? thing.get(prop) : thing[prop];\n}\nfunction set(thing, propOrOldValue, value) {\n  const t = getArchtype(thing);\n  if (t === 2 /* Map */)\n    thing.set(propOrOldValue, value);\n  else if (t === 3 /* Set */) {\n    thing.add(value);\n  } else\n    thing[propOrOldValue] = value;\n}\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\nfunction isMap(target) {\n  return target instanceof Map;\n}\nfunction isSet(target) {\n  return target instanceof Set;\n}\nfunction latest(state) {\n  return state.copy_ || state.base_;\n}\nfunction shallowCopy(base, strict) {\n  if (isMap(base)) {\n    return new Map(base);\n  }\n  if (isSet(base)) {\n    return new Set(base);\n  }\n  if (Array.isArray(base))\n    return Array.prototype.slice.call(base);\n  const isPlain = isPlainObject(base);\n  if (strict === true || strict === \"class_only\" && !isPlain) {\n    const descriptors = Object.getOwnPropertyDescriptors(base);\n    delete descriptors[DRAFT_STATE];\n    let keys = Reflect.ownKeys(descriptors);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      const desc = descriptors[key];\n      if (desc.writable === false) {\n        desc.writable = true;\n        desc.configurable = true;\n      }\n      if (desc.get || desc.set)\n        descriptors[key] = {\n          configurable: true,\n          writable: true,\n          // could live with !!desc.set as well here...\n          enumerable: desc.enumerable,\n          value: base[key]\n        };\n    }\n    return Object.create(getPrototypeOf(base), descriptors);\n  } else {\n    const proto = getPrototypeOf(base);\n    if (proto !== null && isPlain) {\n      return { ...base };\n    }\n    const obj = Object.create(proto);\n    return Object.assign(obj, base);\n  }\n}\nfunction freeze(obj, deep = false) {\n  if (isFrozen(obj) || isDraft(obj) || !isDraftable(obj))\n    return obj;\n  if (getArchtype(obj) > 1) {\n    obj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections;\n  }\n  Object.freeze(obj);\n  if (deep)\n    Object.entries(obj).forEach(([key, value]) => freeze(value, true));\n  return obj;\n}\nfunction dontMutateFrozenCollections() {\n  die(2);\n}\nfunction isFrozen(obj) {\n  return Object.isFrozen(obj);\n}\n\n// src/utils/plugins.ts\nvar plugins = {};\nfunction getPlugin(pluginKey) {\n  const plugin = plugins[pluginKey];\n  if (!plugin) {\n    die(0, pluginKey);\n  }\n  return plugin;\n}\nfunction loadPlugin(pluginKey, implementation) {\n  if (!plugins[pluginKey])\n    plugins[pluginKey] = implementation;\n}\n\n// src/core/scope.ts\nvar currentScope;\nfunction getCurrentScope() {\n  return currentScope;\n}\nfunction createScope(parent_, immer_) {\n  return {\n    drafts_: [],\n    parent_,\n    immer_,\n    // Whenever the modified draft contains a draft from another scope, we\n    // need to prevent auto-freezing so the unowned draft can be finalized.\n    canAutoFreeze_: true,\n    unfinalizedDrafts_: 0\n  };\n}\nfunction usePatchesInScope(scope, patchListener) {\n  if (patchListener) {\n    getPlugin(\"Patches\");\n    scope.patches_ = [];\n    scope.inversePatches_ = [];\n    scope.patchListener_ = patchListener;\n  }\n}\nfunction revokeScope(scope) {\n  leaveScope(scope);\n  scope.drafts_.forEach(revokeDraft);\n  scope.drafts_ = null;\n}\nfunction leaveScope(scope) {\n  if (scope === currentScope) {\n    currentScope = scope.parent_;\n  }\n}\nfunction enterScope(immer2) {\n  return currentScope = createScope(currentScope, immer2);\n}\nfunction revokeDraft(draft) {\n  const state = draft[DRAFT_STATE];\n  if (state.type_ === 0 /* Object */ || state.type_ === 1 /* Array */)\n    state.revoke_();\n  else\n    state.revoked_ = true;\n}\n\n// src/core/finalize.ts\nfunction processResult(result, scope) {\n  scope.unfinalizedDrafts_ = scope.drafts_.length;\n  const baseDraft = scope.drafts_[0];\n  const isReplaced = result !== void 0 && result !== baseDraft;\n  if (isReplaced) {\n    if (baseDraft[DRAFT_STATE].modified_) {\n      revokeScope(scope);\n      die(4);\n    }\n    if (isDraftable(result)) {\n      result = finalize(scope, result);\n      if (!scope.parent_)\n        maybeFreeze(scope, result);\n    }\n    if (scope.patches_) {\n      getPlugin(\"Patches\").generateReplacementPatches_(\n        baseDraft[DRAFT_STATE].base_,\n        result,\n        scope.patches_,\n        scope.inversePatches_\n      );\n    }\n  } else {\n    result = finalize(scope, baseDraft, []);\n  }\n  revokeScope(scope);\n  if (scope.patches_) {\n    scope.patchListener_(scope.patches_, scope.inversePatches_);\n  }\n  return result !== NOTHING ? result : void 0;\n}\nfunction finalize(rootScope, value, path) {\n  if (isFrozen(value))\n    return value;\n  const state = value[DRAFT_STATE];\n  if (!state) {\n    each(\n      value,\n      (key, childValue) => finalizeProperty(rootScope, state, value, key, childValue, path)\n    );\n    return value;\n  }\n  if (state.scope_ !== rootScope)\n    return value;\n  if (!state.modified_) {\n    maybeFreeze(rootScope, state.base_, true);\n    return state.base_;\n  }\n  if (!state.finalized_) {\n    state.finalized_ = true;\n    state.scope_.unfinalizedDrafts_--;\n    const result = state.copy_;\n    let resultEach = result;\n    let isSet2 = false;\n    if (state.type_ === 3 /* Set */) {\n      resultEach = new Set(result);\n      result.clear();\n      isSet2 = true;\n    }\n    each(\n      resultEach,\n      (key, childValue) => finalizeProperty(rootScope, state, result, key, childValue, path, isSet2)\n    );\n    maybeFreeze(rootScope, result, false);\n    if (path && rootScope.patches_) {\n      getPlugin(\"Patches\").generatePatches_(\n        state,\n        path,\n        rootScope.patches_,\n        rootScope.inversePatches_\n      );\n    }\n  }\n  return state.copy_;\n}\nfunction finalizeProperty(rootScope, parentState, targetObject, prop, childValue, rootPath, targetIsSet) {\n  if (process.env.NODE_ENV !== \"production\" && childValue === targetObject)\n    die(5);\n  if (isDraft(childValue)) {\n    const path = rootPath && parentState && parentState.type_ !== 3 /* Set */ && // Set objects are atomic since they have no keys.\n    !has(parentState.assigned_, prop) ? rootPath.concat(prop) : void 0;\n    const res = finalize(rootScope, childValue, path);\n    set(targetObject, prop, res);\n    if (isDraft(res)) {\n      rootScope.canAutoFreeze_ = false;\n    } else\n      return;\n  } else if (targetIsSet) {\n    targetObject.add(childValue);\n  }\n  if (isDraftable(childValue) && !isFrozen(childValue)) {\n    if (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n      return;\n    }\n    finalize(rootScope, childValue);\n    if ((!parentState || !parentState.scope_.parent_) && typeof prop !== \"symbol\" && Object.prototype.propertyIsEnumerable.call(targetObject, prop))\n      maybeFreeze(rootScope, childValue);\n  }\n}\nfunction maybeFreeze(scope, value, deep = false) {\n  if (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n    freeze(value, deep);\n  }\n}\n\n// src/core/proxy.ts\nfunction createProxyProxy(base, parent) {\n  const isArray = Array.isArray(base);\n  const state = {\n    type_: isArray ? 1 /* Array */ : 0 /* Object */,\n    // Track which produce call this is associated with.\n    scope_: parent ? parent.scope_ : getCurrentScope(),\n    // True for both shallow and deep changes.\n    modified_: false,\n    // Used during finalization.\n    finalized_: false,\n    // Track which properties have been assigned (true) or deleted (false).\n    assigned_: {},\n    // The parent draft state.\n    parent_: parent,\n    // The base state.\n    base_: base,\n    // The base proxy.\n    draft_: null,\n    // set below\n    // The base copy with any updated values.\n    copy_: null,\n    // Called by the `produce` function.\n    revoke_: null,\n    isManual_: false\n  };\n  let target = state;\n  let traps = objectTraps;\n  if (isArray) {\n    target = [state];\n    traps = arrayTraps;\n  }\n  const { revoke, proxy } = Proxy.revocable(target, traps);\n  state.draft_ = proxy;\n  state.revoke_ = revoke;\n  return proxy;\n}\nvar objectTraps = {\n  get(state, prop) {\n    if (prop === DRAFT_STATE)\n      return state;\n    const source = latest(state);\n    if (!has(source, prop)) {\n      return readPropFromProto(state, source, prop);\n    }\n    const value = source[prop];\n    if (state.finalized_ || !isDraftable(value)) {\n      return value;\n    }\n    if (value === peek(state.base_, prop)) {\n      prepareCopy(state);\n      return state.copy_[prop] = createProxy(value, state);\n    }\n    return value;\n  },\n  has(state, prop) {\n    return prop in latest(state);\n  },\n  ownKeys(state) {\n    return Reflect.ownKeys(latest(state));\n  },\n  set(state, prop, value) {\n    const desc = getDescriptorFromProto(latest(state), prop);\n    if (desc?.set) {\n      desc.set.call(state.draft_, value);\n      return true;\n    }\n    if (!state.modified_) {\n      const current2 = peek(latest(state), prop);\n      const currentState = current2?.[DRAFT_STATE];\n      if (currentState && currentState.base_ === value) {\n        state.copy_[prop] = value;\n        state.assigned_[prop] = false;\n        return true;\n      }\n      if (is(value, current2) && (value !== void 0 || has(state.base_, prop)))\n        return true;\n      prepareCopy(state);\n      markChanged(state);\n    }\n    if (state.copy_[prop] === value && // special case: handle new props with value 'undefined'\n    (value !== void 0 || prop in state.copy_) || // special case: NaN\n    Number.isNaN(value) && Number.isNaN(state.copy_[prop]))\n      return true;\n    state.copy_[prop] = value;\n    state.assigned_[prop] = true;\n    return true;\n  },\n  deleteProperty(state, prop) {\n    if (peek(state.base_, prop) !== void 0 || prop in state.base_) {\n      state.assigned_[prop] = false;\n      prepareCopy(state);\n      markChanged(state);\n    } else {\n      delete state.assigned_[prop];\n    }\n    if (state.copy_) {\n      delete state.copy_[prop];\n    }\n    return true;\n  },\n  // Note: We never coerce `desc.value` into an Immer draft, because we can't make\n  // the same guarantee in ES5 mode.\n  getOwnPropertyDescriptor(state, prop) {\n    const owner = latest(state);\n    const desc = Reflect.getOwnPropertyDescriptor(owner, prop);\n    if (!desc)\n      return desc;\n    return {\n      writable: true,\n      configurable: state.type_ !== 1 /* Array */ || prop !== \"length\",\n      enumerable: desc.enumerable,\n      value: owner[prop]\n    };\n  },\n  defineProperty() {\n    die(11);\n  },\n  getPrototypeOf(state) {\n    return getPrototypeOf(state.base_);\n  },\n  setPrototypeOf() {\n    die(12);\n  }\n};\nvar arrayTraps = {};\neach(objectTraps, (key, fn) => {\n  arrayTraps[key] = function() {\n    arguments[0] = arguments[0][0];\n    return fn.apply(this, arguments);\n  };\n});\narrayTraps.deleteProperty = function(state, prop) {\n  if (process.env.NODE_ENV !== \"production\" && isNaN(parseInt(prop)))\n    die(13);\n  return arrayTraps.set.call(this, state, prop, void 0);\n};\narrayTraps.set = function(state, prop, value) {\n  if (process.env.NODE_ENV !== \"production\" && prop !== \"length\" && isNaN(parseInt(prop)))\n    die(14);\n  return objectTraps.set.call(this, state[0], prop, value, state[0]);\n};\nfunction peek(draft, prop) {\n  const state = draft[DRAFT_STATE];\n  const source = state ? latest(state) : draft;\n  return source[prop];\n}\nfunction readPropFromProto(state, source, prop) {\n  const desc = getDescriptorFromProto(source, prop);\n  return desc ? `value` in desc ? desc.value : (\n    // This is a very special case, if the prop is a getter defined by the\n    // prototype, we should invoke it with the draft as context!\n    desc.get?.call(state.draft_)\n  ) : void 0;\n}\nfunction getDescriptorFromProto(source, prop) {\n  if (!(prop in source))\n    return void 0;\n  let proto = getPrototypeOf(source);\n  while (proto) {\n    const desc = Object.getOwnPropertyDescriptor(proto, prop);\n    if (desc)\n      return desc;\n    proto = getPrototypeOf(proto);\n  }\n  return void 0;\n}\nfunction markChanged(state) {\n  if (!state.modified_) {\n    state.modified_ = true;\n    if (state.parent_) {\n      markChanged(state.parent_);\n    }\n  }\n}\nfunction prepareCopy(state) {\n  if (!state.copy_) {\n    state.copy_ = shallowCopy(\n      state.base_,\n      state.scope_.immer_.useStrictShallowCopy_\n    );\n  }\n}\n\n// src/core/immerClass.ts\nvar Immer2 = class {\n  constructor(config) {\n    this.autoFreeze_ = true;\n    this.useStrictShallowCopy_ = false;\n    /**\n     * The `produce` function takes a value and a \"recipe function\" (whose\n     * return value often depends on the base state). The recipe function is\n     * free to mutate its first argument however it wants. All mutations are\n     * only ever applied to a __copy__ of the base state.\n     *\n     * Pass only a function to create a \"curried producer\" which relieves you\n     * from passing the recipe function every time.\n     *\n     * Only plain objects and arrays are made mutable. All other objects are\n     * considered uncopyable.\n     *\n     * Note: This function is __bound__ to its `Immer` instance.\n     *\n     * @param {any} base - the initial state\n     * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified\n     * @param {Function} patchListener - optional function that will be called with all the patches produced here\n     * @returns {any} a new state, or the initial state if nothing was modified\n     */\n    this.produce = (base, recipe, patchListener) => {\n      if (typeof base === \"function\" && typeof recipe !== \"function\") {\n        const defaultBase = recipe;\n        recipe = base;\n        const self = this;\n        return function curriedProduce(base2 = defaultBase, ...args) {\n          return self.produce(base2, (draft) => recipe.call(this, draft, ...args));\n        };\n      }\n      if (typeof recipe !== \"function\")\n        die(6);\n      if (patchListener !== void 0 && typeof patchListener !== \"function\")\n        die(7);\n      let result;\n      if (isDraftable(base)) {\n        const scope = enterScope(this);\n        const proxy = createProxy(base, void 0);\n        let hasError = true;\n        try {\n          result = recipe(proxy);\n          hasError = false;\n        } finally {\n          if (hasError)\n            revokeScope(scope);\n          else\n            leaveScope(scope);\n        }\n        usePatchesInScope(scope, patchListener);\n        return processResult(result, scope);\n      } else if (!base || typeof base !== \"object\") {\n        result = recipe(base);\n        if (result === void 0)\n          result = base;\n        if (result === NOTHING)\n          result = void 0;\n        if (this.autoFreeze_)\n          freeze(result, true);\n        if (patchListener) {\n          const p = [];\n          const ip = [];\n          getPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip);\n          patchListener(p, ip);\n        }\n        return result;\n      } else\n        die(1, base);\n    };\n    this.produceWithPatches = (base, recipe) => {\n      if (typeof base === \"function\") {\n        return (state, ...args) => this.produceWithPatches(state, (draft) => base(draft, ...args));\n      }\n      let patches, inversePatches;\n      const result = this.produce(base, recipe, (p, ip) => {\n        patches = p;\n        inversePatches = ip;\n      });\n      return [result, patches, inversePatches];\n    };\n    if (typeof config?.autoFreeze === \"boolean\")\n      this.setAutoFreeze(config.autoFreeze);\n    if (typeof config?.useStrictShallowCopy === \"boolean\")\n      this.setUseStrictShallowCopy(config.useStrictShallowCopy);\n  }\n  createDraft(base) {\n    if (!isDraftable(base))\n      die(8);\n    if (isDraft(base))\n      base = current(base);\n    const scope = enterScope(this);\n    const proxy = createProxy(base, void 0);\n    proxy[DRAFT_STATE].isManual_ = true;\n    leaveScope(scope);\n    return proxy;\n  }\n  finishDraft(draft, patchListener) {\n    const state = draft && draft[DRAFT_STATE];\n    if (!state || !state.isManual_)\n      die(9);\n    const { scope_: scope } = state;\n    usePatchesInScope(scope, patchListener);\n    return processResult(void 0, scope);\n  }\n  /**\n   * Pass true to automatically freeze all copies created by Immer.\n   *\n   * By default, auto-freezing is enabled.\n   */\n  setAutoFreeze(value) {\n    this.autoFreeze_ = value;\n  }\n  /**\n   * Pass true to enable strict shallow copy.\n   *\n   * By default, immer does not copy the object descriptors such as getter, setter and non-enumrable properties.\n   */\n  setUseStrictShallowCopy(value) {\n    this.useStrictShallowCopy_ = value;\n  }\n  applyPatches(base, patches) {\n    let i;\n    for (i = patches.length - 1; i >= 0; i--) {\n      const patch = patches[i];\n      if (patch.path.length === 0 && patch.op === \"replace\") {\n        base = patch.value;\n        break;\n      }\n    }\n    if (i > -1) {\n      patches = patches.slice(i + 1);\n    }\n    const applyPatchesImpl = getPlugin(\"Patches\").applyPatches_;\n    if (isDraft(base)) {\n      return applyPatchesImpl(base, patches);\n    }\n    return this.produce(\n      base,\n      (draft) => applyPatchesImpl(draft, patches)\n    );\n  }\n};\nfunction createProxy(value, parent) {\n  const draft = isMap(value) ? getPlugin(\"MapSet\").proxyMap_(value, parent) : isSet(value) ? getPlugin(\"MapSet\").proxySet_(value, parent) : createProxyProxy(value, parent);\n  const scope = parent ? parent.scope_ : getCurrentScope();\n  scope.drafts_.push(draft);\n  return draft;\n}\n\n// src/core/current.ts\nfunction current(value) {\n  if (!isDraft(value))\n    die(10, value);\n  return currentImpl(value);\n}\nfunction currentImpl(value) {\n  if (!isDraftable(value) || isFrozen(value))\n    return value;\n  const state = value[DRAFT_STATE];\n  let copy;\n  if (state) {\n    if (!state.modified_)\n      return state.base_;\n    state.finalized_ = true;\n    copy = shallowCopy(value, state.scope_.immer_.useStrictShallowCopy_);\n  } else {\n    copy = shallowCopy(value, true);\n  }\n  each(copy, (key, childValue) => {\n    set(copy, key, currentImpl(childValue));\n  });\n  if (state) {\n    state.finalized_ = false;\n  }\n  return copy;\n}\n\n// src/plugins/patches.ts\nfunction enablePatches() {\n  const errorOffset = 16;\n  if (process.env.NODE_ENV !== \"production\") {\n    errors.push(\n      'Sets cannot have \"replace\" patches.',\n      function(op) {\n        return \"Unsupported patch operation: \" + op;\n      },\n      function(path) {\n        return \"Cannot apply patch, path doesn't resolve: \" + path;\n      },\n      \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n    );\n  }\n  const REPLACE = \"replace\";\n  const ADD = \"add\";\n  const REMOVE = \"remove\";\n  function generatePatches_(state, basePath, patches, inversePatches) {\n    switch (state.type_) {\n      case 0 /* Object */:\n      case 2 /* Map */:\n        return generatePatchesFromAssigned(\n          state,\n          basePath,\n          patches,\n          inversePatches\n        );\n      case 1 /* Array */:\n        return generateArrayPatches(state, basePath, patches, inversePatches);\n      case 3 /* Set */:\n        return generateSetPatches(\n          state,\n          basePath,\n          patches,\n          inversePatches\n        );\n    }\n  }\n  function generateArrayPatches(state, basePath, patches, inversePatches) {\n    let { base_, assigned_ } = state;\n    let copy_ = state.copy_;\n    if (copy_.length < base_.length) {\n      ;\n      [base_, copy_] = [copy_, base_];\n      [patches, inversePatches] = [inversePatches, patches];\n    }\n    for (let i = 0; i < base_.length; i++) {\n      if (assigned_[i] && copy_[i] !== base_[i]) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: REPLACE,\n          path,\n          // Need to maybe clone it, as it can in fact be the original value\n          // due to the base/copy inversion at the start of this function\n          value: clonePatchValueIfNeeded(copy_[i])\n        });\n        inversePatches.push({\n          op: REPLACE,\n          path,\n          value: clonePatchValueIfNeeded(base_[i])\n        });\n      }\n    }\n    for (let i = base_.length; i < copy_.length; i++) {\n      const path = basePath.concat([i]);\n      patches.push({\n        op: ADD,\n        path,\n        // Need to maybe clone it, as it can in fact be the original value\n        // due to the base/copy inversion at the start of this function\n        value: clonePatchValueIfNeeded(copy_[i])\n      });\n    }\n    for (let i = copy_.length - 1; base_.length <= i; --i) {\n      const path = basePath.concat([i]);\n      inversePatches.push({\n        op: REMOVE,\n        path\n      });\n    }\n  }\n  function generatePatchesFromAssigned(state, basePath, patches, inversePatches) {\n    const { base_, copy_ } = state;\n    each(state.assigned_, (key, assignedValue) => {\n      const origValue = get(base_, key);\n      const value = get(copy_, key);\n      const op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD;\n      if (origValue === value && op === REPLACE)\n        return;\n      const path = basePath.concat(key);\n      patches.push(op === REMOVE ? { op, path } : { op, path, value });\n      inversePatches.push(\n        op === ADD ? { op: REMOVE, path } : op === REMOVE ? { op: ADD, path, value: clonePatchValueIfNeeded(origValue) } : { op: REPLACE, path, value: clonePatchValueIfNeeded(origValue) }\n      );\n    });\n  }\n  function generateSetPatches(state, basePath, patches, inversePatches) {\n    let { base_, copy_ } = state;\n    let i = 0;\n    base_.forEach((value) => {\n      if (!copy_.has(value)) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: REMOVE,\n          path,\n          value\n        });\n        inversePatches.unshift({\n          op: ADD,\n          path,\n          value\n        });\n      }\n      i++;\n    });\n    i = 0;\n    copy_.forEach((value) => {\n      if (!base_.has(value)) {\n        const path = basePath.concat([i]);\n        patches.push({\n          op: ADD,\n          path,\n          value\n        });\n        inversePatches.unshift({\n          op: REMOVE,\n          path,\n          value\n        });\n      }\n      i++;\n    });\n  }\n  function generateReplacementPatches_(baseValue, replacement, patches, inversePatches) {\n    patches.push({\n      op: REPLACE,\n      path: [],\n      value: replacement === NOTHING ? void 0 : replacement\n    });\n    inversePatches.push({\n      op: REPLACE,\n      path: [],\n      value: baseValue\n    });\n  }\n  function applyPatches_(draft, patches) {\n    patches.forEach((patch) => {\n      const { path, op } = patch;\n      let base = draft;\n      for (let i = 0; i < path.length - 1; i++) {\n        const parentType = getArchtype(base);\n        let p = path[i];\n        if (typeof p !== \"string\" && typeof p !== \"number\") {\n          p = \"\" + p;\n        }\n        if ((parentType === 0 /* Object */ || parentType === 1 /* Array */) && (p === \"__proto__\" || p === \"constructor\"))\n          die(errorOffset + 3);\n        if (typeof base === \"function\" && p === \"prototype\")\n          die(errorOffset + 3);\n        base = get(base, p);\n        if (typeof base !== \"object\")\n          die(errorOffset + 2, path.join(\"/\"));\n      }\n      const type = getArchtype(base);\n      const value = deepClonePatchValue(patch.value);\n      const key = path[path.length - 1];\n      switch (op) {\n        case REPLACE:\n          switch (type) {\n            case 2 /* Map */:\n              return base.set(key, value);\n            case 3 /* Set */:\n              die(errorOffset);\n            default:\n              return base[key] = value;\n          }\n        case ADD:\n          switch (type) {\n            case 1 /* Array */:\n              return key === \"-\" ? base.push(value) : base.splice(key, 0, value);\n            case 2 /* Map */:\n              return base.set(key, value);\n            case 3 /* Set */:\n              return base.add(value);\n            default:\n              return base[key] = value;\n          }\n        case REMOVE:\n          switch (type) {\n            case 1 /* Array */:\n              return base.splice(key, 1);\n            case 2 /* Map */:\n              return base.delete(key);\n            case 3 /* Set */:\n              return base.delete(patch.value);\n            default:\n              return delete base[key];\n          }\n        default:\n          die(errorOffset + 1, op);\n      }\n    });\n    return draft;\n  }\n  function deepClonePatchValue(obj) {\n    if (!isDraftable(obj))\n      return obj;\n    if (Array.isArray(obj))\n      return obj.map(deepClonePatchValue);\n    if (isMap(obj))\n      return new Map(\n        Array.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n      );\n    if (isSet(obj))\n      return new Set(Array.from(obj).map(deepClonePatchValue));\n    const cloned = Object.create(getPrototypeOf(obj));\n    for (const key in obj)\n      cloned[key] = deepClonePatchValue(obj[key]);\n    if (has(obj, DRAFTABLE))\n      cloned[DRAFTABLE] = obj[DRAFTABLE];\n    return cloned;\n  }\n  function clonePatchValueIfNeeded(obj) {\n    if (isDraft(obj)) {\n      return deepClonePatchValue(obj);\n    } else\n      return obj;\n  }\n  loadPlugin(\"Patches\", {\n    applyPatches_,\n    generatePatches_,\n    generateReplacementPatches_\n  });\n}\n\n// src/plugins/mapset.ts\nfunction enableMapSet() {\n  class DraftMap extends Map {\n    constructor(target, parent) {\n      super();\n      this[DRAFT_STATE] = {\n        type_: 2 /* Map */,\n        parent_: parent,\n        scope_: parent ? parent.scope_ : getCurrentScope(),\n        modified_: false,\n        finalized_: false,\n        copy_: void 0,\n        assigned_: void 0,\n        base_: target,\n        draft_: this,\n        isManual_: false,\n        revoked_: false\n      };\n    }\n    get size() {\n      return latest(this[DRAFT_STATE]).size;\n    }\n    has(key) {\n      return latest(this[DRAFT_STATE]).has(key);\n    }\n    set(key, value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!latest(state).has(key) || latest(state).get(key) !== value) {\n        prepareMapCopy(state);\n        markChanged(state);\n        state.assigned_.set(key, true);\n        state.copy_.set(key, value);\n        state.assigned_.set(key, true);\n      }\n      return this;\n    }\n    delete(key) {\n      if (!this.has(key)) {\n        return false;\n      }\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareMapCopy(state);\n      markChanged(state);\n      if (state.base_.has(key)) {\n        state.assigned_.set(key, false);\n      } else {\n        state.assigned_.delete(key);\n      }\n      state.copy_.delete(key);\n      return true;\n    }\n    clear() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (latest(state).size) {\n        prepareMapCopy(state);\n        markChanged(state);\n        state.assigned_ = /* @__PURE__ */ new Map();\n        each(state.base_, (key) => {\n          state.assigned_.set(key, false);\n        });\n        state.copy_.clear();\n      }\n    }\n    forEach(cb, thisArg) {\n      const state = this[DRAFT_STATE];\n      latest(state).forEach((_value, key, _map) => {\n        cb.call(thisArg, this.get(key), key, this);\n      });\n    }\n    get(key) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      const value = latest(state).get(key);\n      if (state.finalized_ || !isDraftable(value)) {\n        return value;\n      }\n      if (value !== state.base_.get(key)) {\n        return value;\n      }\n      const draft = createProxy(value, state);\n      prepareMapCopy(state);\n      state.copy_.set(key, draft);\n      return draft;\n    }\n    keys() {\n      return latest(this[DRAFT_STATE]).keys();\n    }\n    values() {\n      const iterator = this.keys();\n      return {\n        [Symbol.iterator]: () => this.values(),\n        next: () => {\n          const r = iterator.next();\n          if (r.done)\n            return r;\n          const value = this.get(r.value);\n          return {\n            done: false,\n            value\n          };\n        }\n      };\n    }\n    entries() {\n      const iterator = this.keys();\n      return {\n        [Symbol.iterator]: () => this.entries(),\n        next: () => {\n          const r = iterator.next();\n          if (r.done)\n            return r;\n          const value = this.get(r.value);\n          return {\n            done: false,\n            value: [r.value, value]\n          };\n        }\n      };\n    }\n    [(DRAFT_STATE, Symbol.iterator)]() {\n      return this.entries();\n    }\n  }\n  function proxyMap_(target, parent) {\n    return new DraftMap(target, parent);\n  }\n  function prepareMapCopy(state) {\n    if (!state.copy_) {\n      state.assigned_ = /* @__PURE__ */ new Map();\n      state.copy_ = new Map(state.base_);\n    }\n  }\n  class DraftSet extends Set {\n    constructor(target, parent) {\n      super();\n      this[DRAFT_STATE] = {\n        type_: 3 /* Set */,\n        parent_: parent,\n        scope_: parent ? parent.scope_ : getCurrentScope(),\n        modified_: false,\n        finalized_: false,\n        copy_: void 0,\n        base_: target,\n        draft_: this,\n        drafts_: /* @__PURE__ */ new Map(),\n        revoked_: false,\n        isManual_: false\n      };\n    }\n    get size() {\n      return latest(this[DRAFT_STATE]).size;\n    }\n    has(value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!state.copy_) {\n        return state.base_.has(value);\n      }\n      if (state.copy_.has(value))\n        return true;\n      if (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n        return true;\n      return false;\n    }\n    add(value) {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (!this.has(value)) {\n        prepareSetCopy(state);\n        markChanged(state);\n        state.copy_.add(value);\n      }\n      return this;\n    }\n    delete(value) {\n      if (!this.has(value)) {\n        return false;\n      }\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      markChanged(state);\n      return state.copy_.delete(value) || (state.drafts_.has(value) ? state.copy_.delete(state.drafts_.get(value)) : (\n        /* istanbul ignore next */\n        false\n      ));\n    }\n    clear() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      if (latest(state).size) {\n        prepareSetCopy(state);\n        markChanged(state);\n        state.copy_.clear();\n      }\n    }\n    values() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      return state.copy_.values();\n    }\n    entries() {\n      const state = this[DRAFT_STATE];\n      assertUnrevoked(state);\n      prepareSetCopy(state);\n      return state.copy_.entries();\n    }\n    keys() {\n      return this.values();\n    }\n    [(DRAFT_STATE, Symbol.iterator)]() {\n      return this.values();\n    }\n    forEach(cb, thisArg) {\n      const iterator = this.values();\n      let result = iterator.next();\n      while (!result.done) {\n        cb.call(thisArg, result.value, result.value, this);\n        result = iterator.next();\n      }\n    }\n  }\n  function proxySet_(target, parent) {\n    return new DraftSet(target, parent);\n  }\n  function prepareSetCopy(state) {\n    if (!state.copy_) {\n      state.copy_ = /* @__PURE__ */ new Set();\n      state.base_.forEach((value) => {\n        if (isDraftable(value)) {\n          const draft = createProxy(value, state);\n          state.drafts_.set(value, draft);\n          state.copy_.add(draft);\n        } else {\n          state.copy_.add(value);\n        }\n      });\n    }\n  }\n  function assertUnrevoked(state) {\n    if (state.revoked_)\n      die(3, JSON.stringify(latest(state)));\n  }\n  loadPlugin(\"MapSet\", { proxyMap_, proxySet_ });\n}\n\n// src/immer.ts\nvar immer = new Immer2();\nvar produce = immer.produce;\nvar produceWithPatches = immer.produceWithPatches.bind(\n  immer\n);\nvar setAutoFreeze = immer.setAutoFreeze.bind(immer);\nvar setUseStrictShallowCopy = immer.setUseStrictShallowCopy.bind(immer);\nvar applyPatches = immer.applyPatches.bind(immer);\nvar createDraft = immer.createDraft.bind(immer);\nvar finishDraft = immer.finishDraft.bind(immer);\nfunction castDraft(value) {\n  return value;\n}\nfunction castImmutable(value) {\n  return value;\n}\nexport {\n  Immer2 as Immer,\n  applyPatches,\n  castDraft,\n  castImmutable,\n  createDraft,\n  current,\n  enableMapSet,\n  enablePatches,\n  finishDraft,\n  freeze,\n  DRAFTABLE as immerable,\n  isDraft,\n  isDraftable,\n  NOTHING as nothing,\n  original,\n  produce,\n  produceWithPatches,\n  setAutoFreeze,\n  setUseStrictShallowCopy\n};\n//# sourceMappingURL=immer.mjs.map","import { produce } from 'immer';\n\nconst immerImpl = (initializer) => (set, get, store) => {\n  store.setState = (updater, replace, ...a) => {\n    const nextState = typeof updater === \"function\" ? produce(updater) : updater;\n    return set(nextState, replace, ...a);\n  };\n  return initializer(store.setState, get, store);\n};\nconst immer = immerImpl;\n\nexport { immer };\n"],"names":["createStoreImpl","createState","state","listeners","Set","setState","partial","replace","nextState","Object","is","previousState","assign","forEach","listener","getState","api","getInitialState","initialState","subscribe","add","delete","destroy","clear","useDebugValue","useSyncExternalStoreWithSelector","didWarnAboutEqualityFn","identity","arg","createImpl","createStore","useBoundStore","selector","equalityFn","console","slice","getServerState","useStore","create","createJSONStorage","getStorage","options","storage","_e","getItem","name","_a","parse","str2","JSON","reviver","str","Promise","then","setItem","newValue","stringify","replacer","removeItem","trackedConnections","Map","getTrackedConnectionState","get","fromEntries","entries","stores","map","key","api2","devtools","fn","devtoolsOptions","set","enabled","anonymousActionType","store","extensionConnector","window","__REDUX_DEVTOOLS_EXTENSION__","connection","connectionInformation","type","connect","existingConnection","newConnection","extractConnectionInformation","isRecording","nameOrAction","r","action","send","setStateFromDevtools","a","originalIsRecording","init","store2","dispatchFromDevtools","dispatch","didWarnAboutReservedActionType","originalDispatch","message","payload","parseJsonThen","keys","length","stateFromDevtools","nextLiftedState","lastComputedState","computedStates","stringified","f","parsed","e","subscribeWithSelector","origSubscribe","optListener","currentSlice","nextSlice","previousSlice","fireImmediately","toThenable","input","result","onFulfilled","_onRejected","this","_onFulfilled","catch","onRejected","persist","config","baseOptions","localStorage","serialize","deserialize","partialize","version","merge","persistedState","currentState","hasHydrated","hydrationListeners","finishHydrationListeners","args","thenableSerialize","errorInSync","thenable","serializedValue","savedSetState","configResult","stateFromStorage","hydrate","cb","postRehydrationCallback","onRehydrateStorage","call","bind","storageValue","deserializedStorageValue","migrate","migratedState","_a2","setOptions","newOptions","clearStorage","getOptions","rehydrate","onHydrate","onFinishHydration","oldImpl","_b","migrationResult","migrated","skipHydration","newImpl","die","error","Error","isDraft","value","DRAFT_STATE","isDraftable","isPlainObject","Array","isArray","DRAFTABLE","constructor","isMap","isSet","proto","getPrototypeOf","Ctor","hasOwnProperty","Function","toString","objectCtorString","each","obj","iter","getArchtype","Reflect","ownKeys","entry","index","thing","type_","has","prop","prototype","propOrOldValue","t","target","latest","copy_","base_","shallowCopy","base","strict","isPlain","descriptors","getOwnPropertyDescriptors","i","desc","writable","configurable","enumerable","freeze","deep","isFrozen","dontMutateFrozenCollections","getPlugin","pluginKey","plugin","plugins","getCurrentScope","currentScope","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer2","immer_","canAutoFreeze_","unfinalizedDrafts_","draft","revoke_","revoked_","processResult","baseDraft","modified_","finalize","maybeFreeze","generateReplacementPatches_","NOTHING","rootScope","path","childValue","finalizeProperty","scope_","finalized_","resultEach","isSet2","generatePatches_","parentState","targetObject","rootPath","targetIsSet","res","assigned_","concat","autoFreeze_","propertyIsEnumerable","peek","getDescriptorFromProto","source","getOwnPropertyDescriptor","markChanged","prepareCopy","useStrictShallowCopy_","createProxy","parent","proxyMap_","proxySet_","draft_","isManual_","traps","objectTraps","arrayTraps","revoke","proxy","Proxy","revocable","createProxyProxy","push","current","currentImpl","copy","Symbol","for","readPropFromProto","current2","x","y","Number","isNaN","deleteProperty","owner","defineProperty","setPrototypeOf","arguments","apply","immer","produce","recipe","defaultBase","self","base2","hasError","p","ip","produceWithPatches","patches","inversePatches","autoFreeze","setAutoFreeze","useStrictShallowCopy","setUseStrictShallowCopy","createDraft","finishDraft","applyPatches","patch","op","applyPatchesImpl","applyPatches_","initializer","updater"],"sourceRoot":""}