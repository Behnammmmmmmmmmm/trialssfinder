{"version":3,"file":"js/762.50b601b1.chunk.js","mappings":"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","sources":["webpack://trialsfinder/./src/pages/SearchResultsPage.tsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useSearchParams, Link } from 'react-router-dom';\r\nimport { Trial, Industry } from '../types';\r\nimport { trialsAPI } from '../api/trials';\r\n\r\nexport const SearchResultsPage: React.FC = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const [trials, setTrials] = useState<Trial[]>([]);\r\n  const [industries, setIndustries] = useState<Industry[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filters, setFilters] = useState({\r\n    industry: '',\r\n    location: ''\r\n  });\r\n\r\n  const searchTrials = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const params = {\r\n        search: searchParams.get('q') || '',\r\n        ...filters\r\n      };\r\n      const response = await trialsAPI.list(params);\r\n      const trialsData = response.data.results || response.data;\r\n      setTrials(Array.isArray(trialsData) ? trialsData : []);\r\n    } catch (error) {\r\n      console.error('Failed to search trials:', error);\r\n      setTrials([]);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [searchParams, filters]);\r\n\r\n  useEffect(() => {\r\n    loadIndustries();\r\n    searchTrials();\r\n  }, [searchParams, searchTrials]);\r\n\r\n  const loadIndustries = async () => {\r\n    try {\r\n      const response = await trialsAPI.getIndustries();\r\n      setIndustries(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to load industries:', error);\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    setFilters({ ...filters, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const applyFilters = () => {\r\n    searchTrials();\r\n  };\r\n\r\n  const searchQuery = searchParams.get('q') || '';\r\n\r\n  return (\r\n    <div className=\"container py-8\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">\r\n        Search Results {searchQuery && `for \"${searchQuery}\"`}\r\n      </h1>\r\n      \r\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\r\n        <div className=\"lg:col-span-1\">\r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h3 className=\"text-lg font-semibold\">Filters</h3>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Industry</label>\r\n                <select \r\n                  name=\"industry\" \r\n                  value={filters.industry} \r\n                  onChange={handleFilterChange}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option value=\"\">All Industries</option>\r\n                  {industries.map(industry => (\r\n                    <option key={industry.id} value={industry.id}>\r\n                      {industry.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n              \r\n              <div className=\"form-group\">\r\n                <label className=\"form-label\">Location</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"location\"\r\n                  value={filters.location}\r\n                  onChange={handleFilterChange}\r\n                  placeholder=\"Enter location\"\r\n                  className=\"form-control\"\r\n                />\r\n              </div>\r\n              \r\n              <button \r\n                onClick={applyFilters}\r\n                className=\"btn w-full\"\r\n                data-variant=\"primary\"\r\n              >\r\n                Apply Filters\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"lg:col-span-3\">\r\n          {loading ? (\r\n            <div className=\"flex justify-center py-12\">\r\n              <div className=\"spinner\" data-size=\"lg\"></div>\r\n            </div>\r\n          ) : trials.length === 0 ? (\r\n            <div className=\"card\">\r\n              <div className=\"card-body text-center py-12\">\r\n                <div className=\"text-6xl mb-4\">üîç</div>\r\n                <h2 className=\"text-xl font-semibold mb-2\">No Results Found</h2>\r\n                <p className=\"text-muted mb-6\">\r\n                  Try adjusting your search terms or filters\r\n                </p>\r\n                <Link to=\"/\" className=\"btn\" data-variant=\"primary\">\r\n                  Browse All Trials\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <>\r\n              <p className=\"text-muted mb-4\">\r\n                Found {trials.length} trial{trials.length !== 1 ? 's' : ''}\r\n              </p>\r\n              <div className=\"space-y-4\">\r\n                {trials.map(trial => (\r\n                  <div key={trial.id} className=\"card hover:shadow-lg transition-shadow\">\r\n                    <div className=\"card-body\">\r\n                      <div className=\"flex justify-between items-start\">\r\n                        <div className=\"flex-1\">\r\n                          <h3 className=\"text-xl font-semibold mb-2\">{trial.title}</h3>\r\n                          <p className=\"text-muted mb-3\">{trial.description}</p>\r\n                          <div className=\"flex items-center gap-4 text-sm text-muted\">\r\n                            <span>üè¢ {trial.company_name}</span>\r\n                            <span>üè≠ {trial.industry_name}</span>\r\n                            <span>üìç {trial.location}</span>\r\n                          </div>\r\n                        </div>\r\n                        <Link \r\n                          to={`/trials/${trial.id}`}\r\n                          className=\"btn ml-4\"\r\n                          data-variant=\"outline\"\r\n                        >\r\n                          View Details\r\n                        </Link>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchResultsPage;"],"names":["SearchResultsPage","searchParams","useSearchParams","trials","setTrials","useState","industries","setIndustries","loading","setLoading","filters","setFilters","industry","location","searchTrials","useCallback","async","params","search","get","response","trialsAPI","list","trialsData","data","results","Array","isArray","error","console","useEffect","loadIndustries","getIndustries","handleFilterChange","e","target","name","value","searchQuery","_jsxs","className","children","_jsx","onChange","map","id","type","placeholder","onClick","applyFilters","length","Link","to","_Fragment","trial","title","description","company_name","industry_name"],"sourceRoot":""}