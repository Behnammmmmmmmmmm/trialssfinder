{"version":3,"file":"js/192.9b029546.chunk.js","mappings":"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","sources":["webpack://trialsfinder/./src/pages/UserProfilePage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useAuth } from '../hooks/useStore';\r\nimport { trialsAPI } from '../api/trials';\r\nimport { Industry } from '../types';\r\n\r\nexport const UserProfilePage: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const [favorites, setFavorites] = useState<any[]>([]);\r\n  const [industries, setIndustries] = useState<Industry[]>([]);\r\n  const [localSelectedIndustries, setLocalSelectedIndustries] = useState<number[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [saving, setSaving] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, []);\r\n\r\n  const loadData = async () => {\r\n    try {\r\n      const [favResponse, indResponse, userIndResponse] = await Promise.all([\r\n        trialsAPI.getFavorites(),\r\n        trialsAPI.getIndustries(),\r\n        trialsAPI.getUserIndustries()\r\n      ]);\r\n      \r\n      setFavorites(favResponse.data);\r\n      setIndustries(indResponse.data);\r\n      \r\n      const userIndustryIds = userIndResponse.data.map((ui: any) => ui.industry.id);\r\n      setLocalSelectedIndustries(userIndustryIds);\r\n    } catch (error) {\r\n      console.error('Failed to load data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleIndustryChange = (industryId: number) => {\r\n    setLocalSelectedIndustries(prev =>\r\n      prev.includes(industryId)\r\n        ? prev.filter(id => id !== industryId)\r\n        : [...prev, industryId]\r\n    );\r\n  };\r\n\r\n  const saveIndustries = async () => {\r\n    setSaving(true);\r\n    try {\r\n      await trialsAPI.followIndustries(localSelectedIndustries);\r\n      alert('Industries updated successfully! You will receive notifications for new trials in these industries.');\r\n    } catch (error) {\r\n      console.error('Failed to update industries:', error);\r\n      alert('Failed to update industries. Please try again.');\r\n    } finally {\r\n      setSaving(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"container py-8 flex justify-center\">\r\n        <div className=\"spinner\" data-size=\"lg\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container py-8\">\r\n      <h1 className=\"text-3xl font-bold mb-8\">My Profile</h1>\r\n      \r\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n        <div className=\"lg:col-span-1\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h2 className=\"text-xl font-semibold mb-4\">Account Information</h2>\r\n              <div className=\"space-y-3\">\r\n                <div>\r\n                  <p className=\"text-sm text-muted\">Username</p>\r\n                  <p className=\"font-medium\">{user?.username}</p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-muted\">Email</p>\r\n                  <p className=\"font-medium\">{user?.email}</p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-muted\">Account Type</p>\r\n                  <p className=\"font-medium capitalize\">{user?.user_type}</p>\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm text-muted\">Email Verified</p>\r\n                  <p className=\"font-medium\">\r\n                    {user?.email_verified ? (\r\n                      <span className=\"text-success\">✓ Verified</span>\r\n                    ) : (\r\n                      <span className=\"text-warning\">⚠ Not Verified</span>\r\n                    )}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"lg:col-span-2\">\r\n          <div className=\"card mb-8\">\r\n            <div className=\"card-header\">\r\n              <h2 className=\"text-xl font-semibold\">Follow Industries</h2>\r\n              <p className=\"text-sm text-muted mt-1\">\r\n                Get notified when new trials are posted in these industries\r\n              </p>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3 mb-6\">\r\n                {industries.map((industry: Industry) => (\r\n                  <label key={industry.id} className=\"form-check\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      className=\"form-check-input\"\r\n                      checked={localSelectedIndustries.includes(industry.id)}\r\n                      onChange={() => handleIndustryChange(industry.id)}\r\n                    />\r\n                    <span className=\"form-check-label\">{industry.name}</span>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n              <button \r\n                onClick={saveIndustries}\r\n                className=\"btn\" \r\n                data-variant=\"primary\"\r\n                disabled={saving}\r\n              >\r\n                {saving ? (\r\n                  <span className=\"flex items-center\">\r\n                    <span className=\"spinner mr-2\"></span>\r\n                    Saving...\r\n                  </span>\r\n                ) : (\r\n                  'Save Industry Preferences'\r\n                )}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"card\">\r\n            <div className=\"card-header\">\r\n              <h2 className=\"text-xl font-semibold\">Favorite Trials</h2>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              {favorites.length === 0 ? (\r\n                <p className=\"text-muted text-center py-8\">\r\n                  No favorite trials yet. Start exploring to add favorites!\r\n                </p>\r\n              ) : (\r\n                <div className=\"space-y-4\">\r\n                  {favorites.map(fav => (\r\n                    <div key={fav.id} className=\"border rounded-lg p-4 hover:shadow-md transition-shadow\">\r\n                      <h3 className=\"text-lg font-semibold mb-2\">{fav.trial.title}</h3>\r\n                      <p className=\"text-muted mb-3\">{fav.trial.description}</p>\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <span className=\"text-sm text-muted\">\r\n                          Added {new Date(fav.created_at).toLocaleDateString()}\r\n                        </span>\r\n                        <a \r\n                          href={`/trials/${fav.trial.id}`} \r\n                          className=\"btn\" \r\n                          data-variant=\"outline\"\r\n                          data-size=\"sm\"\r\n                        >\r\n                          View Details\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfilePage;\r\n"],"names":["UserProfilePage","user","useAuth","favorites","setFavorites","useState","industries","setIndustries","localSelectedIndustries","setLocalSelectedIndustries","loading","setLoading","saving","setSaving","useEffect","loadData","async","favResponse","indResponse","userIndResponse","Promise","all","trialsAPI","getFavorites","getIndustries","getUserIndustries","data","userIndustryIds","map","ui","industry","id","error","console","_jsx","className","children","_jsxs","username","email","user_type","email_verified","type","checked","includes","onChange","handleIndustryChange","industryId","prev","filter","name","onClick","followIndustries","alert","disabled","length","fav","trial","title","description","Date","created_at","toLocaleDateString","href"],"sourceRoot":""}