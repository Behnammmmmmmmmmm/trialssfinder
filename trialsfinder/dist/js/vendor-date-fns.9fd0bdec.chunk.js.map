{"version":3,"file":"js/vendor-date-fns.9fd0bdec.chunk.js","mappings":"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","sources":["webpack://trialsfinder/./node_modules/date-fns/locale/fr/_lib/formatDistance.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/fr/_lib/formatLong.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/fr/_lib/formatRelative.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/fr/_lib/localize.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/fr/_lib/match.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/fr.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/_lib/buildMatchPatternFn.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/he/_lib/formatDistance.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/he/_lib/formatLong.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/he/_lib/formatRelative.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/he/_lib/localize.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/he/_lib/match.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/he.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/ar/_lib/formatDistance.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/ar/_lib/formatLong.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/ar/_lib/formatRelative.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/ar/_lib/localize.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/ar/_lib/match.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/ar.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/en-US/_lib/formatDistance.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/en-US/_lib/formatLong.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/en-US/_lib/formatRelative.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/en-US/_lib/localize.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/en-US/_lib/match.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/en-US.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/es/_lib/formatDistance.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/es/_lib/formatLong.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/es/_lib/formatRelative.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/es/_lib/localize.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/es/_lib/match.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/es.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/de/_lib/formatDistance.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/de/_lib/formatLong.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/de/_lib/formatRelative.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/de/_lib/localize.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/de/_lib/match.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/de.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/_lib/buildFormatLongFn.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/_lib/buildMatchFn.mjs","webpack://trialsfinder/./node_modules/date-fns/locale/_lib/buildLocalizeFn.mjs","webpack://trialsfinder/./node_modules/date-fns/_lib/defaultOptions.mjs","webpack://trialsfinder/./node_modules/date-fns/toDate.mjs","webpack://trialsfinder/./node_modules/date-fns/startOfDay.mjs","webpack://trialsfinder/./node_modules/date-fns/_lib/getTimezoneOffsetInMilliseconds.mjs","webpack://trialsfinder/./node_modules/date-fns/constructFrom.mjs","webpack://trialsfinder/./node_modules/date-fns/getDayOfYear.mjs","webpack://trialsfinder/./node_modules/date-fns/differenceInCalendarDays.mjs","webpack://trialsfinder/./node_modules/date-fns/constants.mjs","webpack://trialsfinder/./node_modules/date-fns/startOfYear.mjs","webpack://trialsfinder/./node_modules/date-fns/startOfWeek.mjs","webpack://trialsfinder/./node_modules/date-fns/startOfISOWeek.mjs","webpack://trialsfinder/./node_modules/date-fns/getISOWeekYear.mjs","webpack://trialsfinder/./node_modules/date-fns/getISOWeek.mjs","webpack://trialsfinder/./node_modules/date-fns/startOfISOWeekYear.mjs","webpack://trialsfinder/./node_modules/date-fns/getWeekYear.mjs","webpack://trialsfinder/./node_modules/date-fns/getWeek.mjs","webpack://trialsfinder/./node_modules/date-fns/startOfWeekYear.mjs","webpack://trialsfinder/./node_modules/date-fns/_lib/addLeadingZeros.mjs","webpack://trialsfinder/./node_modules/date-fns/_lib/format/formatters.mjs","webpack://trialsfinder/./node_modules/date-fns/isValid.mjs","webpack://trialsfinder/./node_modules/date-fns/isDate.mjs","webpack://trialsfinder/./node_modules/date-fns/format.mjs","webpack://trialsfinder/./node_modules/date-fns/_lib/protectedTokens.mjs","webpack://trialsfinder/./node_modules/date-fns/_lib/format/lightFormatters.mjs","webpack://trialsfinder/./node_modules/date-fns/_lib/format/longFormatters.mjs"],"sourcesContent":["const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"moins d’une seconde\",\n    other: \"moins de {{count}} secondes\",\n  },\n\n  xSeconds: {\n    one: \"1 seconde\",\n    other: \"{{count}} secondes\",\n  },\n\n  halfAMinute: \"30 secondes\",\n\n  lessThanXMinutes: {\n    one: \"moins d’une minute\",\n    other: \"moins de {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"environ 1 heure\",\n    other: \"environ {{count}} heures\",\n  },\n\n  xHours: {\n    one: \"1 heure\",\n    other: \"{{count}} heures\",\n  },\n\n  xDays: {\n    one: \"1 jour\",\n    other: \"{{count}} jours\",\n  },\n\n  aboutXWeeks: {\n    one: \"environ 1 semaine\",\n    other: \"environ {{count}} semaines\",\n  },\n\n  xWeeks: {\n    one: \"1 semaine\",\n    other: \"{{count}} semaines\",\n  },\n\n  aboutXMonths: {\n    one: \"environ 1 mois\",\n    other: \"environ {{count}} mois\",\n  },\n\n  xMonths: {\n    one: \"1 mois\",\n    other: \"{{count}} mois\",\n  },\n\n  aboutXYears: {\n    one: \"environ 1 an\",\n    other: \"environ {{count}} ans\",\n  },\n\n  xYears: {\n    one: \"1 an\",\n    other: \"{{count}} ans\",\n  },\n\n  overXYears: {\n    one: \"plus d’un an\",\n    other: \"plus de {{count}} ans\",\n  },\n\n  almostXYears: {\n    one: \"presqu’un an\",\n    other: \"presque {{count}} ans\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n  const form = formatDistanceLocale[token];\n  if (typeof form === \"string\") {\n    result = form;\n  } else if (count === 1) {\n    result = form.one;\n  } else {\n    result = form.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"dans \" + result;\n    } else {\n      return \"il y a \" + result;\n    }\n  }\n\n  return result;\n};\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE d MMMM y\",\n  long: \"d MMMM y\",\n  medium: \"d MMM y\",\n  short: \"dd/MM/y\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'à' {{time}}\",\n  long: \"{{date}} 'à' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"eeee 'dernier à' p\",\n  yesterday: \"'hier à' p\",\n  today: \"'aujourd’hui à' p\",\n  tomorrow: \"'demain à' p'\",\n  nextWeek: \"eeee 'prochain à' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"av. J.-C\", \"ap. J.-C\"],\n  abbreviated: [\"av. J.-C\", \"ap. J.-C\"],\n  wide: [\"avant Jésus-Christ\", \"après Jésus-Christ\"],\n};\n\nconst quarterValues = {\n  narrow: [\"T1\", \"T2\", \"T3\", \"T4\"],\n  abbreviated: [\"1er trim.\", \"2ème trim.\", \"3ème trim.\", \"4ème trim.\"],\n  wide: [\"1er trimestre\", \"2ème trimestre\", \"3ème trimestre\", \"4ème trimestre\"],\n};\n\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"janv.\",\n    \"févr.\",\n    \"mars\",\n    \"avr.\",\n    \"mai\",\n    \"juin\",\n    \"juil.\",\n    \"août\",\n    \"sept.\",\n    \"oct.\",\n    \"nov.\",\n    \"déc.\",\n  ],\n\n  wide: [\n    \"janvier\",\n    \"février\",\n    \"mars\",\n    \"avril\",\n    \"mai\",\n    \"juin\",\n    \"juillet\",\n    \"août\",\n    \"septembre\",\n    \"octobre\",\n    \"novembre\",\n    \"décembre\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"D\", \"L\", \"M\", \"M\", \"J\", \"V\", \"S\"],\n  short: [\"di\", \"lu\", \"ma\", \"me\", \"je\", \"ve\", \"sa\"],\n  abbreviated: [\"dim.\", \"lun.\", \"mar.\", \"mer.\", \"jeu.\", \"ven.\", \"sam.\"],\n\n  wide: [\n    \"dimanche\",\n    \"lundi\",\n    \"mardi\",\n    \"mercredi\",\n    \"jeudi\",\n    \"vendredi\",\n    \"samedi\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"minuit\",\n    noon: \"midi\",\n    morning: \"mat.\",\n    afternoon: \"ap.m.\",\n    evening: \"soir\",\n    night: \"mat.\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"minuit\",\n    noon: \"midi\",\n    morning: \"matin\",\n    afternoon: \"après-midi\",\n    evening: \"soir\",\n    night: \"matin\",\n  },\n  wide: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"minuit\",\n    noon: \"midi\",\n    morning: \"du matin\",\n    afternoon: \"de l’après-midi\",\n    evening: \"du soir\",\n    night: \"du matin\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n  const unit = options?.unit;\n\n  if (number === 0) return \"0\";\n\n  const feminineUnits = [\"year\", \"week\", \"hour\", \"minute\", \"second\"];\n  let suffix;\n\n  if (number === 1) {\n    suffix = unit && feminineUnits.includes(unit) ? \"ère\" : \"er\";\n  } else {\n    suffix = \"ème\";\n  }\n\n  return number + suffix;\n};\n\nconst LONG_MONTHS_TOKENS = [\"MMM\", \"MMMM\"];\n\nexport const localize = {\n  preprocessor: (date, parts) => {\n    // Replaces the `do` tokens with `d` when used with long month tokens and the day of the month is greater than one.\n    // Use case \"do MMMM\" => 1er août, 29 août\n    // see https://github.com/date-fns/date-fns/issues/1391\n\n    if (date.getDate() === 1) return parts;\n\n    const hasLongMonthToken = parts.some(\n      (part) => part.isToken && LONG_MONTHS_TOKENS.includes(part.value),\n    );\n\n    if (!hasLongMonthToken) return parts;\n\n    return parts.map((part) =>\n      part.isToken && part.value === \"do\"\n        ? { isToken: true, value: \"d\" }\n        : part,\n    );\n  },\n\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(ième|ère|ème|er|e)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(av\\.J\\.C|ap\\.J\\.C|ap\\.J\\.-C)/i,\n  abbreviated: /^(av\\.J\\.-C|av\\.J-C|apr\\.J\\.-C|apr\\.J-C|ap\\.J-C)/i,\n  wide: /^(avant Jésus-Christ|après Jésus-Christ)/i,\n};\nconst parseEraPatterns = {\n  any: [/^av/i, /^ap/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^T?[1234]/i,\n  abbreviated: /^[1234](er|ème|e)? trim\\.?/i,\n  wide: /^[1234](er|ème|e)? trimestre/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated:\n    /^(janv|févr|mars|avr|mai|juin|juill|juil|août|sept|oct|nov|déc)\\.?/i,\n  wide: /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^av/i,\n    /^ma/i,\n    /^juin/i,\n    /^juil/i,\n    /^ao/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[lmjvsd]/i,\n  short: /^(di|lu|ma|me|je|ve|sa)/i,\n  abbreviated: /^(dim|lun|mar|mer|jeu|ven|sam)\\.?/i,\n  wide: /^(dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],\n  any: [/^di/i, /^lu/i, /^ma/i, /^me/i, /^je/i, /^ve/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|minuit|midi|mat\\.?|ap\\.?m\\.?|soir|nuit)/i,\n  any: /^([ap]\\.?\\s?m\\.?|du matin|de l'après[-\\s]midi|du soir|de la nuit)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^min/i,\n    noon: /^mid/i,\n    morning: /mat/i,\n    afternoon: /ap/i,\n    evening: /soir/i,\n    night: /nuit/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./fr/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./fr/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./fr/_lib/formatRelative.mjs\";\nimport { localize } from \"./fr/_lib/localize.mjs\";\nimport { match } from \"./fr/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary French locale.\n * @language French\n * @iso-639-2 fra\n * @author Jean Dupouy [@izeau](https://github.com/izeau)\n * @author François B [@fbonzon](https://github.com/fbonzon)\n */\nexport const fr = {\n  code: \"fr\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default fr;\n","export function buildMatchPatternFn(args) {\n  return (string, options = {}) => {\n    const matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    const matchedString = matchResult[0];\n\n    const parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    let value = args.valueCallback\n      ? args.valueCallback(parseResult[0])\n      : parseResult[0];\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n    value = options.valueCallback ? options.valueCallback(value) : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"פחות משנייה\",\n    two: \"פחות משתי שניות\",\n    other: \"פחות מ־{{count}} שניות\",\n  },\n\n  xSeconds: {\n    one: \"שנייה\",\n    two: \"שתי שניות\",\n    other: \"{{count}} שניות\",\n  },\n\n  halfAMinute: \"חצי דקה\",\n\n  lessThanXMinutes: {\n    one: \"פחות מדקה\",\n    two: \"פחות משתי דקות\",\n    other: \"פחות מ־{{count}} דקות\",\n  },\n\n  xMinutes: {\n    one: \"דקה\",\n    two: \"שתי דקות\",\n    other: \"{{count}} דקות\",\n  },\n\n  aboutXHours: {\n    one: \"כשעה\",\n    two: \"כשעתיים\",\n    other: \"כ־{{count}} שעות\",\n  },\n\n  xHours: {\n    one: \"שעה\",\n    two: \"שעתיים\",\n    other: \"{{count}} שעות\",\n  },\n\n  xDays: {\n    one: \"יום\",\n    two: \"יומיים\",\n    other: \"{{count}} ימים\",\n  },\n\n  aboutXWeeks: {\n    one: \"כשבוע\",\n    two: \"כשבועיים\",\n    other: \"כ־{{count}} שבועות\",\n  },\n\n  xWeeks: {\n    one: \"שבוע\",\n    two: \"שבועיים\",\n    other: \"{{count}} שבועות\",\n  },\n\n  aboutXMonths: {\n    one: \"כחודש\",\n    two: \"כחודשיים\",\n    other: \"כ־{{count}} חודשים\",\n  },\n\n  xMonths: {\n    one: \"חודש\",\n    two: \"חודשיים\",\n    other: \"{{count}} חודשים\",\n  },\n\n  aboutXYears: {\n    one: \"כשנה\",\n    two: \"כשנתיים\",\n    other: \"כ־{{count}} שנים\",\n  },\n\n  xYears: {\n    one: \"שנה\",\n    two: \"שנתיים\",\n    other: \"{{count}} שנים\",\n  },\n\n  overXYears: {\n    one: \"יותר משנה\",\n    two: \"יותר משנתיים\",\n    other: \"יותר מ־{{count}} שנים\",\n  },\n\n  almostXYears: {\n    one: \"כמעט שנה\",\n    two: \"כמעט שנתיים\",\n    other: \"כמעט {{count}} שנים\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  // Return word instead of `in one day` or `one day ago`\n  if (token === \"xDays\" && options?.addSuffix && count <= 2) {\n    if (options.comparison && options.comparison > 0) {\n      return count === 1 ? \"מחר\" : \"מחרתיים\";\n    }\n\n    return count === 1 ? \"אתמול\" : \"שלשום\";\n  }\n\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else if (count === 2) {\n    result = tokenValue.two;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"בעוד \" + result;\n    } else {\n      return \"לפני \" + result;\n    }\n  }\n\n  return result;\n};\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, d בMMMM y\",\n  long: \"d בMMMM y\",\n  medium: \"d בMMM y\",\n  short: \"d.M.y\",\n};\n\nconst timeFormats = {\n  full: \"H:mm:ss zzzz\",\n  long: \"H:mm:ss z\",\n  medium: \"H:mm:ss\",\n  short: \"H:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'בשעה' {{time}}\",\n  long: \"{{date}} 'בשעה' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"eeee 'שעבר בשעה' p\",\n  yesterday: \"'אתמול בשעה' p\",\n  today: \"'היום בשעה' p\",\n  tomorrow: \"'מחר בשעה' p\",\n  nextWeek: \"eeee 'בשעה' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"לפנה״ס\", \"לספירה\"],\n  abbreviated: [\"לפנה״ס\", \"לספירה\"],\n  wide: [\"לפני הספירה\", \"לספירה\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"רבעון 1\", \"רבעון 2\", \"רבעון 3\", \"רבעון 4\"],\n};\n\nconst monthValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"],\n\n  abbreviated: [\n    \"ינו׳\",\n    \"פבר׳\",\n    \"מרץ\",\n    \"אפר׳\",\n    \"מאי\",\n    \"יוני\",\n    \"יולי\",\n    \"אוג׳\",\n    \"ספט׳\",\n    \"אוק׳\",\n    \"נוב׳\",\n    \"דצמ׳\",\n  ],\n\n  wide: [\n    \"ינואר\",\n    \"פברואר\",\n    \"מרץ\",\n    \"אפריל\",\n    \"מאי\",\n    \"יוני\",\n    \"יולי\",\n    \"אוגוסט\",\n    \"ספטמבר\",\n    \"אוקטובר\",\n    \"נובמבר\",\n    \"דצמבר\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"א׳\", \"ב׳\", \"ג׳\", \"ד׳\", \"ה׳\", \"ו׳\", \"ש׳\"],\n  short: [\"א׳\", \"ב׳\", \"ג׳\", \"ד׳\", \"ה׳\", \"ו׳\", \"ש׳\"],\n  abbreviated: [\n    \"יום א׳\",\n    \"יום ב׳\",\n    \"יום ג׳\",\n    \"יום ד׳\",\n    \"יום ה׳\",\n    \"יום ו׳\",\n    \"שבת\",\n  ],\n\n  wide: [\n    \"יום ראשון\",\n    \"יום שני\",\n    \"יום שלישי\",\n    \"יום רביעי\",\n    \"יום חמישי\",\n    \"יום שישי\",\n    \"יום שבת\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"לפנה״צ\",\n    pm: \"אחה״צ\",\n    midnight: \"חצות\",\n    noon: \"צהריים\",\n    morning: \"בוקר\",\n    afternoon: \"אחר הצהריים\",\n    evening: \"ערב\",\n    night: \"לילה\",\n  },\n  abbreviated: {\n    am: \"לפנה״צ\",\n    pm: \"אחה״צ\",\n    midnight: \"חצות\",\n    noon: \"צהריים\",\n    morning: \"בוקר\",\n    afternoon: \"אחר הצהריים\",\n    evening: \"ערב\",\n    night: \"לילה\",\n  },\n  wide: {\n    am: \"לפנה״צ\",\n    pm: \"אחה״צ\",\n    midnight: \"חצות\",\n    noon: \"צהריים\",\n    morning: \"בוקר\",\n    afternoon: \"אחר הצהריים\",\n    evening: \"ערב\",\n    night: \"לילה\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"לפנה״צ\",\n    pm: \"אחה״צ\",\n    midnight: \"חצות\",\n    noon: \"צהריים\",\n    morning: \"בבוקר\",\n    afternoon: \"בצהריים\",\n    evening: \"בערב\",\n    night: \"בלילה\",\n  },\n  abbreviated: {\n    am: \"לפנה״צ\",\n    pm: \"אחה״צ\",\n    midnight: \"חצות\",\n    noon: \"צהריים\",\n    morning: \"בבוקר\",\n    afternoon: \"אחר הצהריים\",\n    evening: \"בערב\",\n    night: \"בלילה\",\n  },\n  wide: {\n    am: \"לפנה״צ\",\n    pm: \"אחה״צ\",\n    midnight: \"חצות\",\n    noon: \"צהריים\",\n    morning: \"בבוקר\",\n    afternoon: \"אחר הצהריים\",\n    evening: \"בערב\",\n    night: \"בלילה\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n\n  // We only show words till 10\n  if (number <= 0 || number > 10) return String(number);\n\n  const unit = String(options?.unit);\n\n  const isFemale = [\"year\", \"hour\", \"minute\", \"second\"].indexOf(unit) >= 0;\n\n  const male = [\n    \"ראשון\",\n    \"שני\",\n    \"שלישי\",\n    \"רביעי\",\n    \"חמישי\",\n    \"שישי\",\n    \"שביעי\",\n    \"שמיני\",\n    \"תשיעי\",\n    \"עשירי\",\n  ];\n\n  const female = [\n    \"ראשונה\",\n    \"שנייה\",\n    \"שלישית\",\n    \"רביעית\",\n    \"חמישית\",\n    \"שישית\",\n    \"שביעית\",\n    \"שמינית\",\n    \"תשיעית\",\n    \"עשירית\",\n  ];\n\n  const index = number - 1;\n  return isFemale ? female[index] : male[index];\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern =\n  /^(\\d+|(ראשון|שני|שלישי|רביעי|חמישי|שישי|שביעי|שמיני|תשיעי|עשירי|ראשונה|שנייה|שלישית|רביעית|חמישית|שישית|שביעית|שמינית|תשיעית|עשירית))/i;\nconst parseOrdinalNumberPattern = /^(\\d+|רא|שנ|של|רב|ח|שי|שב|שמ|ת|ע)/i;\n\nconst matchEraPatterns = {\n  narrow: /^ל(ספירה|פנה״ס)/i,\n  abbreviated: /^ל(ספירה|פנה״ס)/i,\n  wide: /^ל(פני ה)?ספירה/i,\n};\nconst parseEraPatterns = {\n  any: [/^לפ/i, /^לס/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^רבעון [1234]/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^\\d+/i,\n  abbreviated: /^(ינו|פבר|מרץ|אפר|מאי|יוני|יולי|אוג|ספט|אוק|נוב|דצמ)׳?/i,\n  wide: /^(ינואר|פברואר|מרץ|אפריל|מאי|יוני|יולי|אוגוסט|ספטמבר|אוקטובר|נובמבר|דצמבר)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^1$/i,\n    /^2/i,\n    /^3/i,\n    /^4/i,\n    /^5/i,\n    /^6/i,\n    /^7/i,\n    /^8/i,\n    /^9/i,\n    /^10/i,\n    /^11/i,\n    /^12/i,\n  ],\n\n  any: [\n    /^ינ/i,\n    /^פ/i,\n    /^מר/i,\n    /^אפ/i,\n    /^מא/i,\n    /^יונ/i,\n    /^יול/i,\n    /^אוג/i,\n    /^ס/i,\n    /^אוק/i,\n    /^נ/i,\n    /^ד/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[אבגדהוש]׳/i,\n  short: /^[אבגדהוש]׳/i,\n  abbreviated: /^(שבת|יום (א|ב|ג|ד|ה|ו)׳)/i,\n  wide: /^יום (ראשון|שני|שלישי|רביעי|חמישי|שישי|שבת)/i,\n};\nconst parseDayPatterns = {\n  abbreviated: [/א׳$/i, /ב׳$/i, /ג׳$/i, /ד׳$/i, /ה׳$/i, /ו׳$/i, /^ש/i],\n  wide: [/ן$/i, /ני$/i, /לישי$/i, /עי$/i, /מישי$/i, /שישי$/i, /ת$/i],\n  any: [/^א/i, /^ב/i, /^ג/i, /^ד/i, /^ה/i, /^ו/i, /^ש/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(אחר ה|ב)?(חצות|צהריים|בוקר|ערב|לילה|אחה״צ|לפנה״צ)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^לפ/i,\n    pm: /^אחה/i,\n    midnight: /^ח/i,\n    noon: /^צ/i,\n    morning: /בוקר/i,\n    afternoon: /בצ|אחר/i,\n    evening: /ערב/i,\n    night: /לילה/i,\n  },\n};\n\nconst ordinalName = [\"רא\", \"שנ\", \"של\", \"רב\", \"ח\", \"שי\", \"שב\", \"שמ\", \"ת\", \"ע\"];\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => {\n      const number = parseInt(value, 10);\n      return isNaN(number) ? ordinalName.indexOf(value) + 1 : number;\n    },\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./he/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./he/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./he/_lib/formatRelative.mjs\";\nimport { localize } from \"./he/_lib/localize.mjs\";\nimport { match } from \"./he/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary Hebrew locale.\n * @language Hebrew\n * @iso-639-2 heb\n * @author Nir Lahad [@nirlah](https://github.com/nirlah)\n */\nexport const he = {\n  code: \"he\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default he;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"أقل من ثانية\",\n    two: \"أقل من ثانيتين\",\n    threeToTen: \"أقل من {{count}} ثواني\",\n    other: \"أقل من {{count}} ثانية\",\n  },\n\n  xSeconds: {\n    one: \"ثانية واحدة\",\n    two: \"ثانيتان\",\n    threeToTen: \"{{count}} ثواني\",\n    other: \"{{count}} ثانية\",\n  },\n\n  halfAMinute: \"نصف دقيقة\",\n\n  lessThanXMinutes: {\n    one: \"أقل من دقيقة\",\n    two: \"أقل من دقيقتين\",\n    threeToTen: \"أقل من {{count}} دقائق\",\n    other: \"أقل من {{count}} دقيقة\",\n  },\n\n  xMinutes: {\n    one: \"دقيقة واحدة\",\n    two: \"دقيقتان\",\n    threeToTen: \"{{count}} دقائق\",\n    other: \"{{count}} دقيقة\",\n  },\n\n  aboutXHours: {\n    one: \"ساعة واحدة تقريباً\",\n    two: \"ساعتين تقريبا\",\n    threeToTen: \"{{count}} ساعات تقريباً\",\n    other: \"{{count}} ساعة تقريباً\",\n  },\n\n  xHours: {\n    one: \"ساعة واحدة\",\n    two: \"ساعتان\",\n    threeToTen: \"{{count}} ساعات\",\n    other: \"{{count}} ساعة\",\n  },\n\n  xDays: {\n    one: \"يوم واحد\",\n    two: \"يومان\",\n    threeToTen: \"{{count}} أيام\",\n    other: \"{{count}} يوم\",\n  },\n\n  aboutXWeeks: {\n    one: \"أسبوع واحد تقريبا\",\n    two: \"أسبوعين تقريبا\",\n    threeToTen: \"{{count}} أسابيع تقريبا\",\n    other: \"{{count}} أسبوعا تقريبا\",\n  },\n\n  xWeeks: {\n    one: \"أسبوع واحد\",\n    two: \"أسبوعان\",\n    threeToTen: \"{{count}} أسابيع\",\n    other: \"{{count}} أسبوعا\",\n  },\n\n  aboutXMonths: {\n    one: \"شهر واحد تقريباً\",\n    two: \"شهرين تقريبا\",\n    threeToTen: \"{{count}} أشهر تقريبا\",\n    other: \"{{count}} شهرا تقريباً\",\n  },\n\n  xMonths: {\n    one: \"شهر واحد\",\n    two: \"شهران\",\n    threeToTen: \"{{count}} أشهر\",\n    other: \"{{count}} شهرا\",\n  },\n\n  aboutXYears: {\n    one: \"سنة واحدة تقريباً\",\n    two: \"سنتين تقريبا\",\n    threeToTen: \"{{count}} سنوات تقريباً\",\n    other: \"{{count}} سنة تقريباً\",\n  },\n\n  xYears: {\n    one: \"سنة واحد\",\n    two: \"سنتان\",\n    threeToTen: \"{{count}} سنوات\",\n    other: \"{{count}} سنة\",\n  },\n\n  overXYears: {\n    one: \"أكثر من سنة\",\n    two: \"أكثر من سنتين\",\n    threeToTen: \"أكثر من {{count}} سنوات\",\n    other: \"أكثر من {{count}} سنة\",\n  },\n\n  almostXYears: {\n    one: \"ما يقارب سنة واحدة\",\n    two: \"ما يقارب سنتين\",\n    threeToTen: \"ما يقارب {{count}} سنوات\",\n    other: \"ما يقارب {{count}} سنة\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  const usageGroup = formatDistanceLocale[token];\n  let result;\n  if (typeof usageGroup === \"string\") {\n    result = usageGroup;\n  } else if (count === 1) {\n    result = usageGroup.one;\n  } else if (count === 2) {\n    result = usageGroup.two;\n  } else if (count <= 10) {\n    result = usageGroup.threeToTen.replace(\"{{count}}\", String(count));\n  } else {\n    result = usageGroup.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"خلال \" + result;\n    } else {\n      return \"منذ \" + result;\n    }\n  }\n\n  return result;\n};\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE، do MMMM y\",\n  long: \"do MMMM y\",\n  medium: \"d MMM y\",\n  short: \"dd/MM/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss\",\n  long: \"HH:mm:ss\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'عند الساعة' {{time}}\",\n  long: \"{{date}} 'عند الساعة' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"eeee 'الماضي عند الساعة' p\",\n  yesterday: \"'الأمس عند الساعة' p\",\n  today: \"'اليوم عند الساعة' p\",\n  tomorrow: \"'غدا عند الساعة' p\",\n  nextWeek: \"eeee 'القادم عند الساعة' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token) => formatRelativeLocale[token];\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"ق\", \"ب\"],\n  abbreviated: [\"ق.م.\", \"ب.م.\"],\n  wide: [\"قبل الميلاد\", \"بعد الميلاد\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"ر1\", \"ر2\", \"ر3\", \"ر4\"],\n  wide: [\"الربع الأول\", \"الربع الثاني\", \"الربع الثالث\", \"الربع الرابع\"],\n};\n\nconst monthValues = {\n  narrow: [\"ي\", \"ف\", \"م\", \"أ\", \"م\", \"ي\", \"ي\", \"أ\", \"س\", \"أ\", \"ن\", \"د\"],\n  abbreviated: [\n    \"يناير\",\n    \"فبراير\",\n    \"مارس\",\n    \"أبريل\",\n    \"مايو\",\n    \"يونيو\",\n    \"يوليو\",\n    \"أغسطس\",\n    \"سبتمبر\",\n    \"أكتوبر\",\n    \"نوفمبر\",\n    \"ديسمبر\",\n  ],\n\n  wide: [\n    \"يناير\",\n    \"فبراير\",\n    \"مارس\",\n    \"أبريل\",\n    \"مايو\",\n    \"يونيو\",\n    \"يوليو\",\n    \"أغسطس\",\n    \"سبتمبر\",\n    \"أكتوبر\",\n    \"نوفمبر\",\n    \"ديسمبر\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"ح\", \"ن\", \"ث\", \"ر\", \"خ\", \"ج\", \"س\"],\n  short: [\"أحد\", \"اثنين\", \"ثلاثاء\", \"أربعاء\", \"خميس\", \"جمعة\", \"سبت\"],\n  abbreviated: [\"أحد\", \"اثنين\", \"ثلاثاء\", \"أربعاء\", \"خميس\", \"جمعة\", \"سبت\"],\n\n  wide: [\n    \"الأحد\",\n    \"الاثنين\",\n    \"الثلاثاء\",\n    \"الأربعاء\",\n    \"الخميس\",\n    \"الجمعة\",\n    \"السبت\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"ص\",\n    pm: \"م\",\n    morning: \"الصباح\",\n    noon: \"الظهر\",\n    afternoon: \"بعد الظهر\",\n    evening: \"المساء\",\n    night: \"الليل\",\n    midnight: \"منتصف الليل\",\n  },\n  abbreviated: {\n    am: \"ص\",\n    pm: \"م\",\n    morning: \"الصباح\",\n    noon: \"الظهر\",\n    afternoon: \"بعد الظهر\",\n    evening: \"المساء\",\n    night: \"الليل\",\n    midnight: \"منتصف الليل\",\n  },\n  wide: {\n    am: \"ص\",\n    pm: \"م\",\n    morning: \"الصباح\",\n    noon: \"الظهر\",\n    afternoon: \"بعد الظهر\",\n    evening: \"المساء\",\n    night: \"الليل\",\n    midnight: \"منتصف الليل\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"ص\",\n    pm: \"م\",\n    morning: \"في الصباح\",\n    noon: \"الظهر\",\n    afternoon: \"بعد الظهر\",\n    evening: \"في المساء\",\n    night: \"في الليل\",\n    midnight: \"منتصف الليل\",\n  },\n  abbreviated: {\n    am: \"ص\",\n    pm: \"م\",\n    morning: \"في الصباح\",\n    noon: \"الظهر\",\n    afternoon: \"بعد الظهر\",\n    evening: \"في المساء\",\n    night: \"في الليل\",\n    midnight: \"منتصف الليل\",\n  },\n  wide: {\n    am: \"ص\",\n    pm: \"م\",\n    morning: \"في الصباح\",\n    noon: \"الظهر\",\n    afternoon: \"بعد الظهر\",\n    evening: \"في المساء\",\n    night: \"في الليل\",\n    midnight: \"منتصف الليل\",\n  },\n};\n\nconst ordinalNumber = (num) => String(num);\n\nexport const localize = {\n  ordinalNumber: ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\nimport { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /[قب]/,\n  abbreviated: /[قب]\\.م\\./,\n  wide: /(قبل|بعد) الميلاد/,\n};\nconst parseEraPatterns = {\n  any: [/قبل/, /بعد/],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /ر[1234]/,\n  wide: /الربع (الأول|الثاني|الثالث|الرابع)/,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[أيفمسند]/,\n  abbreviated:\n    /^(يناير|فبراير|مارس|أبريل|مايو|يونيو|يوليو|أغسطس|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/,\n  wide: /^(يناير|فبراير|مارس|أبريل|مايو|يونيو|يوليو|أغسطس|سبتمبر|أكتوبر|نوفمبر|ديسمبر)/,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^ي/i,\n    /^ف/i,\n    /^م/i,\n    /^أ/i,\n    /^م/i,\n    /^ي/i,\n    /^ي/i,\n    /^أ/i,\n    /^س/i,\n    /^أ/i,\n    /^ن/i,\n    /^د/i,\n  ],\n\n  any: [\n    /^يناير/i,\n    /^فبراير/i,\n    /^مارس/i,\n    /^أبريل/i,\n    /^مايو/i,\n    /^يونيو/i,\n    /^يوليو/i,\n    /^أغسطس/i,\n    /^سبتمبر/i,\n    /^أكتوبر/i,\n    /^نوفمبر/i,\n    /^ديسمبر/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[حنثرخجس]/i,\n  short: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,\n  abbreviated: /^(أحد|اثنين|ثلاثاء|أربعاء|خميس|جمعة|سبت)/i,\n  wide: /^(الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^ح/i, /^ن/i, /^ث/i, /^ر/i, /^خ/i, /^ج/i, /^س/i],\n  wide: [\n    /^الأحد/i,\n    /^الاثنين/i,\n    /^الثلاثاء/i,\n    /^الأربعاء/i,\n    /^الخميس/i,\n    /^الجمعة/i,\n    /^السبت/i,\n  ],\n\n  any: [/^أح/i, /^اث/i, /^ث/i, /^أر/i, /^خ/i, /^ج/i, /^س/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(ص|م|منتصف الليل|الظهر|بعد الظهر|في الصباح|في المساء|في الليل)/,\n  any: /^(ص|م|منتصف الليل|الظهر|بعد الظهر|في الصباح|في المساء|في الليل)/,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^ص/,\n    pm: /^م/,\n    midnight: /منتصف الليل/,\n    noon: /الظهر/,\n    afternoon: /بعد الظهر/,\n    morning: /في الصباح/,\n    evening: /في المساء/,\n    night: /في الليل/,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./ar/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./ar/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./ar/_lib/formatRelative.mjs\";\nimport { localize } from \"./ar/_lib/localize.mjs\";\nimport { match } from \"./ar/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary Arabic locale (Modern Standard Arabic - Al-fussha).\n * @language Modern Standard Arabic\n * @iso-639-2 ara\n * @author Abdallah Hassan [@AbdallahAHO](https://github.com/AbdallahAHO)\n * @author Koussay Haj Kacem [@essana3](https://github.com/essana3)\n */\nexport const ar = {\n  code: \"ar\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 6 /* Saturday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default ar;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"less than a second\",\n    other: \"less than {{count}} seconds\",\n  },\n\n  xSeconds: {\n    one: \"1 second\",\n    other: \"{{count}} seconds\",\n  },\n\n  halfAMinute: \"half a minute\",\n\n  lessThanXMinutes: {\n    one: \"less than a minute\",\n    other: \"less than {{count}} minutes\",\n  },\n\n  xMinutes: {\n    one: \"1 minute\",\n    other: \"{{count}} minutes\",\n  },\n\n  aboutXHours: {\n    one: \"about 1 hour\",\n    other: \"about {{count}} hours\",\n  },\n\n  xHours: {\n    one: \"1 hour\",\n    other: \"{{count}} hours\",\n  },\n\n  xDays: {\n    one: \"1 day\",\n    other: \"{{count}} days\",\n  },\n\n  aboutXWeeks: {\n    one: \"about 1 week\",\n    other: \"about {{count}} weeks\",\n  },\n\n  xWeeks: {\n    one: \"1 week\",\n    other: \"{{count}} weeks\",\n  },\n\n  aboutXMonths: {\n    one: \"about 1 month\",\n    other: \"about {{count}} months\",\n  },\n\n  xMonths: {\n    one: \"1 month\",\n    other: \"{{count}} months\",\n  },\n\n  aboutXYears: {\n    one: \"about 1 year\",\n    other: \"about {{count}} years\",\n  },\n\n  xYears: {\n    one: \"1 year\",\n    other: \"{{count}} years\",\n  },\n\n  overXYears: {\n    one: \"over 1 year\",\n    other: \"over {{count}} years\",\n  },\n\n  almostXYears: {\n    one: \"almost 1 year\",\n    other: \"almost {{count}} years\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return result + \" ago\";\n    }\n  }\n\n  return result;\n};\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, MMMM do, y\",\n  long: \"MMMM do, y\",\n  medium: \"MMM d, y\",\n  short: \"MM/dd/yyyy\",\n};\n\nconst timeFormats = {\n  full: \"h:mm:ss a zzzz\",\n  long: \"h:mm:ss a z\",\n  medium: \"h:mm:ss a\",\n  short: \"h:mm a\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"B\", \"A\"],\n  abbreviated: [\"BC\", \"AD\"],\n  wide: [\"Before Christ\", \"Anno Domini\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1st quarter\", \"2nd quarter\", \"3rd quarter\", \"4th quarter\"],\n};\n\n// Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ],\n\n  wide: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"],\n  short: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n  abbreviated: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  wide: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"morning\",\n    afternoon: \"afternoon\",\n    evening: \"evening\",\n    night: \"night\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mi\",\n    noon: \"n\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"midnight\",\n    noon: \"noon\",\n    morning: \"in the morning\",\n    afternoon: \"in the afternoon\",\n    evening: \"in the evening\",\n    night: \"at night\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n\n  // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`.\n  //\n  // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'.\n\n  const rem100 = number % 100;\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + \"st\";\n      case 2:\n        return number + \"nd\";\n      case 3:\n        return number + \"rd\";\n    }\n  }\n  return number + \"th\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i,\n};\nconst parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^ja/i,\n    /^f/i,\n    /^mar/i,\n    /^ap/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./en-US/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./en-US/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./en-US/_lib/formatRelative.mjs\";\nimport { localize } from \"./en-US/_lib/localize.mjs\";\nimport { match } from \"./en-US/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp](https://github.com/kossnocorp)\n * @author Lesha Koss [@leshakoss](https://github.com/leshakoss)\n */\nexport const enUS = {\n  code: \"en-US\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0 /* Sunday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default enUS;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"menos de un segundo\",\n    other: \"menos de {{count}} segundos\",\n  },\n\n  xSeconds: {\n    one: \"1 segundo\",\n    other: \"{{count}} segundos\",\n  },\n\n  halfAMinute: \"medio minuto\",\n\n  lessThanXMinutes: {\n    one: \"menos de un minuto\",\n    other: \"menos de {{count}} minutos\",\n  },\n\n  xMinutes: {\n    one: \"1 minuto\",\n    other: \"{{count}} minutos\",\n  },\n\n  aboutXHours: {\n    one: \"alrededor de 1 hora\",\n    other: \"alrededor de {{count}} horas\",\n  },\n\n  xHours: {\n    one: \"1 hora\",\n    other: \"{{count}} horas\",\n  },\n\n  xDays: {\n    one: \"1 día\",\n    other: \"{{count}} días\",\n  },\n\n  aboutXWeeks: {\n    one: \"alrededor de 1 semana\",\n    other: \"alrededor de {{count}} semanas\",\n  },\n\n  xWeeks: {\n    one: \"1 semana\",\n    other: \"{{count}} semanas\",\n  },\n\n  aboutXMonths: {\n    one: \"alrededor de 1 mes\",\n    other: \"alrededor de {{count}} meses\",\n  },\n\n  xMonths: {\n    one: \"1 mes\",\n    other: \"{{count}} meses\",\n  },\n\n  aboutXYears: {\n    one: \"alrededor de 1 año\",\n    other: \"alrededor de {{count}} años\",\n  },\n\n  xYears: {\n    one: \"1 año\",\n    other: \"{{count}} años\",\n  },\n\n  overXYears: {\n    one: \"más de 1 año\",\n    other: \"más de {{count}} años\",\n  },\n\n  almostXYears: {\n    one: \"casi 1 año\",\n    other: \"casi {{count}} años\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", count.toString());\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"en \" + result;\n    } else {\n      return \"hace \" + result;\n    }\n  }\n\n  return result;\n};\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\nconst dateFormats = {\n  full: \"EEEE, d 'de' MMMM 'de' y\",\n  long: \"d 'de' MMMM 'de' y\",\n  medium: \"d MMM y\",\n  short: \"dd/MM/y\",\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'a las' {{time}}\",\n  long: \"{{date}} 'a las' {{time}}\",\n  medium: \"{{date}}, {{time}}\",\n  short: \"{{date}}, {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'el' eeee 'pasado a la' p\",\n  yesterday: \"'ayer a la' p\",\n  today: \"'hoy a la' p\",\n  tomorrow: \"'mañana a la' p\",\n  nextWeek: \"eeee 'a la' p\",\n  other: \"P\",\n};\n\nconst formatRelativeLocalePlural = {\n  lastWeek: \"'el' eeee 'pasado a las' p\",\n  yesterday: \"'ayer a las' p\",\n  today: \"'hoy a las' p\",\n  tomorrow: \"'mañana a las' p\",\n  nextWeek: \"eeee 'a las' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, date, _baseDate, _options) => {\n  if (date.getHours() !== 1) {\n    return formatRelativeLocalePlural[token];\n  } else {\n    return formatRelativeLocale[token];\n  }\n};\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"AC\", \"DC\"],\n  abbreviated: [\"AC\", \"DC\"],\n  wide: [\"antes de cristo\", \"después de cristo\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"T1\", \"T2\", \"T3\", \"T4\"],\n  wide: [\"1º trimestre\", \"2º trimestre\", \"3º trimestre\", \"4º trimestre\"],\n};\n\nconst monthValues = {\n  narrow: [\"e\", \"f\", \"m\", \"a\", \"m\", \"j\", \"j\", \"a\", \"s\", \"o\", \"n\", \"d\"],\n  abbreviated: [\n    \"ene\",\n    \"feb\",\n    \"mar\",\n    \"abr\",\n    \"may\",\n    \"jun\",\n    \"jul\",\n    \"ago\",\n    \"sep\",\n    \"oct\",\n    \"nov\",\n    \"dic\",\n  ],\n\n  wide: [\n    \"enero\",\n    \"febrero\",\n    \"marzo\",\n    \"abril\",\n    \"mayo\",\n    \"junio\",\n    \"julio\",\n    \"agosto\",\n    \"septiembre\",\n    \"octubre\",\n    \"noviembre\",\n    \"diciembre\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"d\", \"l\", \"m\", \"m\", \"j\", \"v\", \"s\"],\n  short: [\"do\", \"lu\", \"ma\", \"mi\", \"ju\", \"vi\", \"sá\"],\n  abbreviated: [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n  wide: [\n    \"domingo\",\n    \"lunes\",\n    \"martes\",\n    \"miércoles\",\n    \"jueves\",\n    \"viernes\",\n    \"sábado\",\n  ],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mn\",\n    noon: \"md\",\n    morning: \"mañana\",\n    afternoon: \"tarde\",\n    evening: \"tarde\",\n    night: \"noche\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"medianoche\",\n    noon: \"mediodia\",\n    morning: \"mañana\",\n    afternoon: \"tarde\",\n    evening: \"tarde\",\n    night: \"noche\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"medianoche\",\n    noon: \"mediodia\",\n    morning: \"mañana\",\n    afternoon: \"tarde\",\n    evening: \"tarde\",\n    night: \"noche\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"a\",\n    pm: \"p\",\n    midnight: \"mn\",\n    noon: \"md\",\n    morning: \"de la mañana\",\n    afternoon: \"de la tarde\",\n    evening: \"de la tarde\",\n    night: \"de la noche\",\n  },\n  abbreviated: {\n    am: \"AM\",\n    pm: \"PM\",\n    midnight: \"medianoche\",\n    noon: \"mediodia\",\n    morning: \"de la mañana\",\n    afternoon: \"de la tarde\",\n    evening: \"de la tarde\",\n    night: \"de la noche\",\n  },\n  wide: {\n    am: \"a.m.\",\n    pm: \"p.m.\",\n    midnight: \"medianoche\",\n    noon: \"mediodia\",\n    morning: \"de la mañana\",\n    afternoon: \"de la tarde\",\n    evening: \"de la tarde\",\n    night: \"de la noche\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, _options) => {\n  const number = Number(dirtyNumber);\n  return number + \"º\";\n};\n\nexport const localize = {\n  ordinalNumber: ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => Number(quarter) - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\nimport { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(º)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(ac|dc|a|d)/i,\n  abbreviated: /^(a\\.?\\s?c\\.?|a\\.?\\s?e\\.?\\s?c\\.?|d\\.?\\s?c\\.?|e\\.?\\s?c\\.?)/i,\n  wide: /^(antes de cristo|antes de la era com[uú]n|despu[eé]s de cristo|era com[uú]n)/i,\n};\nconst parseEraPatterns = {\n  any: [/^ac/i, /^dc/i],\n  wide: [\n    /^(antes de cristo|antes de la era com[uú]n)/i,\n    /^(despu[eé]s de cristo|era com[uú]n)/i,\n  ],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^T[1234]/i,\n  wide: /^[1234](º)? trimestre/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[efmajsond]/i,\n  abbreviated: /^(ene|feb|mar|abr|may|jun|jul|ago|sep|oct|nov|dic)/i,\n  wide: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^e/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^en/i,\n    /^feb/i,\n    /^mar/i,\n    /^abr/i,\n    /^may/i,\n    /^jun/i,\n    /^jul/i,\n    /^ago/i,\n    /^sep/i,\n    /^oct/i,\n    /^nov/i,\n    /^dic/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[dlmjvs]/i,\n  short: /^(do|lu|ma|mi|ju|vi|s[áa])/i,\n  abbreviated: /^(dom|lun|mar|mi[ée]|jue|vie|s[áa]b)/i,\n  wide: /^(domingo|lunes|martes|mi[ée]rcoles|jueves|viernes|s[áa]bado)/i,\n};\nconst parseDayPatterns = {\n  narrow: [/^d/i, /^l/i, /^m/i, /^m/i, /^j/i, /^v/i, /^s/i],\n  any: [/^do/i, /^lu/i, /^ma/i, /^mi/i, /^ju/i, /^vi/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(a|p|mn|md|(de la|a las) (mañana|tarde|noche))/i,\n  any: /^([ap]\\.?\\s?m\\.?|medianoche|mediodia|(de la|a las) (mañana|tarde|noche))/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mn/i,\n    noon: /^md/i,\n    morning: /mañana/i,\n    afternoon: /tarde/i,\n    evening: /tarde/i,\n    night: /noche/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function (value) {\n      return parseInt(value, 10);\n    },\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./es/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./es/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./es/_lib/formatRelative.mjs\";\nimport { localize } from \"./es/_lib/localize.mjs\";\nimport { match } from \"./es/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary Spanish locale.\n * @language Spanish\n * @iso-639-2 spa\n * @author Juan Angosto [@juanangosto](https://github.com/juanangosto)\n * @author Guillermo Grau [@guigrpa](https://github.com/guigrpa)\n * @author Fernando Agüero [@fjaguero](https://github.com/fjaguero)\n * @author Gastón Haro [@harogaston](https://github.com/harogaston)\n * @author Yago Carballo [@YagoCarballo](https://github.com/YagoCarballo)\n */\nexport const es = {\n  code: \"es\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 1,\n  },\n};\n\n// Fallback for modularized imports:\nexport default es;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    standalone: {\n      one: \"weniger als 1 Sekunde\",\n      other: \"weniger als {{count}} Sekunden\",\n    },\n    withPreposition: {\n      one: \"weniger als 1 Sekunde\",\n      other: \"weniger als {{count}} Sekunden\",\n    },\n  },\n\n  xSeconds: {\n    standalone: {\n      one: \"1 Sekunde\",\n      other: \"{{count}} Sekunden\",\n    },\n    withPreposition: {\n      one: \"1 Sekunde\",\n      other: \"{{count}} Sekunden\",\n    },\n  },\n\n  halfAMinute: {\n    standalone: \"eine halbe Minute\",\n    withPreposition: \"einer halben Minute\",\n  },\n\n  lessThanXMinutes: {\n    standalone: {\n      one: \"weniger als 1 Minute\",\n      other: \"weniger als {{count}} Minuten\",\n    },\n    withPreposition: {\n      one: \"weniger als 1 Minute\",\n      other: \"weniger als {{count}} Minuten\",\n    },\n  },\n\n  xMinutes: {\n    standalone: {\n      one: \"1 Minute\",\n      other: \"{{count}} Minuten\",\n    },\n    withPreposition: {\n      one: \"1 Minute\",\n      other: \"{{count}} Minuten\",\n    },\n  },\n\n  aboutXHours: {\n    standalone: {\n      one: \"etwa 1 Stunde\",\n      other: \"etwa {{count}} Stunden\",\n    },\n    withPreposition: {\n      one: \"etwa 1 Stunde\",\n      other: \"etwa {{count}} Stunden\",\n    },\n  },\n\n  xHours: {\n    standalone: {\n      one: \"1 Stunde\",\n      other: \"{{count}} Stunden\",\n    },\n    withPreposition: {\n      one: \"1 Stunde\",\n      other: \"{{count}} Stunden\",\n    },\n  },\n\n  xDays: {\n    standalone: {\n      one: \"1 Tag\",\n      other: \"{{count}} Tage\",\n    },\n    withPreposition: {\n      one: \"1 Tag\",\n      other: \"{{count}} Tagen\",\n    },\n  },\n\n  aboutXWeeks: {\n    standalone: {\n      one: \"etwa 1 Woche\",\n      other: \"etwa {{count}} Wochen\",\n    },\n    withPreposition: {\n      one: \"etwa 1 Woche\",\n      other: \"etwa {{count}} Wochen\",\n    },\n  },\n\n  xWeeks: {\n    standalone: {\n      one: \"1 Woche\",\n      other: \"{{count}} Wochen\",\n    },\n    withPreposition: {\n      one: \"1 Woche\",\n      other: \"{{count}} Wochen\",\n    },\n  },\n\n  aboutXMonths: {\n    standalone: {\n      one: \"etwa 1 Monat\",\n      other: \"etwa {{count}} Monate\",\n    },\n    withPreposition: {\n      one: \"etwa 1 Monat\",\n      other: \"etwa {{count}} Monaten\",\n    },\n  },\n\n  xMonths: {\n    standalone: {\n      one: \"1 Monat\",\n      other: \"{{count}} Monate\",\n    },\n    withPreposition: {\n      one: \"1 Monat\",\n      other: \"{{count}} Monaten\",\n    },\n  },\n\n  aboutXYears: {\n    standalone: {\n      one: \"etwa 1 Jahr\",\n      other: \"etwa {{count}} Jahre\",\n    },\n    withPreposition: {\n      one: \"etwa 1 Jahr\",\n      other: \"etwa {{count}} Jahren\",\n    },\n  },\n\n  xYears: {\n    standalone: {\n      one: \"1 Jahr\",\n      other: \"{{count}} Jahre\",\n    },\n    withPreposition: {\n      one: \"1 Jahr\",\n      other: \"{{count}} Jahren\",\n    },\n  },\n\n  overXYears: {\n    standalone: {\n      one: \"mehr als 1 Jahr\",\n      other: \"mehr als {{count}} Jahre\",\n    },\n    withPreposition: {\n      one: \"mehr als 1 Jahr\",\n      other: \"mehr als {{count}} Jahren\",\n    },\n  },\n\n  almostXYears: {\n    standalone: {\n      one: \"fast 1 Jahr\",\n      other: \"fast {{count}} Jahre\",\n    },\n    withPreposition: {\n      one: \"fast 1 Jahr\",\n      other: \"fast {{count}} Jahren\",\n    },\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = options?.addSuffix\n    ? formatDistanceLocale[token].withPreposition\n    : formatDistanceLocale[token].standalone;\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return \"in \" + result;\n    } else {\n      return \"vor \" + result;\n    }\n  }\n\n  return result;\n};\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.mjs\";\n\n// DIN 5008: https://de.wikipedia.org/wiki/Datumsformat#DIN_5008\nconst dateFormats = {\n  full: \"EEEE, do MMMM y\", // Montag, 7. Januar 2018\n  long: \"do MMMM y\", // 7. Januar 2018\n  medium: \"do MMM y\", // 7. Jan. 2018\n  short: \"dd.MM.y\", // 07.01.2018\n};\n\nconst timeFormats = {\n  full: \"HH:mm:ss zzzz\",\n  long: \"HH:mm:ss z\",\n  medium: \"HH:mm:ss\",\n  short: \"HH:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} 'um' {{time}}\",\n  long: \"{{date}} 'um' {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","const formatRelativeLocale = {\n  lastWeek: \"'letzten' eeee 'um' p\",\n  yesterday: \"'gestern um' p\",\n  today: \"'heute um' p\",\n  tomorrow: \"'morgen um' p\",\n  nextWeek: \"eeee 'um' p\",\n  other: \"P\",\n};\n\nexport const formatRelative = (token, _date, _baseDate, _options) =>\n  formatRelativeLocale[token];\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.mjs\";\n\nconst eraValues = {\n  narrow: [\"v.Chr.\", \"n.Chr.\"],\n  abbreviated: [\"v.Chr.\", \"n.Chr.\"],\n  wide: [\"vor Christus\", \"nach Christus\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"Q1\", \"Q2\", \"Q3\", \"Q4\"],\n  wide: [\"1. Quartal\", \"2. Quartal\", \"3. Quartal\", \"4. Quartal\"],\n};\n\n// Note: in German, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\nconst monthValues = {\n  narrow: [\"J\", \"F\", \"M\", \"A\", \"M\", \"J\", \"J\", \"A\", \"S\", \"O\", \"N\", \"D\"],\n  abbreviated: [\n    \"Jan\",\n    \"Feb\",\n    \"Mär\",\n    \"Apr\",\n    \"Mai\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Okt\",\n    \"Nov\",\n    \"Dez\",\n  ],\n\n  wide: [\n    \"Januar\",\n    \"Februar\",\n    \"März\",\n    \"April\",\n    \"Mai\",\n    \"Juni\",\n    \"Juli\",\n    \"August\",\n    \"September\",\n    \"Oktober\",\n    \"November\",\n    \"Dezember\",\n  ],\n};\n\n// https://st.unicode.org/cldr-apps/v#/de/Gregorian/\nconst formattingMonthValues = {\n  narrow: monthValues.narrow,\n  abbreviated: [\n    \"Jan.\",\n    \"Feb.\",\n    \"März\",\n    \"Apr.\",\n    \"Mai\",\n    \"Juni\",\n    \"Juli\",\n    \"Aug.\",\n    \"Sep.\",\n    \"Okt.\",\n    \"Nov.\",\n    \"Dez.\",\n  ],\n\n  wide: monthValues.wide,\n};\n\nconst dayValues = {\n  narrow: [\"S\", \"M\", \"D\", \"M\", \"D\", \"F\", \"S\"],\n  short: [\"So\", \"Mo\", \"Di\", \"Mi\", \"Do\", \"Fr\", \"Sa\"],\n  abbreviated: [\"So.\", \"Mo.\", \"Di.\", \"Mi.\", \"Do.\", \"Fr.\", \"Sa.\"],\n  wide: [\n    \"Sonntag\",\n    \"Montag\",\n    \"Dienstag\",\n    \"Mittwoch\",\n    \"Donnerstag\",\n    \"Freitag\",\n    \"Samstag\",\n  ],\n};\n\n// https://www.unicode.org/cldr/charts/32/summary/de.html#1881\nconst dayPeriodValues = {\n  narrow: {\n    am: \"vm.\",\n    pm: \"nm.\",\n    midnight: \"Mitternacht\",\n    noon: \"Mittag\",\n    morning: \"Morgen\",\n    afternoon: \"Nachm.\",\n    evening: \"Abend\",\n    night: \"Nacht\",\n  },\n  abbreviated: {\n    am: \"vorm.\",\n    pm: \"nachm.\",\n    midnight: \"Mitternacht\",\n    noon: \"Mittag\",\n    morning: \"Morgen\",\n    afternoon: \"Nachmittag\",\n    evening: \"Abend\",\n    night: \"Nacht\",\n  },\n  wide: {\n    am: \"vormittags\",\n    pm: \"nachmittags\",\n    midnight: \"Mitternacht\",\n    noon: \"Mittag\",\n    morning: \"Morgen\",\n    afternoon: \"Nachmittag\",\n    evening: \"Abend\",\n    night: \"Nacht\",\n  },\n};\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"vm.\",\n    pm: \"nm.\",\n    midnight: \"Mitternacht\",\n    noon: \"Mittag\",\n    morning: \"morgens\",\n    afternoon: \"nachm.\",\n    evening: \"abends\",\n    night: \"nachts\",\n  },\n  abbreviated: {\n    am: \"vorm.\",\n    pm: \"nachm.\",\n    midnight: \"Mitternacht\",\n    noon: \"Mittag\",\n    morning: \"morgens\",\n    afternoon: \"nachmittags\",\n    evening: \"abends\",\n    night: \"nachts\",\n  },\n  wide: {\n    am: \"vormittags\",\n    pm: \"nachmittags\",\n    midnight: \"Mitternacht\",\n    noon: \"Mittag\",\n    morning: \"morgens\",\n    afternoon: \"nachmittags\",\n    evening: \"abends\",\n    night: \"nachts\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber) => {\n  const number = Number(dirtyNumber);\n\n  return number + \".\";\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    formattingValues: formattingMonthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.mjs\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.mjs\";\n\nconst matchOrdinalNumberPattern = /^(\\d+)(\\.)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(v\\.? ?Chr\\.?|n\\.? ?Chr\\.?)/i,\n  abbreviated: /^(v\\.? ?Chr\\.?|n\\.? ?Chr\\.?)/i,\n  wide: /^(vor Christus|vor unserer Zeitrechnung|nach Christus|unserer Zeitrechnung)/i,\n};\nconst parseEraPatterns = {\n  any: [/^v/i, /^n/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](\\.)? Quartal/i,\n};\nconst parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated:\n    /^(j[aä]n|feb|mär[z]?|apr|mai|jun[i]?|jul[i]?|aug|sep|okt|nov|dez)\\.?/i,\n  wide: /^(januar|februar|märz|april|mai|juni|juli|august|september|oktober|november|dezember)/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^j/i,\n    /^f/i,\n    /^m/i,\n    /^a/i,\n    /^m/i,\n    /^j/i,\n    /^j/i,\n    /^a/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n\n  any: [\n    /^j[aä]/i,\n    /^f/i,\n    /^mär/i,\n    /^ap/i,\n    /^mai/i,\n    /^jun/i,\n    /^jul/i,\n    /^au/i,\n    /^s/i,\n    /^o/i,\n    /^n/i,\n    /^d/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[smdmf]/i,\n  short: /^(so|mo|di|mi|do|fr|sa)/i,\n  abbreviated: /^(son?|mon?|die?|mit?|don?|fre?|sam?)\\.?/i,\n  wide: /^(sonntag|montag|dienstag|mittwoch|donnerstag|freitag|samstag)/i,\n};\nconst parseDayPatterns = {\n  any: [/^so/i, /^mo/i, /^di/i, /^mi/i, /^do/i, /^f/i, /^sa/i],\n};\n\nconst matchDayPeriodPatterns = {\n  narrow: /^(vm\\.?|nm\\.?|Mitternacht|Mittag|morgens|nachm\\.?|abends|nachts)/i,\n  abbreviated:\n    /^(vorm\\.?|nachm\\.?|Mitternacht|Mittag|morgens|nachm\\.?|abends|nachts)/i,\n  wide: /^(vormittags|nachmittags|Mitternacht|Mittag|morgens|nachmittags|abends|nachts)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^v/i,\n    pm: /^n/i,\n    midnight: /^Mitte/i,\n    noon: /^Mitta/i,\n    morning: /morgens/i,\n    afternoon: /nachmittags/i, // will never be matched. Afternoon is matched by `pm`\n    evening: /abends/i,\n    night: /nachts/i, // will never be matched. Night is matched by `pm`\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./de/_lib/formatDistance.mjs\";\nimport { formatLong } from \"./de/_lib/formatLong.mjs\";\nimport { formatRelative } from \"./de/_lib/formatRelative.mjs\";\nimport { localize } from \"./de/_lib/localize.mjs\";\nimport { match } from \"./de/_lib/match.mjs\";\n\n/**\n * @category Locales\n * @summary German locale.\n * @language German\n * @iso-639-2 deu\n * @author Thomas Eilmsteiner [@DeMuu](https://github.com/DeMuu)\n * @author Asia [@asia-t](https://github.com/asia-t)\n * @author Van Vuong Ngo [@vanvuongngo](https://github.com/vanvuongngo)\n * @author RomanErnst [@pex](https://github.com/pex)\n * @author Philipp Keck [@Philipp91](https://github.com/Philipp91)\n */\nexport const de = {\n  code: \"de\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default de;\n","export function buildFormatLongFn(args) {\n  return (options = {}) => {\n    // TODO: Remove String()\n    const width = options.width ? String(options.width) : args.defaultWidth;\n    const format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}\n","export function buildMatchFn(args) {\n  return (string, options = {}) => {\n    const width = options.width;\n\n    const matchPattern =\n      (width && args.matchPatterns[width]) ||\n      args.matchPatterns[args.defaultMatchWidth];\n    const matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n    const matchedString = matchResult[0];\n\n    const parsePatterns =\n      (width && args.parsePatterns[width]) ||\n      args.parsePatterns[args.defaultParseWidth];\n\n    const key = Array.isArray(parsePatterns)\n      ? findIndex(parsePatterns, (pattern) => pattern.test(matchedString))\n      : // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        findKey(parsePatterns, (pattern) => pattern.test(matchedString));\n\n    let value;\n\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback\n      ? // eslint-disable-next-line @typescript-eslint/no-explicit-any -- I challange you to fix the type\n        options.valueCallback(value)\n      : value;\n\n    const rest = string.slice(matchedString.length);\n\n    return { value, rest };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (const key in object) {\n    if (\n      Object.prototype.hasOwnProperty.call(object, key) &&\n      predicate(object[key])\n    ) {\n      return key;\n    }\n  }\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (let key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n  return undefined;\n}\n","/* eslint-disable no-unused-vars */\n\n/**\n * The localize function argument callback which allows to convert raw value to\n * the actual type.\n *\n * @param value - The value to convert\n *\n * @returns The converted value\n */\n\n/**\n * The map of localized values for each width.\n */\n\n/**\n * The index type of the locale unit value. It types conversion of units of\n * values that don't start at 0 (i.e. quarters).\n */\n\n/**\n * Converts the unit value to the tuple of values.\n */\n\n/**\n * The tuple of localized era values. The first element represents BC,\n * the second element represents AD.\n */\n\n/**\n * The tuple of localized quarter values. The first element represents Q1.\n */\n\n/**\n * The tuple of localized day values. The first element represents Sunday.\n */\n\n/**\n * The tuple of localized month values. The first element represents January.\n */\n\nexport function buildLocalizeFn(args) {\n  return (value, options) => {\n    const context = options?.context ? String(options.context) : \"standalone\";\n\n    let valuesArray;\n    if (context === \"formatting\" && args.formattingValues) {\n      const defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      const width = options?.width ? String(options.width) : defaultWidth;\n\n      valuesArray =\n        args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      const defaultWidth = args.defaultWidth;\n      const width = options?.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[width] || args.values[defaultWidth];\n    }\n    const index = args.argumentCallback ? args.argumentCallback(value) : value;\n\n    // @ts-expect-error - For some reason TypeScript just don't want to match it, no matter how hard we try. I challenge you to try to remove it!\n    return valuesArray[index];\n  };\n}\n","let defaultOptions = {};\n\nexport function getDefaultOptions() {\n  return defaultOptions;\n}\n\nexport function setDefaultOptions(newOptions) {\n  defaultOptions = newOptions;\n}\n","/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param argument - The value to convert\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\nexport function toDate(argument) {\n  const argStr = Object.prototype.toString.call(argument);\n\n  // Clone the date\n  if (\n    argument instanceof Date ||\n    (typeof argument === \"object\" && argStr === \"[object Date]\")\n  ) {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new argument.constructor(+argument);\n  } else if (\n    typeof argument === \"number\" ||\n    argStr === \"[object Number]\" ||\n    typeof argument === \"string\" ||\n    argStr === \"[object String]\"\n  ) {\n    // TODO: Can we get rid of as?\n    return new Date(argument);\n  } else {\n    // TODO: Can we get rid of as?\n    return new Date(NaN);\n  }\n}\n\n// Fallback for modularized imports:\nexport default toDate;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a day\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\nexport function startOfDay(date) {\n  const _date = toDate(date);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfDay;\n","import { toDate } from \"../toDate.mjs\";\n\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport function getTimezoneOffsetInMilliseconds(date) {\n  const _date = toDate(date);\n  const utcDate = new Date(\n    Date.UTC(\n      _date.getFullYear(),\n      _date.getMonth(),\n      _date.getDate(),\n      _date.getHours(),\n      _date.getMinutes(),\n      _date.getSeconds(),\n      _date.getMilliseconds(),\n    ),\n  );\n  utcDate.setUTCFullYear(_date.getFullYear());\n  return +date - +utcDate;\n}\n","/**\n * @name constructFrom\n * @category Generic Helpers\n * @summary Constructs a date using the reference date and the value\n *\n * @description\n * The function constructs a new date using the constructor from the reference\n * date and the given value. It helps to build generic functions that accept\n * date extensions.\n *\n * It defaults to `Date` if the passed reference date is a number or a string.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The reference date to take constructor from\n * @param value - The value to create the date\n *\n * @returns Date initialized using the given date and value\n *\n * @example\n * import { constructFrom } from 'date-fns'\n *\n * // A function that clones a date preserving the original type\n * function cloneDate<DateType extends Date(date: DateType): DateType {\n *   return constructFrom(\n *     date, // Use contrustor from the given date\n *     date.getTime() // Use the date value to create a new date\n *   )\n * }\n */\nexport function constructFrom(date, value) {\n  if (date instanceof Date) {\n    return new date.constructor(value);\n  } else {\n    return new Date(value);\n  }\n}\n\n// Fallback for modularized imports:\nexport default constructFrom;\n","import { differenceInCalendarDays } from \"./differenceInCalendarDays.mjs\";\nimport { startOfYear } from \"./startOfYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getDayOfYear\n * @category Day Helpers\n * @summary Get the day of the year of the given date.\n *\n * @description\n * Get the day of the year of the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The day of year\n *\n * @example\n * // Which day of the year is 2 July 2014?\n * const result = getDayOfYear(new Date(2014, 6, 2))\n * //=> 183\n */\nexport function getDayOfYear(date) {\n  const _date = toDate(date);\n  const diff = differenceInCalendarDays(_date, startOfYear(_date));\n  const dayOfYear = diff + 1;\n  return dayOfYear;\n}\n\n// Fallback for modularized imports:\nexport default getDayOfYear;\n","import { millisecondsInDay } from \"./constants.mjs\";\nimport { startOfDay } from \"./startOfDay.mjs\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.mjs\";\n\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n *\n * @returns The number of calendar days\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\nexport function differenceInCalendarDays(dateLeft, dateRight) {\n  const startOfDayLeft = startOfDay(dateLeft);\n  const startOfDayRight = startOfDay(dateRight);\n\n  const timestampLeft =\n    +startOfDayLeft - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  const timestampRight =\n    +startOfDayRight - getTimezoneOffsetInMilliseconds(startOfDayRight);\n\n  // Round the number of days to the nearest integer because the number of\n  // milliseconds in a day is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round((timestampLeft - timestampRight) / millisecondsInDay);\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarDays;\n","/**\n * @module constants\n * @summary Useful constants\n * @description\n * Collection of useful date constants.\n *\n * The constants could be imported from `date-fns/constants`:\n *\n * ```ts\n * import { maxTime, minTime } from \"./constants/date-fns/constants\";\n *\n * function isAllowedTime(time) {\n *   return time <= maxTime && time >= minTime;\n * }\n * ```\n */\n\n/**\n * @constant\n * @name daysInWeek\n * @summary Days in 1 week.\n */\nexport const daysInWeek = 7;\n\n/**\n * @constant\n * @name daysInYear\n * @summary Days in 1 year.\n *\n * @description\n * How many days in a year.\n *\n * One years equals 365.2425 days according to the formula:\n *\n * > Leap year occures every 4 years, except for years that are divisable by 100 and not divisable by 400.\n * > 1 mean year = (365+1/4-1/100+1/400) days = 365.2425 days\n */\nexport const daysInYear = 365.2425;\n\n/**\n * @constant\n * @name maxTime\n * @summary Maximum allowed time.\n *\n * @example\n * import { maxTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = 8640000000000001 <= maxTime;\n * //=> false\n *\n * new Date(8640000000000001);\n * //=> Invalid Date\n */\nexport const maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n\n/**\n * @constant\n * @name minTime\n * @summary Minimum allowed time.\n *\n * @example\n * import { minTime } from \"./constants/date-fns/constants\";\n *\n * const isValid = -8640000000000001 >= minTime;\n * //=> false\n *\n * new Date(-8640000000000001)\n * //=> Invalid Date\n */\nexport const minTime = -maxTime;\n\n/**\n * @constant\n * @name millisecondsInWeek\n * @summary Milliseconds in 1 week.\n */\nexport const millisecondsInWeek = 604800000;\n\n/**\n * @constant\n * @name millisecondsInDay\n * @summary Milliseconds in 1 day.\n */\nexport const millisecondsInDay = 86400000;\n\n/**\n * @constant\n * @name millisecondsInMinute\n * @summary Milliseconds in 1 minute\n */\nexport const millisecondsInMinute = 60000;\n\n/**\n * @constant\n * @name millisecondsInHour\n * @summary Milliseconds in 1 hour\n */\nexport const millisecondsInHour = 3600000;\n\n/**\n * @constant\n * @name millisecondsInSecond\n * @summary Milliseconds in 1 second\n */\nexport const millisecondsInSecond = 1000;\n\n/**\n * @constant\n * @name minutesInYear\n * @summary Minutes in 1 year.\n */\nexport const minutesInYear = 525600;\n\n/**\n * @constant\n * @name minutesInMonth\n * @summary Minutes in 1 month.\n */\nexport const minutesInMonth = 43200;\n\n/**\n * @constant\n * @name minutesInDay\n * @summary Minutes in 1 day.\n */\nexport const minutesInDay = 1440;\n\n/**\n * @constant\n * @name minutesInHour\n * @summary Minutes in 1 hour.\n */\nexport const minutesInHour = 60;\n\n/**\n * @constant\n * @name monthsInQuarter\n * @summary Months in 1 quarter.\n */\nexport const monthsInQuarter = 3;\n\n/**\n * @constant\n * @name monthsInYear\n * @summary Months in 1 year.\n */\nexport const monthsInYear = 12;\n\n/**\n * @constant\n * @name quartersInYear\n * @summary Quarters in 1 year\n */\nexport const quartersInYear = 4;\n\n/**\n * @constant\n * @name secondsInHour\n * @summary Seconds in 1 hour.\n */\nexport const secondsInHour = 3600;\n\n/**\n * @constant\n * @name secondsInMinute\n * @summary Seconds in 1 minute.\n */\nexport const secondsInMinute = 60;\n\n/**\n * @constant\n * @name secondsInDay\n * @summary Seconds in 1 day.\n */\nexport const secondsInDay = secondsInHour * 24;\n\n/**\n * @constant\n * @name secondsInWeek\n * @summary Seconds in 1 week.\n */\nexport const secondsInWeek = secondsInDay * 7;\n\n/**\n * @constant\n * @name secondsInYear\n * @summary Seconds in 1 year.\n */\nexport const secondsInYear = secondsInDay * daysInYear;\n\n/**\n * @constant\n * @name secondsInMonth\n * @summary Seconds in 1 month\n */\nexport const secondsInMonth = secondsInYear / 12;\n\n/**\n * @constant\n * @name secondsInQuarter\n * @summary Seconds in 1 quarter.\n */\nexport const secondsInQuarter = secondsInMonth * 3;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a year\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * const result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\nexport function startOfYear(date) {\n  const cleanDate = toDate(date);\n  const _date = constructFrom(date, 0);\n  _date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfYear;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeek} function options.\n */\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n\n  _date.setDate(_date.getDate() - diff);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeek;\n","import { startOfWeek } from \"./startOfWeek.mjs\";\n\n/**\n * @name startOfISOWeek\n * @category ISO Week Helpers\n * @summary Return the start of an ISO week for the given date.\n *\n * @description\n * Return the start of an ISO week for the given date.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week\n *\n * @example\n * // The start of an ISO week for 2 September 2014 11:55:00:\n * const result = startOfISOWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfISOWeek(date) {\n  return startOfWeek(date, { weekStartsOn: 1 });\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Get the ISO week-numbering year of the given date.\n *\n * @description\n * Get the ISO week-numbering year of the given date,\n * which always starts 3 days before the year's first Thursday.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week-numbering year\n *\n * @example\n * // Which ISO-week numbering year is 2 January 2005?\n * const result = getISOWeekYear(new Date(2005, 0, 2))\n * //=> 2004\n */\nexport function getISOWeekYear(date) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const fourthOfJanuaryOfNextYear = constructFrom(date, 0);\n  fourthOfJanuaryOfNextYear.setFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfISOWeek(fourthOfJanuaryOfNextYear);\n\n  const fourthOfJanuaryOfThisYear = constructFrom(date, 0);\n  fourthOfJanuaryOfThisYear.setFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getISOWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { startOfISOWeekYear } from \"./startOfISOWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name getISOWeek\n * @category ISO Week Helpers\n * @summary Get the ISO week of the given date.\n *\n * @description\n * Get the ISO week of the given date.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n *\n * @returns The ISO week\n *\n * @example\n * // Which week of the ISO-week numbering year is 2 January 2005?\n * const result = getISOWeek(new Date(2005, 0, 2))\n * //=> 53\n */\nexport function getISOWeek(date) {\n  const _date = toDate(date);\n  const diff = +startOfISOWeek(_date) - +startOfISOWeekYear(_date);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getISOWeek;\n","import { getISOWeekYear } from \"./getISOWeekYear.mjs\";\nimport { startOfISOWeek } from \"./startOfISOWeek.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name startOfISOWeekYear\n * @category ISO Week-Numbering Year Helpers\n * @summary Return the start of an ISO week-numbering year for the given date.\n *\n * @description\n * Return the start of an ISO week-numbering year,\n * which always starts 3 days before the year's first Thursday.\n * The result will be in the local timezone.\n *\n * ISO week-numbering year: http://en.wikipedia.org/wiki/ISO_week_date\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of an ISO week-numbering year\n *\n * @example\n * // The start of an ISO week-numbering year for 2 July 2005:\n * const result = startOfISOWeekYear(new Date(2005, 6, 2))\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfISOWeekYear(date) {\n  const year = getISOWeekYear(date);\n  const fourthOfJanuary = constructFrom(date, 0);\n  fourthOfJanuary.setFullYear(year, 0, 4);\n  fourthOfJanuary.setHours(0, 0, 0, 0);\n  return startOfISOWeek(fourthOfJanuary);\n}\n\n// Fallback for modularized imports:\nexport default startOfISOWeekYear;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link getWeekYear} function options.\n */\n\n/**\n * @name getWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Get the local week-numbering year of the given date.\n *\n * @description\n * Get the local week-numbering year of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options.\n *\n * @returns The local week-numbering year\n *\n * @example\n * // Which week numbering year is 26 December 2004 with the default settings?\n * const result = getWeekYear(new Date(2004, 11, 26))\n * //=> 2005\n *\n * @example\n * // Which week numbering year is 26 December 2004 if week starts on Saturday?\n * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })\n * //=> 2004\n *\n * @example\n * // Which week numbering year is 26 December 2004 if the first week contains 4 January?\n * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })\n * //=> 2004\n */\nexport function getWeekYear(date, options) {\n  const _date = toDate(date);\n  const year = _date.getFullYear();\n\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const firstWeekOfNextYear = constructFrom(date, 0);\n  firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setHours(0, 0, 0, 0);\n  const startOfNextYear = startOfWeek(firstWeekOfNextYear, options);\n\n  const firstWeekOfThisYear = constructFrom(date, 0);\n  firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setHours(0, 0, 0, 0);\n  const startOfThisYear = startOfWeek(firstWeekOfThisYear, options);\n\n  if (_date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (_date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}\n\n// Fallback for modularized imports:\nexport default getWeekYear;\n","import { millisecondsInWeek } from \"./constants.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { startOfWeekYear } from \"./startOfWeekYear.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * The {@link getWeek} function options.\n */\n\n/**\n * @name getWeek\n * @category Week Helpers\n * @summary Get the local week index of the given date.\n *\n * @description\n * Get the local week index of the given date.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The given date\n * @param options - An object with options\n *\n * @returns The week\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005 with default options?\n * const result = getWeek(new Date(2005, 0, 2))\n * //=> 2\n *\n * @example\n * // Which week of the local week numbering year is 2 January 2005,\n * // if Monday is the first day of the week,\n * // and the first week of the year always contains 4 January?\n * const result = getWeek(new Date(2005, 0, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> 53\n */\n\nexport function getWeek(date, options) {\n  const _date = toDate(date);\n  const diff = +startOfWeek(_date, options) - +startOfWeekYear(_date, options);\n\n  // Round the number of weeks to the nearest integer because the number of\n  // milliseconds in a week is not constant (e.g. it's different in the week of\n  // the daylight saving time clock shift).\n  return Math.round(diff / millisecondsInWeek) + 1;\n}\n\n// Fallback for modularized imports:\nexport default getWeek;\n","import { constructFrom } from \"./constructFrom.mjs\";\nimport { getWeekYear } from \"./getWeekYear.mjs\";\nimport { startOfWeek } from \"./startOfWeek.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link startOfWeekYear} function options.\n */\n\n/**\n * @name startOfWeekYear\n * @category Week-Numbering Year Helpers\n * @summary Return the start of a local week-numbering year for the given date.\n *\n * @description\n * Return the start of a local week-numbering year.\n * The exact calculation depends on the values of\n * `options.weekStartsOn` (which is the index of the first day of the week)\n * and `options.firstWeekContainsDate` (which is the day of January, which is always in\n * the first week of the week-numbering year)\n *\n * Week numbering: https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The start of a week-numbering year\n *\n * @example\n * // The start of an a week-numbering year for 2 July 2005 with default settings:\n * const result = startOfWeekYear(new Date(2005, 6, 2))\n * //=> Sun Dec 26 2004 00:00:00\n *\n * @example\n * // The start of a week-numbering year for 2 July 2005\n * // if Monday is the first day of week\n * // and 4 January is always in the first week of the year:\n * const result = startOfWeekYear(new Date(2005, 6, 2), {\n *   weekStartsOn: 1,\n *   firstWeekContainsDate: 4\n * })\n * //=> Mon Jan 03 2005 00:00:00\n */\nexport function startOfWeekYear(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const year = getWeekYear(date, options);\n  const firstWeek = constructFrom(date, 0);\n  firstWeek.setFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setHours(0, 0, 0, 0);\n  const _date = startOfWeek(firstWeek, options);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfWeekYear;\n","export function addLeadingZeros(number, targetLength) {\n  const sign = number < 0 ? \"-\" : \"\";\n  const output = Math.abs(number).toString().padStart(targetLength, \"0\");\n  return sign + output;\n}\n","import { getDayOfYear } from \"../../getDayOfYear.mjs\";\nimport { getISOWeek } from \"../../getISOWeek.mjs\";\nimport { getISOWeekYear } from \"../../getISOWeekYear.mjs\";\nimport { getWeek } from \"../../getWeek.mjs\";\nimport { getWeekYear } from \"../../getWeekYear.mjs\";\nimport { addLeadingZeros } from \"../addLeadingZeros.mjs\";\nimport { lightFormatters } from \"./lightFormatters.mjs\";\n\nconst dayPeriodEnum = {\n  am: \"am\",\n  pm: \"pm\",\n  midnight: \"midnight\",\n  noon: \"noon\",\n  morning: \"morning\",\n  afternoon: \"afternoon\",\n  evening: \"evening\",\n  night: \"night\",\n};\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nexport const formatters = {\n  // Era\n  G: function (date, token, localize) {\n    const era = date.getFullYear() > 0 ? 1 : 0;\n    switch (token) {\n      // AD, BC\n      case \"G\":\n      case \"GG\":\n      case \"GGG\":\n        return localize.era(era, { width: \"abbreviated\" });\n      // A, B\n      case \"GGGGG\":\n        return localize.era(era, { width: \"narrow\" });\n      // Anno Domini, Before Christ\n      case \"GGGG\":\n      default:\n        return localize.era(era, { width: \"wide\" });\n    }\n  },\n\n  // Year\n  y: function (date, token, localize) {\n    // Ordinal number\n    if (token === \"yo\") {\n      const signedYear = date.getFullYear();\n      // Returns 1 for 1 BC (which is year 0 in JavaScript)\n      const year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, { unit: \"year\" });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n\n  // Local week-numbering year\n  Y: function (date, token, localize, options) {\n    const signedWeekYear = getWeekYear(date, options);\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;\n\n    // Two digit year\n    if (token === \"YY\") {\n      const twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    }\n\n    // Ordinal number\n    if (token === \"Yo\") {\n      return localize.ordinalNumber(weekYear, { unit: \"year\" });\n    }\n\n    // Padding\n    return addLeadingZeros(weekYear, token.length);\n  },\n\n  // ISO week-numbering year\n  R: function (date, token) {\n    const isoWeekYear = getISOWeekYear(date);\n\n    // Padding\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function (date, token) {\n    const year = date.getFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n\n  // Quarter\n  Q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"Q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"QQ\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"Qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"QQQ\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"QQQQQ\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"QQQQ\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone quarter\n  q: function (date, token, localize) {\n    const quarter = Math.ceil((date.getMonth() + 1) / 3);\n    switch (token) {\n      // 1, 2, 3, 4\n      case \"q\":\n        return String(quarter);\n      // 01, 02, 03, 04\n      case \"qq\":\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n      case \"qo\":\n        return localize.ordinalNumber(quarter, { unit: \"quarter\" });\n      // Q1, Q2, Q3, Q4\n      case \"qqq\":\n        return localize.quarter(quarter, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n      case \"qqqqq\":\n        return localize.quarter(quarter, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // 1st quarter, 2nd quarter, ...\n      case \"qqqq\":\n      default:\n        return localize.quarter(quarter, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // Month\n  M: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      case \"M\":\n      case \"MM\":\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n      case \"Mo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"MMM\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // J, F, ..., D\n      case \"MMMMM\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // January, February, ..., December\n      case \"MMMM\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"formatting\" });\n    }\n  },\n\n  // Stand-alone month\n  L: function (date, token, localize) {\n    const month = date.getMonth();\n    switch (token) {\n      // 1, 2, ..., 12\n      case \"L\":\n        return String(month + 1);\n      // 01, 02, ..., 12\n      case \"LL\":\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n      case \"Lo\":\n        return localize.ordinalNumber(month + 1, { unit: \"month\" });\n      // Jan, Feb, ..., Dec\n      case \"LLL\":\n        return localize.month(month, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // J, F, ..., D\n      case \"LLLLL\":\n        return localize.month(month, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // January, February, ..., December\n      case \"LLLL\":\n      default:\n        return localize.month(month, { width: \"wide\", context: \"standalone\" });\n    }\n  },\n\n  // Local week of year\n  w: function (date, token, localize, options) {\n    const week = getWeek(date, options);\n\n    if (token === \"wo\") {\n      return localize.ordinalNumber(week, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n\n  // ISO week of year\n  I: function (date, token, localize) {\n    const isoWeek = getISOWeek(date);\n\n    if (token === \"Io\") {\n      return localize.ordinalNumber(isoWeek, { unit: \"week\" });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n\n  // Day of the month\n  d: function (date, token, localize) {\n    if (token === \"do\") {\n      return localize.ordinalNumber(date.getDate(), { unit: \"date\" });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n\n  // Day of year\n  D: function (date, token, localize) {\n    const dayOfYear = getDayOfYear(date);\n\n    if (token === \"Do\") {\n      return localize.ordinalNumber(dayOfYear, { unit: \"dayOfYear\" });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n\n  // Day of week\n  E: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    switch (token) {\n      // Tue\n      case \"E\":\n      case \"EE\":\n      case \"EEE\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"EEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"EEEEEE\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"EEEE\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Local day of week\n  e: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case \"e\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"ee\":\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n      case \"eo\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"eee\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"eeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"eeeeee\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"eeee\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Stand-alone local day of week\n  c: function (date, token, localize, options) {\n    const dayOfWeek = date.getDay();\n    const localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case \"c\":\n        return String(localDayOfWeek);\n      // Padded numerical value\n      case \"cc\":\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n      case \"co\":\n        return localize.ordinalNumber(localDayOfWeek, { unit: \"day\" });\n      case \"ccc\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"standalone\",\n        });\n      // T\n      case \"ccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"standalone\",\n        });\n      // Tu\n      case \"cccccc\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"standalone\",\n        });\n      // Tuesday\n      case \"cccc\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"standalone\",\n        });\n    }\n  },\n\n  // ISO day of week\n  i: function (date, token, localize) {\n    const dayOfWeek = date.getDay();\n    const isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n    switch (token) {\n      // 2\n      case \"i\":\n        return String(isoDayOfWeek);\n      // 02\n      case \"ii\":\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n      case \"io\":\n        return localize.ordinalNumber(isoDayOfWeek, { unit: \"day\" });\n      // Tue\n      case \"iii\":\n        return localize.day(dayOfWeek, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      // T\n      case \"iiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      // Tu\n      case \"iiiiii\":\n        return localize.day(dayOfWeek, {\n          width: \"short\",\n          context: \"formatting\",\n        });\n      // Tuesday\n      case \"iiii\":\n      default:\n        return localize.day(dayOfWeek, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM or PM\n  a: function (date, token, localize) {\n    const hours = date.getHours();\n    const dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"aaa\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"aaaaa\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"aaaa\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // AM, PM, midnight, noon\n  b: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? \"pm\" : \"am\";\n    }\n\n    switch (token) {\n      case \"b\":\n      case \"bb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"bbb\":\n        return localize\n          .dayPeriod(dayPeriodEnumValue, {\n            width: \"abbreviated\",\n            context: \"formatting\",\n          })\n          .toLowerCase();\n      case \"bbbbb\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"bbbb\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // in the morning, in the afternoon, in the evening, at night\n  B: function (date, token, localize) {\n    const hours = date.getHours();\n    let dayPeriodEnumValue;\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case \"B\":\n      case \"BB\":\n      case \"BBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"abbreviated\",\n          context: \"formatting\",\n        });\n      case \"BBBBB\":\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"narrow\",\n          context: \"formatting\",\n        });\n      case \"BBBB\":\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: \"wide\",\n          context: \"formatting\",\n        });\n    }\n  },\n\n  // Hour [1-12]\n  h: function (date, token, localize) {\n    if (token === \"ho\") {\n      let hours = date.getHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n\n  // Hour [0-23]\n  H: function (date, token, localize) {\n    if (token === \"Ho\") {\n      return localize.ordinalNumber(date.getHours(), { unit: \"hour\" });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n\n  // Hour [0-11]\n  K: function (date, token, localize) {\n    const hours = date.getHours() % 12;\n\n    if (token === \"Ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Hour [1-24]\n  k: function (date, token, localize) {\n    let hours = date.getHours();\n    if (hours === 0) hours = 24;\n\n    if (token === \"ko\") {\n      return localize.ordinalNumber(hours, { unit: \"hour\" });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n\n  // Minute\n  m: function (date, token, localize) {\n    if (token === \"mo\") {\n      return localize.ordinalNumber(date.getMinutes(), { unit: \"minute\" });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n\n  // Second\n  s: function (date, token, localize) {\n    if (token === \"so\") {\n      return localize.ordinalNumber(date.getSeconds(), { unit: \"second\" });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n\n  // Fraction of second\n  S: function (date, token) {\n    return lightFormatters.S(date, token);\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return \"Z\";\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"X\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n      case \"XXXX\":\n      case \"XX\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n      case \"XXXXX\":\n      case \"XXX\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case \"x\":\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n      case \"xxxx\":\n      case \"xx\": // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n      case \"xxxxx\":\n      case \"xxx\": // Hours and minutes with `:` delimiter\n      default:\n        return formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (GMT)\n  O: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"O\":\n      case \"OO\":\n      case \"OOO\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"OOOO\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Timezone (specific non-location)\n  z: function (date, token, _localize) {\n    const timezoneOffset = date.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case \"z\":\n      case \"zz\":\n      case \"zzz\":\n        return \"GMT\" + formatTimezoneShort(timezoneOffset, \":\");\n      // Long\n      case \"zzzz\":\n      default:\n        return \"GMT\" + formatTimezone(timezoneOffset, \":\");\n    }\n  },\n\n  // Seconds timestamp\n  t: function (date, token, _localize) {\n    const timestamp = Math.trunc(date.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n\n  // Milliseconds timestamp\n  T: function (date, token, _localize) {\n    const timestamp = date.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  },\n};\n\nfunction formatTimezoneShort(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = Math.trunc(absOffset / 60);\n  const minutes = absOffset % 60;\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, delimiter) {\n  if (offset % 60 === 0) {\n    const sign = offset > 0 ? \"-\" : \"+\";\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n  return formatTimezone(offset, delimiter);\n}\n\nfunction formatTimezone(offset, delimiter = \"\") {\n  const sign = offset > 0 ? \"-\" : \"+\";\n  const absOffset = Math.abs(offset);\n  const hours = addLeadingZeros(Math.trunc(absOffset / 60), 2);\n  const minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n","import { isDate } from \"./isDate.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate](https://date-fns.org/docs/toDate)\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to check\n *\n * @returns The date is valid\n *\n * @example\n * // For the valid date:\n * const result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * const result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * const result = isValid(new Date(''))\n * //=> false\n */\nexport function isValid(date) {\n  if (!isDate(date) && typeof date !== \"number\") {\n    return false;\n  }\n  const _date = toDate(date);\n  return !isNaN(Number(_date));\n}\n\n// Fallback for modularized imports:\nexport default isValid;\n","/**\n * @name isDate\n * @category Common Helpers\n * @summary Is the given value a date?\n *\n * @description\n * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.\n *\n * @param value - The value to check\n *\n * @returns True if the given value is a date\n *\n * @example\n * // For a valid date:\n * const result = isDate(new Date())\n * //=> true\n *\n * @example\n * // For an invalid date:\n * const result = isDate(new Date(NaN))\n * //=> true\n *\n * @example\n * // For some value:\n * const result = isDate('2014-02-31')\n * //=> false\n *\n * @example\n * // For an object:\n * const result = isDate({})\n * //=> false\n */\nexport function isDate(value) {\n  return (\n    value instanceof Date ||\n    (typeof value === \"object\" &&\n      Object.prototype.toString.call(value) === \"[object Date]\")\n  );\n}\n\n// Fallback for modularized imports:\nexport default isDate;\n","import { defaultLocale } from \"./_lib/defaultLocale.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\nimport { formatters } from \"./_lib/format/formatters.mjs\";\nimport { longFormatters } from \"./_lib/format/longFormatters.mjs\";\nimport {\n  isProtectedDayOfYearToken,\n  isProtectedWeekYearToken,\n  warnOrThrowProtectedError,\n} from \"./_lib/protectedTokens.mjs\";\nimport { isValid } from \"./isValid.mjs\";\nimport { toDate } from \"./toDate.mjs\";\n\n// Rexports of internal for libraries to use.\n// See: https://github.com/date-fns/date-fns/issues/3638#issuecomment-1877082874\nexport { formatters, longFormatters };\n\n// This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\nconst formattingTokensRegExp =\n  /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g;\n\n// This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\nconst longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n\nconst escapedStringRegExp = /^'([^]*?)'?$/;\nconst doubleQuoteRegExp = /''/g;\nconst unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n\nexport { format as formatDate };\n\n/**\n * The {@link format} function options.\n */\n\n/**\n * @name format\n * @alias formatDate\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear](https://date-fns.org/docs/getISOWeekYear)\n *    and [getWeekYear](https://date-fns.org/docs/getWeekYear)).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * 9. `D` and `DD` tokens represent days of the year but they are often confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param format - The string of tokens\n * @param options - An object with options\n *\n * @returns The formatted date string\n *\n * @throws `date` must not be Invalid Date\n * @throws `options.locale` must contain `localize` property\n * @throws `options.locale` must contain `formatLong` property\n * @throws use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md\n * @throws format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * const result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * const result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\nexport function format(date, formatStr, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n\n  const firstWeekContainsDate =\n    options?.firstWeekContainsDate ??\n    options?.locale?.options?.firstWeekContainsDate ??\n    defaultOptions.firstWeekContainsDate ??\n    defaultOptions.locale?.options?.firstWeekContainsDate ??\n    1;\n\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const originalDate = toDate(date);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError(\"Invalid time value\");\n  }\n\n  let parts = formatStr\n    .match(longFormattingTokensRegExp)\n    .map((substring) => {\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        const longFormatter = longFormatters[firstCharacter];\n        return longFormatter(substring, locale.formatLong);\n      }\n      return substring;\n    })\n    .join(\"\")\n    .match(formattingTokensRegExp)\n    .map((substring) => {\n      // Replace two single quote characters with one single quote character\n      if (substring === \"''\") {\n        return { isToken: false, value: \"'\" };\n      }\n\n      const firstCharacter = substring[0];\n      if (firstCharacter === \"'\") {\n        return { isToken: false, value: cleanEscapedString(substring) };\n      }\n\n      if (formatters[firstCharacter]) {\n        return { isToken: true, value: substring };\n      }\n\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError(\n          \"Format string contains an unescaped latin alphabet character `\" +\n            firstCharacter +\n            \"`\",\n        );\n      }\n\n      return { isToken: false, value: substring };\n    });\n\n  // invoke localize preprocessor (only for french locales at the moment)\n  if (locale.localize.preprocessor) {\n    parts = locale.localize.preprocessor(originalDate, parts);\n  }\n\n  const formatterOptions = {\n    firstWeekContainsDate,\n    weekStartsOn,\n    locale,\n  };\n\n  return parts\n    .map((part) => {\n      if (!part.isToken) return part.value;\n\n      const token = part.value;\n\n      if (\n        (!options?.useAdditionalWeekYearTokens &&\n          isProtectedWeekYearToken(token)) ||\n        (!options?.useAdditionalDayOfYearTokens &&\n          isProtectedDayOfYearToken(token))\n      ) {\n        warnOrThrowProtectedError(token, formatStr, String(date));\n      }\n\n      const formatter = formatters[token[0]];\n      return formatter(originalDate, token, locale.localize, formatterOptions);\n    })\n    .join(\"\");\n}\n\nfunction cleanEscapedString(input) {\n  const matched = input.match(escapedStringRegExp);\n\n  if (!matched) {\n    return input;\n  }\n\n  return matched[1].replace(doubleQuoteRegExp, \"'\");\n}\n\n// Fallback for modularized imports:\nexport default format;\n","const dayOfYearTokenRE = /^D+$/;\nconst weekYearTokenRE = /^Y+$/;\n\nconst throwTokens = [\"D\", \"DD\", \"YY\", \"YYYY\"];\n\nexport function isProtectedDayOfYearToken(token) {\n  return dayOfYearTokenRE.test(token);\n}\n\nexport function isProtectedWeekYearToken(token) {\n  return weekYearTokenRE.test(token);\n}\n\nexport function warnOrThrowProtectedError(token, format, input) {\n  const _message = message(token, format, input);\n  console.warn(_message);\n  if (throwTokens.includes(token)) throw new RangeError(_message);\n}\n\nfunction message(token, format, input) {\n  const subject = token[0] === \"Y\" ? \"years\" : \"days of the month\";\n  return `Use \\`${token.toLowerCase()}\\` instead of \\`${token}\\` (in \\`${format}\\`) for formatting ${subject} to the input \\`${input}\\`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md`;\n}\n","import { addLeadingZeros } from \"../addLeadingZeros.mjs\";\n\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nexport const lightFormatters = {\n  // Year\n  y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n\n    const signedYear = date.getFullYear();\n    // Returns 1 for 1 BC (which is year 0 in JavaScript)\n    const year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === \"yy\" ? year % 100 : year, token.length);\n  },\n\n  // Month\n  M(date, token) {\n    const month = date.getMonth();\n    return token === \"M\" ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n\n  // Day of the month\n  d(date, token) {\n    return addLeadingZeros(date.getDate(), token.length);\n  },\n\n  // AM or PM\n  a(date, token) {\n    const dayPeriodEnumValue = date.getHours() / 12 >= 1 ? \"pm\" : \"am\";\n\n    switch (token) {\n      case \"a\":\n      case \"aa\":\n        return dayPeriodEnumValue.toUpperCase();\n      case \"aaa\":\n        return dayPeriodEnumValue;\n      case \"aaaaa\":\n        return dayPeriodEnumValue[0];\n      case \"aaaa\":\n      default:\n        return dayPeriodEnumValue === \"am\" ? \"a.m.\" : \"p.m.\";\n    }\n  },\n\n  // Hour [1-12]\n  h(date, token) {\n    return addLeadingZeros(date.getHours() % 12 || 12, token.length);\n  },\n\n  // Hour [0-23]\n  H(date, token) {\n    return addLeadingZeros(date.getHours(), token.length);\n  },\n\n  // Minute\n  m(date, token) {\n    return addLeadingZeros(date.getMinutes(), token.length);\n  },\n\n  // Second\n  s(date, token) {\n    return addLeadingZeros(date.getSeconds(), token.length);\n  },\n\n  // Fraction of second\n  S(date, token) {\n    const numberOfDigits = token.length;\n    const milliseconds = date.getMilliseconds();\n    const fractionalSeconds = Math.trunc(\n      milliseconds * Math.pow(10, numberOfDigits - 3),\n    );\n    return addLeadingZeros(fractionalSeconds, token.length);\n  },\n};\n","const dateLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"P\":\n      return formatLong.date({ width: \"short\" });\n    case \"PP\":\n      return formatLong.date({ width: \"medium\" });\n    case \"PPP\":\n      return formatLong.date({ width: \"long\" });\n    case \"PPPP\":\n    default:\n      return formatLong.date({ width: \"full\" });\n  }\n};\n\nconst timeLongFormatter = (pattern, formatLong) => {\n  switch (pattern) {\n    case \"p\":\n      return formatLong.time({ width: \"short\" });\n    case \"pp\":\n      return formatLong.time({ width: \"medium\" });\n    case \"ppp\":\n      return formatLong.time({ width: \"long\" });\n    case \"pppp\":\n    default:\n      return formatLong.time({ width: \"full\" });\n  }\n};\n\nconst dateTimeLongFormatter = (pattern, formatLong) => {\n  const matchResult = pattern.match(/(P+)(p+)?/) || [];\n  const datePattern = matchResult[1];\n  const timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  let dateTimeFormat;\n\n  switch (datePattern) {\n    case \"P\":\n      dateTimeFormat = formatLong.dateTime({ width: \"short\" });\n      break;\n    case \"PP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"medium\" });\n      break;\n    case \"PPP\":\n      dateTimeFormat = formatLong.dateTime({ width: \"long\" });\n      break;\n    case \"PPPP\":\n    default:\n      dateTimeFormat = formatLong.dateTime({ width: \"full\" });\n      break;\n  }\n\n  return dateTimeFormat\n    .replace(\"{{date}}\", dateLongFormatter(datePattern, formatLong))\n    .replace(\"{{time}}\", timeLongFormatter(timePattern, formatLong));\n};\n\nexport const longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter,\n};\n"],"names":["formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","formatLong","date","buildFormatLongFn","formats","full","long","medium","short","defaultWidth","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","LONG_MONTHS_TOKENS","localize","preprocessor","parts","getDate","some","part","isToken","includes","value","map","ordinalNumber","dirtyNumber","options","number","Number","unit","suffix","era","buildLocalizeFn","values","narrow","abbreviated","wide","quarter","argumentCallback","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","fr","code","formatDistance","token","count","result","form","replace","String","addSuffix","comparison","formatRelative","match","matchPattern","parsePattern","valueCallback","parseInt","buildMatchFn","matchPatterns","defaultMatchWidth","parsePatterns","any","defaultParseWidth","index","weekStartsOn","firstWeekContainsDate","buildMatchPatternFn","args","string","matchResult","matchedString","parseResult","rest","slice","length","two","indexOf","formattingValues","defaultFormattingWidth","ordinalName","he","tokenValue","isNaN","threeToTen","num","ar","usageGroup","rem100","enUS","toString","formatRelativeLocalePlural","es","getHours","standalone","withPreposition","monthValues","formattingMonthValues","de","width","key","Array","isArray","array","predicate","findIndex","pattern","test","object","Object","prototype","hasOwnProperty","call","findKey","valuesArray","context","getDefaultOptions","defaultOptions","toDate","argument","argStr","Date","constructor","NaN","startOfDay","_date","setHours","getTimezoneOffsetInMilliseconds","utcDate","UTC","getFullYear","getMonth","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","constructFrom","getDayOfYear","dateLeft","dateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","Math","round","differenceInCalendarDays","cleanDate","setFullYear","startOfYear","startOfWeek","locale","getDay","diff","setDate","startOfISOWeek","getISOWeekYear","year","fourthOfJanuaryOfNextYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","getISOWeek","fourthOfJanuary","startOfISOWeekYear","millisecondsInWeek","getWeekYear","firstWeekOfNextYear","firstWeekOfThisYear","getWeek","firstWeek","startOfWeekYear","addLeadingZeros","targetLength","abs","padStart","formatTimezoneShort","offset","delimiter","sign","absOffset","hours","trunc","minutes","formatTimezoneWithOptionalMinutes","formatTimezone","isValid","format","formatStr","originalDate","RangeError","longFormattingTokensRegExp","substring","firstCharacter","longFormatter","longFormatters","join","formattingTokensRegExp","cleanEscapedString","formatters","unescapedLatinCharacterRegExp","formatterOptions","useAdditionalWeekYearTokens","weekYearTokenRE","isProtectedWeekYearToken","useAdditionalDayOfYearTokens","dayOfYearTokenRE","isProtectedDayOfYearToken","input","_message","subject","toLowerCase","message","console","throwTokens","warnOrThrowProtectedError","formatter","matched","escapedStringRegExp","doubleQuoteRegExp","pow","lightFormatters","y","signedYear","M","d","a","dayPeriodEnumValue","toUpperCase","h","H","m","s","S","numberOfDigits","milliseconds","G","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","I","isoWeek","D","dayOfYear","E","dayOfWeek","e","localDayOfWeek","c","i","isoDayOfWeek","b","B","K","k","X","timezoneOffset","getTimezoneOffset","x","O","z","t","T","dateLongFormatter","timeLongFormatter","p","P","datePattern","timePattern","dateTimeFormat"],"sourceRoot":""}