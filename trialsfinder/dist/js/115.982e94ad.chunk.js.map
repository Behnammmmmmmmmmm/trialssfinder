{"version":3,"file":"js/115.982e94ad.chunk.js","mappings":"kLAKA,MA2GA,EA3G4BA,KAC1B,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC5BK,EAASC,IAAcN,EAAAA,EAAAA,WAAS,IACjC,MAAEO,EAAK,KAAEC,IAASC,EAAAA,EAAAA,MAClBC,GAAWC,EAAAA,EAAAA,MAqBjB,OACEC,EAAAA,EAAAA,GAAA,OAAKC,UAAU,gEAA+DC,UAC5EF,EAAAA,EAAAA,GAAA,OAAKC,UAAU,iBAAiBE,MAAO,CAAEC,SAAU,QAASC,MAAO,QAASH,UAC1EI,EAAAA,EAAAA,IAAA,OAAKL,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,GAAA,MAAIC,UAAU,sCAAqCC,SAAC,kBACpDF,EAAAA,EAAAA,GAAA,KAAGC,UAAU,8BAA6BC,SAAC,4BAE1CX,IACCS,EAAAA,EAAAA,GAAA,OAAKC,UAAU,aAAa,eAAa,SAAQC,SAC9CX,KAILe,EAAAA,EAAAA,IAAA,QAAMC,SAhCOC,UACnBC,EAAEC,iBACFlB,EAAS,IACTE,GAAW,GAEX,UACQC,EAAMT,EAAUG,GAEpBS,EADsB,YAApBF,GAAMe,UACC,aAEA,WAEb,CAAE,MAAOpB,GACPC,EAAS,yCACX,CAAC,QACCE,GAAW,EACb,GAgBmCQ,SAAA,EAC3BI,EAAAA,EAAAA,IAAA,OAAKL,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,GAAA,SAAOY,QAAQ,WAAWX,UAAU,aAAYC,SAAC,cACjDF,EAAAA,EAAAA,GAAA,SACEa,GAAG,WACHC,KAAK,OACLC,MAAO7B,EACP8B,SAAWP,GAAMtB,EAAYsB,EAAEQ,OAAOF,OACtCG,YAAY,sBACZjB,UAAU,eACVkB,UAAQ,EACRC,SAAU3B,QAIda,EAAAA,EAAAA,IAAA,OAAKL,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,GAAA,SAAOY,QAAQ,WAAWX,UAAU,aAAYC,SAAC,cACjDF,EAAAA,EAAAA,GAAA,SACEa,GAAG,WACHC,KAAK,WACLC,MAAO1B,EACP2B,SAAWP,GAAMnB,EAAYmB,EAAEQ,OAAOF,OACtCG,YAAY,sBACZjB,UAAU,eACVkB,UAAQ,EACRC,SAAU3B,QAIdO,EAAAA,EAAAA,GAAA,UACEc,KAAK,SACLb,UAAU,kBACV,eAAa,UACb,YAAU,KACVmB,SAAU3B,EAAQS,SAEjBT,GACCa,EAAAA,EAAAA,IAAA,QAAML,UAAU,mCAAkCC,SAAA,EAChDF,EAAAA,EAAAA,GAAA,QAAMC,UAAU,iBAAsB,mBAIxC,gBAKND,EAAAA,EAAAA,GAAA,OAAKC,UAAU,cAAaC,UAC1BF,EAAAA,EAAAA,GAACqB,EAAAA,GAAI,CAACC,GAAG,mBAAmBrB,UAAU,+BAA8BC,SAAC,wBAKvEF,EAAAA,EAAAA,GAAA,MAAIC,UAAU,UAEdK,EAAAA,EAAAA,IAAA,OAAKL,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,GAAA,KAAGC,UAAU,kBAAiBC,SAAC,4BAC/BF,EAAAA,EAAAA,GAACqB,EAAAA,GAAI,CAACC,GAAG,YAAYrB,UAAU,MAAM,eAAa,UAASC,SAAC,6B","sources":["webpack://trialsfinder/./src/pages/LoginPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\n\r\nimport { useAuth } from '../hooks/useStore';\r\n\r\nconst LoginPage: React.FC = () => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const { login, user } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n    \r\n    try {\r\n      await login(username, password);\r\n      if (user?.user_type === 'company') {\r\n        navigate('/dashboard');\r\n      } else {\r\n        navigate('/profile');\r\n      }\r\n    } catch (error) {\r\n      setError('Invalid credentials. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container min-h-screen flex items-center justify-center py-12\">\r\n      <div className=\"card shadow-xl\" style={{ maxWidth: '400px', width: '100%' }}>\r\n        <div className=\"card-body\">\r\n          <h1 className=\"text-3xl font-bold text-center mb-6\">Welcome Back</h1>\r\n          <p className=\"text-center text-muted mb-6\">Sign in to your account</p>\r\n          \r\n          {error && (\r\n            <div className=\"alert mb-4\" data-variant=\"danger\">\r\n              {error}\r\n            </div>\r\n          )}\r\n          \r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\" className=\"form-label\">Username</label>\r\n              <input\r\n                id=\"username\"\r\n                type=\"text\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                placeholder=\"Enter your username\"\r\n                className=\"form-control\"\r\n                required\r\n                disabled={loading}\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n              <input\r\n                id=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"Enter your password\"\r\n                className=\"form-control\"\r\n                required\r\n                disabled={loading}\r\n              />\r\n            </div>\r\n            \r\n            <button \r\n              type=\"submit\" \r\n              className=\"btn w-full mb-4\" \r\n              data-variant=\"primary\"\r\n              data-size=\"lg\"\r\n              disabled={loading}\r\n            >\r\n              {loading ? (\r\n                <span className=\"flex items-center justify-center\">\r\n                  <span className=\"spinner mr-2\"></span>\r\n                  Signing in...\r\n                </span>\r\n              ) : (\r\n                'Sign In'\r\n              )}\r\n            </button>\r\n          </form>\r\n          \r\n          <div className=\"text-center\">\r\n            <Link to=\"/forgot-password\" className=\"text-primary hover:underline\">\r\n              Forgot Password?\r\n            </Link>\r\n          </div>\r\n          \r\n          <hr className=\"my-6\" />\r\n          \r\n          <div className=\"text-center\">\r\n            <p className=\"text-muted mb-2\">Don&apos;t have an account?</p>\r\n            <Link to=\"/register\" className=\"btn\" data-variant=\"outline\">\r\n              Create Account\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;"],"names":["LoginPage","username","setUsername","useState","password","setPassword","error","setError","loading","setLoading","login","user","useAuth","navigate","useNavigate","_jsx","className","children","style","maxWidth","width","_jsxs","onSubmit","async","e","preventDefault","user_type","htmlFor","id","type","value","onChange","target","placeholder","required","disabled","Link","to"],"sourceRoot":""}