{"version":3,"file":"static/js/711.dfeae613.chunk.js","mappings":"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","sources":["webpack://trialsfinder/./src/pages/RegisterPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../hooks/useStore';\r\n\r\nexport const RegisterPage: React.FC = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    user_type: 'user' as 'user' | 'company',\r\n  });\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [loading, setLoading] = useState(false);\r\n  const { register } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {};\r\n\r\n    if (!formData.email.includes('@')) {\r\n      newErrors.email = 'Please enter a valid email';\r\n    }\r\n\r\n    if (formData.password.length < 8) {\r\n      newErrors.password = 'Password must be at least 8 characters';\r\n    }\r\n\r\n    // Only validate confirm password for company accounts\r\n    if (formData.user_type === 'company' && formData.password !== formData.confirmPassword) {\r\n      newErrors.confirmPassword = 'Passwords do not match';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!validateForm()) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      const registrationData: any = {\r\n        email: formData.email,\r\n        password: formData.password,\r\n        user_type: formData.user_type,\r\n      };\r\n\r\n      // Only include confirm_password for company registration\r\n      if (formData.user_type === 'company') {\r\n        registrationData.confirm_password = formData.confirmPassword;\r\n      }\r\n\r\n      await register(registrationData);\r\n      navigate('/verify-email');\r\n    } catch (error) {\r\n      setErrors({ general: 'Registration failed. Please try again.' });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    const { name, value } = e.target;\r\n    if (name === 'user_type') {\r\n      setFormData({ ...formData, [name]: value as 'user' | 'company' });\r\n    } else {\r\n      setFormData({ ...formData, [name]: value });\r\n    }\r\n    // Clear error for this field\r\n    if (errors[name]) {\r\n      setErrors({ ...errors, [name]: '' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container min-h-screen flex items-center justify-center py-12\">\r\n      <div className=\"card shadow-xl\" style={{ maxWidth: '500px', width: '100%' }}>\r\n        <div className=\"card-body\">\r\n          <h1 className=\"text-3xl font-bold text-center mb-6\">Create Account</h1>\r\n          <p className=\"text-center text-muted mb-6\">Join TrialsFinder today</p>\r\n\r\n          {errors.general && (\r\n            <div className=\"alert mb-4\" data-variant=\"danger\">\r\n              {errors.general}\r\n            </div>\r\n          )}\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\" className=\"form-label\">\r\n                Email\r\n              </label>\r\n              <input\r\n                id=\"email\"\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n                placeholder=\"your@email.com\"\r\n                className={`form-control ${errors.email ? 'border-danger' : ''}`}\r\n                required\r\n                disabled={loading}\r\n              />\r\n              {errors.email && <p className=\"text-danger text-sm mt-1\">{errors.email}</p>}\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\" className=\"form-label\">\r\n                Password\r\n              </label>\r\n              <input\r\n                id=\"password\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n                placeholder=\"Create a strong password\"\r\n                className={`form-control ${errors.password ? 'border-danger' : ''}`}\r\n                required\r\n                disabled={loading}\r\n              />\r\n              {errors.password && <p className=\"text-danger text-sm mt-1\">{errors.password}</p>}\r\n            </div>\r\n\r\n            {/* Only show confirm password for company accounts */}\r\n            {formData.user_type === 'company' && (\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"confirmPassword\" className=\"form-label\">\r\n                  Confirm Password\r\n                </label>\r\n                <input\r\n                  id=\"confirmPassword\"\r\n                  type=\"password\"\r\n                  name=\"confirmPassword\"\r\n                  value={formData.confirmPassword}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Confirm your password\"\r\n                  className={`form-control ${errors.confirmPassword ? 'border-danger' : ''}`}\r\n                  required\r\n                  disabled={loading}\r\n                />\r\n                {errors.confirmPassword && (\r\n                  <p className=\"text-danger text-sm mt-1\">{errors.confirmPassword}</p>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"user_type\" className=\"form-label\">\r\n                Account Type\r\n              </label>\r\n              <select\r\n                id=\"user_type\"\r\n                name=\"user_type\"\r\n                value={formData.user_type}\r\n                onChange={handleChange}\r\n                className=\"form-control\"\r\n                disabled={loading}\r\n              >\r\n                <option value=\"user\">Individual User</option>\r\n                <option value=\"company\">Company</option>\r\n              </select>\r\n              <p className=\"text-sm text-muted mt-1\">\r\n                Choose \"Company\" if you want to list trials\r\n              </p>\r\n            </div>\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn w-full mb-4\"\r\n              data-variant=\"primary\"\r\n              data-size=\"lg\"\r\n              disabled={loading}\r\n            >\r\n              {loading ? (\r\n                <span className=\"flex items-center justify-center\">\r\n                  <span className=\"spinner mr-2\"></span>\r\n                  Creating Account...\r\n                </span>\r\n              ) : (\r\n                'Create Account'\r\n              )}\r\n            </button>\r\n          </form>\r\n\r\n          <div className=\"text-center\">\r\n            <p className=\"text-muted\">\r\n              Already have an account?{' '}\r\n              <a href=\"/login\" className=\"text-primary hover:underline\">\r\n                Sign In\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;"],"names":["RegisterPage","formData","setFormData","useState","email","password","confirmPassword","user_type","errors","setErrors","loading","setLoading","register","useAuth","navigate","useNavigate","handleChange","e","name","value","target","_jsx","className","children","style","maxWidth","width","_jsxs","general","onSubmit","async","preventDefault","validateForm","newErrors","includes","length","Object","keys","registrationData","confirm_password","error","htmlFor","id","type","onChange","placeholder","required","disabled","href"],"sourceRoot":""}