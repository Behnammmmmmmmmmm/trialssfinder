{"version":3,"file":"static/js/403.1f50918f.chunk.js","mappings":"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","sources":["webpack://trialsfinder/./src/api/trials.ts","webpack://trialsfinder/./src/i18n/index.ts","webpack://trialsfinder/./src/api/notifications.ts","webpack://trialsfinder/./src/utils/apiCache.ts","webpack://trialsfinder/./src/utils/api.ts","webpack://trialsfinder/./src/context/AppContext.tsx","webpack://trialsfinder/./src/utils/errors.ts","webpack://trialsfinder/./src/components/ErrorBoundary.tsx","webpack://trialsfinder/./src/i18n/config.ts","webpack://trialsfinder/./src/components/LanguageSelector.tsx","webpack://trialsfinder/./src/components/Layout.tsx","webpack://trialsfinder/./src/App.tsx","webpack://trialsfinder/./src/api/auth.ts","webpack://trialsfinder/./src/store/slices/authSlice.ts","webpack://trialsfinder/./src/store/slices/notificationSlice.ts","webpack://trialsfinder/./src/store/slices/trialsSlice.ts","webpack://trialsfinder/./src/store/slices/uiSlice.ts","webpack://trialsfinder/./src/store/index.ts","webpack://trialsfinder/./src/hooks/useStore.ts"],"sourcesContent":["import api from '../utils/api';\r\n\r\nexport const trialsAPI = {\r\n  list: (params?: any) => api.get('/trials/', { params }),\r\n  get: (id: number) => api.get(`/trials/${id}/`),\r\n  create: (data: any) => api.post('/trials/create/', data),\r\n  companyTrials: () => api.get('/trials/company/'),\r\n  toggleFavorite: (id: number) => api.post(`/trials/${id}/favorite/`),\r\n  getFavorites: () => api.get('/trials/favorites/'),\r\n  getIndustries: () => api.get('/trials/industries/'),\r\n  followIndustries: (industries: number[]) => api.post('/trials/industries/follow/', { industries }),\r\n  getUserIndustries: () => api.get('/trials/industries/user/'),\r\n  approveTrial: (id: number) => api.post(`/trials/${id}/approve/`),\r\n  toggleFeatured: (id: number) => api.post(`/trials/${id}/toggle-featured/`),\r\n  adminList: () => api.get('/trials/admin/'),\r\n};","import { format } from 'date-fns';\r\nimport { enUS, es, fr, de, ar, he } from 'date-fns/locale';\r\nimport { useTranslation as useI18nTranslation } from 'react-i18next';\r\n\r\nconst locales = { en: enUS, es, fr, de, ar, he };\r\n\r\nexport const useTranslation = () => {\r\n  const { t, i18n } = useI18nTranslation();\r\n  \r\n  const formatDate = (date: Date | string, formatStr = 'PP') => {\r\n    const locale = locales[i18n.language as keyof typeof locales] || enUS;\r\n    return format(new Date(date), formatStr, { locale });\r\n  };\r\n  \r\n  const formatCurrency = (amount: number, currency = 'USD') => {\r\n    return new Intl.NumberFormat(i18n.language, {\r\n      style: 'currency',\r\n      currency,\r\n    }).format(amount);\r\n  };\r\n  \r\n  const formatNumber = (num: number) => {\r\n    return new Intl.NumberFormat(i18n.language).format(num);\r\n  };\r\n  \r\n  return {\r\n    t,\r\n    i18n,\r\n    formatDate,\r\n    formatCurrency,\r\n    formatNumber,\r\n    isRTL: ['ar', 'he'].includes(i18n.language),\r\n  };\r\n};\r\n\r\nexport { default as i18n } from './config';","import api from '../utils/api';\r\n\r\nexport const notificationsAPI = {\r\n  list: () => api.get('/notifications/'),\r\n  markRead: (id: number) => api.post(`/notifications/${id}/read/`),\r\n  contact: (data: any) => api.post('/notifications/contact/', data),\r\n};","interface CacheOptions {\r\n  ttl?: number;\r\n  max?: number;\r\n}\r\n\r\ninterface CacheItem<T> {\r\n  data: T;\r\n  expiry: number;\r\n}\r\n\r\nclass APICache {\r\n  private cache: Map<string, CacheItem<any>>;\r\n  private pendingRequests: Map<string, Promise<any>>;\r\n  private maxSize: number;\r\n  private defaultTTL: number;\r\n\r\n  constructor(options: CacheOptions = {}) {\r\n    this.cache = new Map();\r\n    this.pendingRequests = new Map();\r\n    this.maxSize = options.max || 500;\r\n    this.defaultTTL = options.ttl || 1000 * 60 * 5; // 5 minutes default\r\n  }\r\n\r\n  generateKey(url: string, params?: any): string {\r\n    const sortedParams = params ? JSON.stringify(params, Object.keys(params).sort()) : '';\r\n    return `${url}:${sortedParams}`;\r\n  }\r\n\r\n  private isExpired(item: CacheItem<any>): boolean {\r\n    return Date.now() > item.expiry;\r\n  }\r\n\r\n  private evictOldest(): void {\r\n    if (this.cache.size >= this.maxSize) {\r\n      const firstKey = this.cache.keys().next().value;\r\n      if (firstKey) {\r\n        this.cache.delete(firstKey);\r\n      }\r\n    }\r\n  }\r\n\r\n  get<T>(key: string): T | undefined {\r\n    const item = this.cache.get(key);\r\n    if (!item) {\r\n      return undefined;\r\n    }\r\n    \r\n    if (this.isExpired(item)) {\r\n      this.cache.delete(key);\r\n      return undefined;\r\n    }\r\n    \r\n    return item.data;\r\n  }\r\n\r\n  set<T>(key: string, data: T, ttl?: number): void {\r\n    this.evictOldest();\r\n    \r\n    const expiry = Date.now() + (ttl || this.defaultTTL);\r\n    this.cache.set(key, { data, expiry });\r\n  }\r\n\r\n  async getOrFetch<T>(\r\n    url: string,\r\n    fetcher: () => Promise<T>,\r\n    options: { ttl?: number; params?: any } = {}\r\n  ): Promise<T> {\r\n    const key = this.generateKey(url, options.params);\r\n    \r\n    // Check cache first\r\n    const cached = this.get<T>(key);\r\n    if (cached !== undefined) {\r\n      return cached;\r\n    }\r\n\r\n    // Check if request is already pending\r\n    const pending = this.pendingRequests.get(key);\r\n    if (pending) {\r\n      return pending;\r\n    }\r\n\r\n    // Make request and cache result\r\n    const request = fetcher()\r\n      .then(data => {\r\n        this.set(key, data, options.ttl);\r\n        this.pendingRequests.delete(key);\r\n        return data;\r\n      })\r\n      .catch(error => {\r\n        this.pendingRequests.delete(key);\r\n        throw error;\r\n      });\r\n\r\n    this.pendingRequests.set(key, request);\r\n    return request;\r\n  }\r\n\r\n  invalidate(pattern?: string): void {\r\n    if (!pattern) {\r\n      this.cache.clear();\r\n      return;\r\n    }\r\n\r\n    // Invalidate keys matching pattern\r\n    for (const key of Array.from(this.cache.keys())) {\r\n      if (key.includes(pattern)) {\r\n        this.cache.delete(key);\r\n      }\r\n    }\r\n  }\r\n\r\n  invalidateUser(userId: number): void {\r\n    this.invalidate(`user:${userId}`);\r\n  }\r\n\r\n  invalidateTrial(trialId: number): void {\r\n    this.invalidate(`trial:${trialId}`);\r\n    this.invalidate('trials:');\r\n  }\r\n}\r\n\r\nexport const apiCache = new APICache();\r\n\r\n// Axios interceptor for automatic caching\r\nexport const setupCacheInterceptor = (axiosInstance: any) => {\r\n  // Check if axiosInstance exists and has interceptors\r\n  if (!axiosInstance || !axiosInstance.interceptors) {\r\n    console.warn('Invalid axios instance provided to setupCacheInterceptor');\r\n    return;\r\n  }\r\n\r\n  axiosInstance.interceptors.request.use((config: any) => {\r\n    // Only cache GET requests\r\n    if (config.method === 'get' && config.cache !== false) {\r\n      const cacheKey = apiCache.generateKey(config.url, config.params);\r\n      const cached = apiCache.get(cacheKey);\r\n      \r\n      if (cached) {\r\n        config.adapter = () => Promise.resolve({\r\n          data: cached,\r\n          status: 200,\r\n          statusText: 'OK',\r\n          headers: { 'x-cache': 'HIT' },\r\n          config,\r\n        });\r\n      }\r\n    }\r\n    return config;\r\n  });\r\n\r\n  axiosInstance.interceptors.response.use((response: any) => {\r\n    // Cache successful GET responses\r\n    if (\r\n      response.config.method === 'get' &&\r\n      response.status === 200 &&\r\n      response.config.cache !== false\r\n    ) {\r\n      const cacheKey = apiCache.generateKey(response.config.url, response.config.params);\r\n      apiCache.set(cacheKey, response.data, response.config.cacheTTL);\r\n    }\r\n    return response;\r\n  });\r\n};","import axios from 'axios';\r\nimport { apiCache, setupCacheInterceptor } from './apiCache';\r\n\r\n// Use proxy for development, direct path for production\r\nconst API_BASE_URL = process.env.NODE_ENV === 'development' \r\n  ? '/api' // This will use the proxy defined in webpack.config.js\r\n  : '/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    common: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  },\r\n  withCredentials: true, // Important for CSRF\r\n  timeout: 30000, // 30 second timeout\r\n});\r\n\r\n// Get CSRF token from cookie\r\nfunction getCookie(name: string): string | null {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\n// Setup cache interceptor\r\nsetupCacheInterceptor(api);\r\n\r\n// Request interceptor\r\napi.interceptors.request.use((config) => {\r\n  // Add auth token\r\n  const token = localStorage.getItem('access_token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n\r\n  // Add CSRF token for non-GET requests\r\n  if (config.method !== 'get') {\r\n    const csrfToken = getCookie('csrftoken');\r\n    if (csrfToken) {\r\n      config.headers['X-CSRFToken'] = csrfToken;\r\n    }\r\n  }\r\n\r\n  // Add security headers\r\n  config.headers['X-Requested-With'] = 'XMLHttpRequest';\r\n\r\n  return config;\r\n});\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    // Handle network errors\r\n    if (!error.response) {\r\n      // Backend is not available\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.warn('Backend server is not running. Returning mock data.');\r\n        \r\n        // Return mock data based on the endpoint\r\n        if (originalRequest.url?.includes('/trials')) {\r\n          return { data: { results: [], count: 0, next: null, previous: null } };\r\n        }\r\n        if (originalRequest.url?.includes('/auth/me')) {\r\n          return Promise.reject(new Error('Not authenticated'));\r\n        }\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    // Handle 401 errors\r\n    if (error.response?.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n\r\n      try {\r\n        const refreshToken = localStorage.getItem('refresh_token');\r\n        if (!refreshToken) throw new Error('No refresh token');\r\n\r\n        const response = await axios.post(`${API_BASE_URL}/auth/refresh/`, {\r\n          refresh: refreshToken,\r\n        });\r\n\r\n        localStorage.setItem('access_token', response.data.access);\r\n        api.defaults.headers.common['Authorization'] = `Bearer ${response.data.access}`;\r\n\r\n        return api(originalRequest);\r\n      } catch (refreshError) {\r\n        // Clear cache on logout\r\n        apiCache.invalidate('');\r\n        localStorage.clear();\r\n        \r\n        // Only redirect in production\r\n        if (process.env.NODE_ENV === 'production') {\r\n          window.location.href = '/login';\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Cache invalidation helpers\r\nexport const invalidateUserCache = (userId: number) => {\r\n  apiCache.invalidateUser(userId);\r\n};\r\n\r\nexport const invalidateTrialCache = (trialId: number) => {\r\n  apiCache.invalidateTrial(trialId);\r\n};\r\n\r\nexport default api;","import React, { createContext, useContext, useReducer, ReactNode } from 'react';\r\nimport { User, Trial, Notification } from '../types';\r\n\r\ninterface AppState {\r\n  user: User | null;\r\n  trials: Trial[];\r\n  notifications: Notification[];\r\n  loading: Record<string, boolean>;\r\n  errors: Record<string, string>;\r\n}\r\n\r\ntype AppAction =\r\n  | { type: 'SET_USER'; payload: User | null }\r\n  | { type: 'SET_TRIALS'; payload: Trial[] }\r\n  | { type: 'ADD_TRIAL'; payload: Trial }\r\n  | { type: 'UPDATE_TRIAL'; payload: { id: number; trial: Partial<Trial> } }\r\n  | { type: 'SET_NOTIFICATIONS'; payload: Notification[] }\r\n  | { type: 'MARK_NOTIFICATION_READ'; payload: number }\r\n  | { type: 'SET_LOADING'; payload: { key: string; value: boolean } }\r\n  | { type: 'SET_ERROR'; payload: { key: string; error: string | null } }\r\n  | { type: 'CLEAR_ERRORS' };\r\n\r\nconst initialState: AppState = {\r\n  user: null,\r\n  trials: [],\r\n  notifications: [],\r\n  loading: {},\r\n  errors: {}\r\n};\r\n\r\nfunction appReducer(state: AppState, action: AppAction): AppState {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, user: action.payload };\r\n    \r\n    case 'SET_TRIALS':\r\n      return { ...state, trials: action.payload };\r\n    \r\n    case 'ADD_TRIAL':\r\n      return { ...state, trials: [...state.trials, action.payload] };\r\n    \r\n    case 'UPDATE_TRIAL':\r\n      return {\r\n        ...state,\r\n        trials: state.trials.map(trial =>\r\n          trial.id === action.payload.id\r\n            ? { ...trial, ...action.payload.trial }\r\n            : trial\r\n        )\r\n      };\r\n    \r\n    case 'SET_NOTIFICATIONS':\r\n      return { ...state, notifications: action.payload };\r\n    \r\n    case 'MARK_NOTIFICATION_READ':\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.map(notif =>\r\n          notif.id === action.payload\r\n            ? { ...notif, is_read: true }\r\n            : notif\r\n        )\r\n      };\r\n    \r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        loading: {\r\n          ...state.loading,\r\n          [action.payload.key]: action.payload.value\r\n        }\r\n      };\r\n    \r\n    case 'SET_ERROR':\r\n      return {\r\n        ...state,\r\n        errors: action.payload.error\r\n          ? { ...state.errors, [action.payload.key]: action.payload.error }\r\n          : Object.fromEntries(\r\n              Object.entries(state.errors).filter(([key]) => key !== action.payload.key)\r\n            )\r\n      };\r\n    \r\n    case 'CLEAR_ERRORS':\r\n      return { ...state, errors: {} };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst AppContext = createContext<{\r\n  state: AppState;\r\n  dispatch: React.Dispatch<AppAction>;\r\n} | null>(null);\r\n\r\nexport const AppProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n\r\n  return (\r\n    <AppContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useAppContext() {\r\n  const context = useContext(AppContext);\r\n  if (!context) {\r\n    throw new Error('useAppContext must be used within AppProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n// Selector hooks\r\nexport function useUser() {\r\n  const { state } = useAppContext();\r\n  return state.user;\r\n}\r\n\r\nexport function useTrials() {\r\n  const { state, dispatch } = useAppContext();\r\n  return {\r\n    trials: state.trials,\r\n    setTrials: (trials: Trial[]) => dispatch({ type: 'SET_TRIALS', payload: trials }),\r\n    addTrial: (trial: Trial) => dispatch({ type: 'ADD_TRIAL', payload: trial }),\r\n    updateTrial: (id: number, trial: Partial<Trial>) => \r\n      dispatch({ type: 'UPDATE_TRIAL', payload: { id, trial } })\r\n  };\r\n}\r\n\r\nexport function useLoading(key: string) {\r\n  const { state, dispatch } = useAppContext();\r\n  return {\r\n    isLoading: state.loading[key] || false,\r\n    setLoading: (value: boolean) => \r\n      dispatch({ type: 'SET_LOADING', payload: { key, value } })\r\n  };\r\n}\r\n\r\nexport function useError(key: string) {\r\n  const { state, dispatch } = useAppContext();\r\n  return {\r\n    error: state.errors[key] || null,\r\n    setError: (error: string | null) => \r\n      dispatch({ type: 'SET_ERROR', payload: { key, error } })\r\n  };\r\n}\r\n\r\nexport default AppProvider;","import axios, { AxiosError } from 'axios';\r\n\r\nexport interface ApiError {\r\n  code: string;\r\n  message: string;\r\n  details?: Record<string, any>;\r\n  request_id?: string;\r\n}\r\n\r\nexport interface ErrorResponse {\r\n  error: ApiError;\r\n}\r\n\r\nexport class TrialsFinderError extends Error {\r\n  code: string;\r\n  details?: Record<string, any>;\r\n  request_id?: string;\r\n\r\n  constructor(message: string, code: string = 'unknown_error', details?: Record<string, any>) {\r\n    super(message);\r\n    this.name = 'TrialsFinderError';\r\n    this.code = code;\r\n    this.details = details;\r\n  }\r\n}\r\n\r\nexport const parseError = (error: unknown): TrialsFinderError => {\r\n  if (axios.isAxiosError(error)) {\r\n    const axiosError = error as AxiosError<ErrorResponse>;\r\n    \r\n    if (axiosError.response?.data?.error) {\r\n      const apiError = axiosError.response.data.error;\r\n      return new TrialsFinderError(\r\n        apiError.message,\r\n        apiError.code,\r\n        apiError.details\r\n      );\r\n    }\r\n    \r\n    if (axiosError.code === 'ECONNABORTED') {\r\n      return new TrialsFinderError('Request timeout', 'timeout_error');\r\n    }\r\n    \r\n    if (axiosError.code === 'ERR_NETWORK') {\r\n      return new TrialsFinderError('Network error', 'network_error');\r\n    }\r\n    \r\n    if (!axiosError.response) {\r\n      return new TrialsFinderError('Network error', 'network_error');\r\n    }\r\n    \r\n    return new TrialsFinderError(axiosError.message || 'Request failed', 'request_error');\r\n  }\r\n  \r\n  if (error instanceof TrialsFinderError) {\r\n    return error;\r\n  }\r\n  \r\n  if (error instanceof Error) {\r\n    return new TrialsFinderError(error.message, 'client_error');\r\n  }\r\n  \r\n  return new TrialsFinderError('An unexpected error occurred', 'unknown_error');\r\n};\r\n\r\nexport const getErrorMessage = (error: unknown): string => {\r\n  const parsedError = parseError(error);\r\n  \r\n  const errorMessages: Record<string, string> = {\r\n    'network_error': 'Unable to connect to the server. Please check your internet connection.',\r\n    'timeout_error': 'Request took too long. Please try again.',\r\n    'authentication_error': 'Please log in to continue.',\r\n    'permission_error': \"You don't have permission to perform this action.\",\r\n    'validation_error': 'Please check your input and try again.',\r\n    'not_found': 'The requested resource was not found.',\r\n    'internal_error': 'Something went wrong on our end. Please try again later.',\r\n  };\r\n  \r\n  return errorMessages[parsedError.code] || parsedError.message;\r\n};\r\n\r\n// Global error handler\r\nexport const handleError = (error: unknown, context: string): void => {\r\n  const parsedError = parseError(error);\r\n  \r\n  // Log to console in development\r\n  if (process.env.NODE_ENV === 'development') {\r\n    console.error(`[${context}] Application Error:`, parsedError);\r\n  }\r\n  \r\n  // You can add your own error logging service here\r\n  // For example, send to your backend logging endpoint\r\n  if (window.logger) {\r\n    window.logger.error('Application error', { error: parsedError, context });\r\n  }\r\n};\r\n\r\n// Setup global error handlers\r\nexport const setupGlobalErrorHandlers = (): void => {\r\n  window.addEventListener('unhandledrejection', (event) => {\r\n    handleError(event.reason, 'Unhandled Promise Rejection');\r\n    event.preventDefault();\r\n  });\r\n  \r\n  window.addEventListener('error', (event) => {\r\n    handleError(event.error, 'Global Error');\r\n    event.preventDefault();\r\n  });\r\n};","import React, { Component, ErrorInfo, ReactNode } from 'react';\r\nimport { handleError } from '../utils/errors';\r\n\r\ninterface Props {\r\n  children?: ReactNode;\r\n  fallback?: (error: Error, reset: () => void) => ReactNode;\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean;\r\n  error: Error | null;\r\n}\r\n\r\nexport class ErrorBoundary extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = { hasError: false, error: null };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error): Partial<State> {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    console.error('Error caught by ErrorBoundary:', error, errorInfo);\r\n    handleError(error, 'React Error Boundary');\r\n  }\r\n\r\n  resetError = () => {\r\n    this.setState({ hasError: false, error: null });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.hasError && this.state.error) {\r\n      if (this.props.fallback) {\r\n        return this.props.fallback(this.state.error, this.resetError);\r\n      }\r\n\r\n      return (\r\n        <div className=\"min-h-screen flex items-center justify-center\">\r\n          <div className=\"card max-w-md\">\r\n            <div className=\"card-body text-center\">\r\n              <div className=\"text-6xl mb-4\">⚠️</div>\r\n              <h2 className=\"text-2xl font-bold mb-4\">Something went wrong</h2>\r\n              <p className=\"text-muted mb-6\">\r\n                We're sorry for the inconvenience. Please try refreshing the page.\r\n              </p>\r\n              <button onClick={this.resetError} className=\"btn\" data-variant=\"primary\">\r\n                Try again\r\n              </button>\r\n              {process.env.NODE_ENV === 'development' && (\r\n                <details className=\"mt-4 text-left\">\r\n                  <summary className=\"cursor-pointer text-sm text-muted\">Error details</summary>\r\n                  <pre className=\"mt-2 text-xs overflow-auto p-2 bg-gray-100 rounded\">\r\n                    {this.state.error.stack}\r\n                  </pre>\r\n                </details>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport const withErrorBoundary = <P extends object>(\r\n  Component: React.ComponentType<P>,\r\n  fallback?: (error: Error, reset: () => void) => ReactNode\r\n): React.ComponentType<P> => {\r\n  const WrappedComponent = (props: P) => (\r\n    <ErrorBoundary fallback={fallback}>\r\n      <Component {...props} />\r\n    </ErrorBoundary>\r\n  );\r\n\r\n  WrappedComponent.displayName = `withErrorBoundary(${Component.displayName || Component.name || 'Component'})`;\r\n  return WrappedComponent;\r\n};\r\n\r\nexport default ErrorBoundary;","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\nexport const SUPPORTED_LANGUAGES = {\r\n  en: { name: 'English', dir: 'ltr' },\r\n  es: { name: 'Español', dir: 'ltr' },\r\n  fr: { name: 'Français', dir: 'ltr' },\r\n  de: { name: 'Deutsch', dir: 'ltr' },\r\n  ar: { name: 'العربية', dir: 'rtl' },\r\n  he: { name: 'עברית', dir: 'rtl' },\r\n};\r\n\r\n// Custom backend that uses native fetch\r\nconst customBackend = {\r\n  type: 'backend' as const,\r\n  init: function() {},\r\n  read: function(language: string, namespace: string, callback: Function) {\r\n    const loadPath = `/locales/${language}/${namespace}.json`;\r\n    \r\n    fetch(loadPath)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to load ${loadPath}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        callback(null, data);\r\n      })\r\n      .catch(error => {\r\n        callback(error, null);\r\n      });\r\n  }\r\n};\r\n\r\nvoid i18n\r\n  .use(customBackend as any)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    fallbackLng: 'en',\r\n    debug: process.env.NODE_ENV === 'development',\r\n    \r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n    \r\n    detection: {\r\n      order: ['cookie', 'localStorage', 'navigator', 'htmlTag'],\r\n      caches: ['cookie', 'localStorage'],\r\n    },\r\n    \r\n    react: {\r\n      useSuspense: false,\r\n    },\r\n  });\r\n\r\nexport default i18n;","import React from 'react';\r\n\r\nimport { SUPPORTED_LANGUAGES } from '../i18n/config';\r\nimport { useTranslation } from '../i18n';\r\n\r\nexport const LanguageSelector: React.FC = () => {\r\n  const { i18n } = useTranslation();\r\n  \r\n  const handleChange = async (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const lang = e.target.value;\r\n    await i18n.changeLanguage(lang);\r\n    \r\n    // Update HTML dir attribute\r\n    document.documentElement.dir = SUPPORTED_LANGUAGES[lang as keyof typeof SUPPORTED_LANGUAGES].dir;\r\n    \r\n    // Update lang attribute\r\n    document.documentElement.lang = lang;\r\n    \r\n    // Update backend language preference\r\n    const accessToken = localStorage.getItem('access_token');\r\n    if (accessToken) {\r\n      void fetch('/api/auth/language/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${accessToken}`,\r\n        },\r\n        body: JSON.stringify({ language: lang }),\r\n      });\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"language-selector\">\r\n      <label htmlFor=\"language-select\" className=\"sr-only\">\r\n        Choose language\r\n      </label>\r\n      <select \r\n        id=\"language-select\"\r\n        value={i18n.language} \r\n        onChange={handleChange}\r\n        className=\"form-select\"\r\n        aria-label=\"Select language\"\r\n      >\r\n        {(Object.entries(SUPPORTED_LANGUAGES) as [string, { name: string; dir: string }][]).map(([code, { name }]) => (\r\n          <option key={code} value={code}>{name}</option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};","import React from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../hooks/useStore';\r\nimport { LanguageSelector } from './LanguageSelector';\r\n\r\nexport const Layout: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const { user, logout } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleUserClick = () => {\r\n    if (user?.user_type === 'company') {\r\n      navigate('/dashboard');\r\n    } else if (user?.user_type === 'admin') {\r\n      navigate('/admin');\r\n    } else {\r\n      navigate('/profile');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n    navigate('/');\r\n  };\r\n\r\n  const handleKeyPress = (event: React.KeyboardEvent) => {\r\n    if (event.key === 'Enter' || event.key === ' ') {\r\n      event.preventDefault();\r\n      handleUserClick();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <a href=\"#main\" className=\"skip-link\">\r\n        Skip to main content\r\n      </a>\r\n      \r\n      <header className=\"header\" role=\"banner\">\r\n        <div className=\"header-container container\">\r\n          <Link to=\"/\" className=\"text-xl font-bold text-primary\" aria-label=\"TrialsFinder Home\">\r\n            TrialsFinder\r\n          </Link>\r\n          \r\n          <nav className=\"header-nav\" role=\"navigation\" aria-label=\"Main navigation\">\r\n            <LanguageSelector />\r\n            \r\n            {user ? (\r\n              <div className=\"flex items-center gap-4\">\r\n                <button\r\n                  onClick={handleUserClick}\r\n                  onKeyPress={handleKeyPress}\r\n                  className=\"cursor-pointer text-primary font-medium transition-colors hover:text-primary-dark focus:outline-2 focus:outline-primary focus:outline-offset-2 px-2 py-1 rounded\"\r\n                  aria-label={`User menu for ${user.email}`}\r\n                >\r\n                  {user.email}\r\n                </button>\r\n                <Link to=\"/privacy-dashboard\" className=\"header-nav-item\" aria-label=\"Privacy Settings\">\r\n                  Privacy Settings\r\n                </Link>\r\n                <button\r\n                  onClick={handleLogout}\r\n                  className=\"btn\"\r\n                  data-variant=\"ghost\"\r\n                  data-size=\"sm\"\r\n                  aria-label=\"Sign out of your account\"\r\n                >\r\n                  Sign Out\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"flex items-center gap-4\">\r\n                <Link to=\"/login\" className=\"header-nav-item\" aria-label=\"Login to your account\">\r\n                  Login\r\n                </Link>\r\n                <Link to=\"/register\" className=\"btn\" data-variant=\"primary\" data-size=\"sm\" aria-label=\"Create a new account\">\r\n                  Register\r\n                </Link>\r\n              </div>\r\n            )}\r\n          </nav>\r\n        </div>\r\n      </header>\r\n      \r\n      <main id=\"main\" className=\"main-content\" role=\"main\">\r\n        <div className=\"container\">{children}</div>\r\n      </main>\r\n      \r\n      <footer className=\"footer\" role=\"contentinfo\">\r\n        <div className=\"container\">\r\n          <div className=\"footer-content\">\r\n            <div className=\"footer-section\">\r\n              <h2 id=\"footer-resources\">Resources</h2>\r\n              <nav aria-labelledby=\"footer-resources\">\r\n                <ul className=\"footer-links\" role=\"list\">\r\n                  <li>\r\n                    <Link to=\"/faq\" className=\"footer-link\">\r\n                      FAQ\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to=\"/contact\" className=\"footer-link\">\r\n                      Contact\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to=\"/about\" className=\"footer-link\">\r\n                      About\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </nav>\r\n            </div>\r\n            \r\n            <div className=\"footer-section\">\r\n              <h2 id=\"footer-legal\">Legal</h2>\r\n              <nav aria-labelledby=\"footer-legal\">\r\n                <ul className=\"footer-links\" role=\"list\">\r\n                  <li>\r\n                    <Link to=\"/terms\" className=\"footer-link\">\r\n                      Terms\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to=\"/privacy\" className=\"footer-link\">\r\n                      Privacy\r\n                    </Link>\r\n                  </li>\r\n                </ul>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"footer-bottom\">\r\n            <p className=\"text-muted text-sm\">© 2024 TrialsFinder. All rights reserved.</p>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;","import React, { Suspense, lazy } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { ErrorBoundary } from './components/ErrorBoundary';\r\nimport { Layout } from './components/Layout';\r\nimport { AppProvider } from './context/AppContext';\r\n\r\n// Preload critical page\r\nconst HomePage = lazy(() => import('./pages/HomePage'));\r\n\r\n// Prefetch likely next pages\r\nconst LoginPage = lazy(() => import('./pages/LoginPage'));\r\nconst SearchResultsPage = lazy(() => import('./pages/SearchResultsPage'));\r\n\r\n// Lazy load all other pages with proper chunking\r\nconst RegisterPage = lazy(() => import('./pages/RegisterPage'));\r\nconst TrialDetailsPage = lazy(() => import('./pages/TrialDetailsPage'));\r\nconst UserProfilePage = lazy(() => import('./pages/UserProfilePage'));\r\nconst CompanyDashboardPage = lazy(() => import('./pages/CompanyDashboardPage'));\r\nconst PrivateRoute = lazy(() => import('./components/PrivateRoute').then(m => ({ default: m.PrivateRoute })));\r\n\r\n// Group less-used pages together to reduce chunks\r\nconst CreateTrialPage = lazy(() => import('./pages/CreateTrialPage'));\r\nconst AnalyticsPage = lazy(() => import('./pages/AnalyticsPage'));\r\nconst SubscriptionPage = lazy(() => import('./pages/SubscriptionPage'));\r\n\r\n// Group static pages\r\nconst AboutPage = lazy(() => import('./pages/AboutPage'));\r\nconst ContactPage = lazy(() => import('./pages/ContactPage'));\r\nconst FAQPage = lazy(() => import('./pages/FAQPage'));\r\nconst TermsPage = lazy(() => import('./pages/TermsPage'));\r\nconst PrivacyPage = lazy(() => import('./pages/PrivacyPage'));\r\nconst PrivacyDashboard = lazy(() => import('./pages/PrivacyDashboard'));\r\n\r\n// Minimal loading component\r\nconst PageLoading = () => (\r\n  <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', minHeight: '400px' }}>\r\n    <div className=\"spinner\"></div>\r\n  </div>\r\n);\r\n\r\nfunction App() {\r\n  return (\r\n    <ErrorBoundary>\r\n      <AppProvider>\r\n        <Router>\r\n          <Layout>\r\n            <Suspense fallback={<PageLoading />}>\r\n              <Routes>\r\n                <Route path=\"/\" element={<HomePage />} />\r\n                <Route path=\"/login\" element={<LoginPage />} />\r\n                <Route path=\"/register\" element={<RegisterPage />} />\r\n                <Route path=\"/trials/:id\" element={<TrialDetailsPage />} />\r\n                <Route path=\"/search\" element={<SearchResultsPage />} />\r\n                \r\n                <Route path=\"/profile\" element={\r\n                  <Suspense fallback={<PageLoading />}>\r\n                    <PrivateRoute userType=\"user\">\r\n                      <UserProfilePage />\r\n                    </PrivateRoute>\r\n                  </Suspense>\r\n                } />\r\n                \r\n                <Route path=\"/dashboard\" element={\r\n                  <Suspense fallback={<PageLoading />}>\r\n                    <PrivateRoute userType=\"company\">\r\n                      <CompanyDashboardPage />\r\n                    </PrivateRoute>\r\n                  </Suspense>\r\n                } />\r\n                \r\n                <Route path=\"/create-trial\" element={\r\n                  <Suspense fallback={<PageLoading />}>\r\n                    <PrivateRoute userType=\"company\">\r\n                      <CreateTrialPage />\r\n                    </PrivateRoute>\r\n                  </Suspense>\r\n                } />\r\n                \r\n                <Route path=\"/analytics\" element={\r\n                  <Suspense fallback={<PageLoading />}>\r\n                    <PrivateRoute userType=\"company\">\r\n                      <AnalyticsPage />\r\n                    </PrivateRoute>\r\n                  </Suspense>\r\n                } />\r\n                \r\n                <Route path=\"/subscription\" element={<SubscriptionPage />} />\r\n                <Route path=\"/about\" element={<AboutPage />} />\r\n                <Route path=\"/contact\" element={<ContactPage />} />\r\n                <Route path=\"/faq\" element={<FAQPage />} />\r\n                <Route path=\"/terms\" element={<TermsPage />} />\r\n                <Route path=\"/privacy\" element={<PrivacyPage />} />\r\n                \r\n                <Route path=\"/privacy-dashboard\" element={\r\n                  <Suspense fallback={<PageLoading />}>\r\n                    <PrivateRoute>\r\n                      <PrivacyDashboard />\r\n                    </PrivateRoute>\r\n                  </Suspense>\r\n                } />\r\n              </Routes>\r\n            </Suspense>\r\n          </Layout>\r\n        </Router>\r\n      </AppProvider>\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n\r\nexport default App;","import { default as api } from '../utils/api';\r\n\r\ninterface RegisterData {\r\n  email: string;\r\n  password: string;\r\n  confirm_password?: string;\r\n  user_type: 'user' | 'company';\r\n  company_name?: string;\r\n}\r\n\r\ninterface LoginData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\ninterface ResetPasswordData {\r\n  token: string;\r\n  password: string;\r\n}\r\n\r\nexport const authAPI = {\r\n  register: (data: RegisterData) => api.post('/auth/register', data),\r\n  login: (data: LoginData) => api.post('/auth/login', data),\r\n  verifyEmail: (token: string) => api.post('/auth/verify-email', { token }),\r\n  forgotPassword: (email: string) => api.post('/auth/forgot-password', { email }),\r\n  resetPassword: (data: ResetPasswordData) => api.post('/auth/reset-password', data),\r\n  getMe: () => api.get('/auth/me'),\r\n};","import { StateCreator } from 'zustand';\nimport { User } from '../../types';\nimport { authAPI } from '../../api/auth';\nimport { AppState } from '../index';\n\nexport interface AuthState {\n  user: User | null;\n  loading: boolean;\n  error: string | null;\n  mockMode: boolean;\n  setUser: (user: User | null) => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n  setMockMode: (mockMode: boolean) => void;\n  login: (email: string, password: string) => Promise<void>;\n  register: (data: any) => Promise<void>;\n  logout: () => void;\n  loadUser: () => Promise<void>;\n}\n\nexport const createAuthSlice: StateCreator<AppState, [], [], AuthState> = (set) => ({\n  user: null,\n  loading: true,\n  error: null,\n  mockMode: false,\n  \n  setUser: (user) => set({ user }),\n  setLoading: (loading) => set({ loading }),\n  setError: (error) => set({ error }),\n  setMockMode: (mockMode) => set({ mockMode }),\n  \n  login: async (email, password) => {\n    set({ loading: true, error: null });\n    try {\n      const response = await authAPI.login({ email, password });\n      const { tokens, user } = response.data;\n      \n      localStorage.setItem('access_token', tokens.access);\n      localStorage.setItem('refresh_token', tokens.refresh);\n      set({ user, loading: false, mockMode: false });\n    } catch (error: any) {\n      // In development, allow mock login\n      if (process.env.NODE_ENV === 'development' && error.code === 'ERR_NETWORK') {\n        console.warn('Backend not available, using mock login');\n        const mockUser: User = {\n          id: 1,\n          username: email.split('@')[0],\n          email: email,\n          user_type: 'user',\n          email_verified: true,\n        };\n        set({ user: mockUser, loading: false, mockMode: true });\n        localStorage.setItem('mock_user', JSON.stringify(mockUser));\n      } else {\n        set({ error: error.message || 'Login failed', loading: false });\n        throw error;\n      }\n    }\n  },\n  \n  register: async (data) => {\n    set({ loading: true, error: null });\n    try {\n      const response = await authAPI.register(data);\n      const { tokens, user } = response.data;\n      \n      localStorage.setItem('access_token', tokens.access);\n      localStorage.setItem('refresh_token', tokens.refresh);\n      if (response.data.verification_token) {\n        localStorage.setItem('verification_token', response.data.verification_token);\n      }\n      set({ user, loading: false, mockMode: false });\n    } catch (error: any) {\n      // In development, allow mock registration\n      if (process.env.NODE_ENV === 'development' && error.code === 'ERR_NETWORK') {\n        console.warn('Backend not available, using mock registration');\n        const mockUser: User = {\n          id: Date.now(),\n          username: data.email.split('@')[0],\n          email: data.email,\n          user_type: data.user_type,\n          email_verified: false,\n        };\n        set({ user: mockUser, loading: false, mockMode: true });\n        localStorage.setItem('mock_user', JSON.stringify(mockUser));\n      } else {\n        set({ error: error.message || 'Registration failed', loading: false });\n        throw error;\n      }\n    }\n  },\n  \n  logout: () => {\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    localStorage.removeItem('verification_token');\n    localStorage.removeItem('mock_user');\n    set({ user: null, loading: false, error: null, mockMode: false });\n  },\n  \n  loadUser: async () => {\n    const token = localStorage.getItem('access_token');\n    const mockUser = localStorage.getItem('mock_user');\n    \n    // Check for mock user first (development only)\n    if (process.env.NODE_ENV === 'development' && mockUser && !token) {\n      try {\n        const user = JSON.parse(mockUser);\n        set({ user, loading: false, mockMode: true });\n        return;\n      } catch (e) {\n        localStorage.removeItem('mock_user');\n      }\n    }\n    \n    if (!token) {\n      set({ user: null, loading: false });\n      return;\n    }\n    \n    set({ loading: true });\n    try {\n      const response = await authAPI.getMe();\n      const user = response.data;\n      set({ user, loading: false, mockMode: false });\n    } catch (error: any) {\n      // In development, check if we have a mock user\n      if (process.env.NODE_ENV === 'development' && error.code === 'ERR_NETWORK' && mockUser) {\n        try {\n          const user = JSON.parse(mockUser);\n          set({ user, loading: false, mockMode: true });\n          return;\n        } catch (e) {\n          // Invalid mock user\n        }\n      }\n      \n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      localStorage.removeItem('mock_user');\n      set({ user: null, loading: false });\n    }\n  },\n});","import { StateCreator } from 'zustand';\nimport { Notification } from '../../types';\nimport { notificationsAPI } from '../../api/notifications';\nimport { AppState } from '../index';\n\nexport interface NotificationState {\n  notifications: Notification[];\n  unreadCount: number;\n  fetchNotifications: () => Promise<void>;\n  markAsRead: (id: number) => Promise<void>;\n}\n\nexport const createNotificationSlice: StateCreator<AppState, [], [], NotificationState> = (set, get) => ({\n  notifications: [],\n  unreadCount: 0,\n\n  fetchNotifications: async () => {\n    try {\n      const response = await notificationsAPI.list();\n      const notifications = response.data;\n      const unreadCount = notifications.filter((n: Notification) => !n.is_read).length;\n      set({ notifications, unreadCount });\n    } catch (error) {\n      console.error('Failed to fetch notifications:', error);\n    }\n  },\n\n  markAsRead: async (id) => {\n    // Optimistic update\n    const currentNotifications = get().notifications;\n    const currentUnreadCount = get().unreadCount;\n    \n    const updatedNotifications = currentNotifications.map(n => \n      n.id === id ? { ...n, is_read: true } : n\n    );\n    const updatedUnreadCount = Math.max(0, currentUnreadCount - 1);\n    \n    set({ \n      notifications: updatedNotifications,\n      unreadCount: updatedUnreadCount\n    });\n\n    try {\n      await notificationsAPI.markRead(id);\n    } catch (error) {\n      // Revert on error\n      set({ \n        notifications: currentNotifications,\n        unreadCount: currentUnreadCount\n      });\n      throw error;\n    }\n  },\n});","import { StateCreator } from 'zustand';\nimport { Trial, Industry } from '../../types';\nimport { trialsAPI } from '../../api/trials';\nimport { AppState } from '../index';\n\nexport interface TrialsState {\n  trials: Trial[];\n  favoriteTrials: number[];\n  selectedIndustries: number[];\n  industries: Industry[];\n  loadingTrials: boolean;\n  toggleFavorite: (trialId: number) => Promise<void>;\n  loadFavorites: () => Promise<void>;\n  updateIndustries: (industries: number[]) => Promise<void>;\n  fetchTrials: (params?: any) => Promise<void>;\n  fetchIndustries: () => Promise<void>;\n}\n\nexport const createTrialsSlice: StateCreator<AppState, [], [], TrialsState> = (set, get) => ({\n  trials: [],\n  favoriteTrials: [],\n  selectedIndustries: [],\n  industries: [],\n  loadingTrials: false,\n\n  toggleFavorite: async (trialId) => {\n    const { favoriteTrials, trials } = get();\n    const isFavorited = favoriteTrials.includes(trialId);\n    \n    // Optimistic update\n    const updatedFavorites = isFavorited \n      ? favoriteTrials.filter(id => id !== trialId)\n      : [...favoriteTrials, trialId];\n      \n    const updatedTrials = trials.map(t => \n      t.id === trialId ? { ...t, is_favorited: !isFavorited } : t\n    );\n    \n    set({\n      favoriteTrials: updatedFavorites,\n      trials: updatedTrials\n    });\n\n    try {\n      await trialsAPI.toggleFavorite(trialId);\n    } catch (error) {\n      // Revert on error\n      set({\n        favoriteTrials: favoriteTrials,\n        trials: trials\n      });\n      throw error;\n    }\n  },\n\n  loadFavorites: async () => {\n    try {\n      const response = await trialsAPI.getFavorites();\n      const favoriteIds = response.data.map((fav: any) => fav.trial.id);\n      set({ favoriteTrials: favoriteIds });\n    } catch (error) {\n      // Only log in non-test environments\n      if (process.env.NODE_ENV !== 'test') {\n        console.error('Failed to load favorites:', error);\n      }\n    }\n  },\n\n  updateIndustries: async (industries) => {\n    set({ selectedIndustries: industries });\n    try {\n      await trialsAPI.followIndustries(industries);\n    } catch (error) {\n      throw error;\n    }\n  },\n\n  fetchTrials: async (params) => {\n    set({ loadingTrials: true });\n    try {\n      const response = await trialsAPI.list(params);\n      // Handle paginated response\n      const trialsData = response.data.results || response.data;\n      // Ensure we always have an array\n      const trials = Array.isArray(trialsData) ? trialsData : [];\n      set({ trials, loadingTrials: false });\n    } catch (error) {\n      set({ trials: [], loadingTrials: false });\n      // Only log in non-test environments\n      if (process.env.NODE_ENV !== 'test') {\n        console.error('Failed to fetch trials:', error);\n      }\n    }\n  },\n\n  fetchIndustries: async () => {\n    try {\n      const response = await trialsAPI.getIndustries();\n      set({ industries: response.data });\n    } catch (error) {\n      // Only log in non-test environments\n      if (process.env.NODE_ENV !== 'test') {\n        console.error('Failed to load industries:', error);\n      }\n    }\n  },\n});","import { StateCreator } from 'zustand';\nimport { AppState } from '../index';\n\nexport interface UIState {\n  sidebarOpen: boolean;\n  theme: 'light' | 'dark';\n  loadingStates: Record<string, boolean>;\n  toggleSidebar: () => void;\n  setTheme: (theme: 'light' | 'dark') => void;\n  setLoadingState: (key: string, loading: boolean) => void;\n  clearLoadingStates: () => void;\n}\n\nexport const createUISlice: StateCreator<AppState, [], [], UIState> = (set) => ({\n  sidebarOpen: false,\n  theme: 'light',\n  loadingStates: {},\n\n  toggleSidebar: () => set((state) => ({ sidebarOpen: !state.sidebarOpen })),\n  \n  setTheme: (theme) => set({ theme }),\n  \n  setLoadingState: (key, loading) => {\n    set((state) => ({\n      loadingStates: {\n        ...state.loadingStates,\n        [key]: loading\n      }\n    }));\n  },\n  \n  clearLoadingStates: () => set({ loadingStates: {} }),\n});","import { create } from 'zustand';\nimport { devtools, persist, subscribeWithSelector } from 'zustand/middleware';\nimport { immer } from 'zustand/middleware/immer';\n\nimport { AuthState, createAuthSlice } from './slices/authSlice';\nimport { NotificationState, createNotificationSlice } from './slices/notificationSlice';\nimport { TrialsState, createTrialsSlice } from './slices/trialsSlice';\nimport { UIState, createUISlice } from './slices/uiSlice';\n\nexport interface AppState extends AuthState, TrialsState, UIState, NotificationState {\n  clearLoadingStates: () => void;\n}\n\nexport const useStore = create<AppState>()(\n  devtools(\n    persist(\n      subscribeWithSelector(\n        immer((set, get, api) => ({\n          ...createAuthSlice(set, get, api),\n          ...createTrialsSlice(set, get, api),\n          ...createUISlice(set, get, api),\n          ...createNotificationSlice(set, get, api),\n          clearLoadingStates: () => set((state) => {\n            state.loadingStates = {};\n          }),\n        }))\n      ),\n      {\n        name: 'trialssfinder-store',\n        partialize: (state) => ({\n          user: state.user,\n          favoriteTrials: state.favoriteTrials,\n          selectedIndustries: state.selectedIndustries,\n        }),\n      }\n    ),\n    { name: 'TrialsFinder' }\n  )\n);","import { useStore as useZustandStore } from '../store';\n\n// Selectors with manual shallow comparison\nexport const useAuth = () => {\n  const user = useZustandStore((state) => state.user);\n  const loading = useZustandStore((state) => state.loading);\n  const mockMode = useZustandStore((state) => state.mockMode);\n  const login = useZustandStore((state) => state.login);\n  const register = useZustandStore((state) => state.register);\n  const logout = useZustandStore((state) => state.logout);\n  const loadUser = useZustandStore((state) => state.loadUser);\n  \n  return { user, loading, mockMode, login, register, logout, loadUser };\n};\n\nexport const useTrials = () => {\n  const trials = useZustandStore((state) => state.trials);\n  const favoriteTrials = useZustandStore((state) => state.favoriteTrials);\n  const loadingTrials = useZustandStore((state) => state.loadingTrials);\n  const toggleFavorite = useZustandStore((state) => state.toggleFavorite);\n  const fetchTrials = useZustandStore((state) => state.fetchTrials);\n  \n  return { trials, favoriteTrials, loadingTrials, toggleFavorite, fetchTrials };\n};\n\nexport const useNotifications = () => {\n  const notifications = useZustandStore((state) => state.notifications);\n  const unreadCount = useZustandStore((state) => state.unreadCount);\n  const fetchNotifications = useZustandStore((state) => state.fetchNotifications);\n  const markAsRead = useZustandStore((state) => state.markAsRead);\n  \n  return { notifications, unreadCount, fetchNotifications, markAsRead };\n};\n\nexport const useUI = () => {\n  const sidebarOpen = useZustandStore((state) => state.sidebarOpen);\n  const theme = useZustandStore((state) => state.theme);\n  const loadingStates = useZustandStore((state) => state.loadingStates);\n  const toggleSidebar = useZustandStore((state) => state.toggleSidebar);\n  const setTheme = useZustandStore((state) => state.setTheme);\n  const setLoadingState = useZustandStore((state) => state.setLoadingState);\n  \n  return { sidebarOpen, theme, loadingStates, toggleSidebar, setTheme, setLoading: setLoadingState };\n};"],"names":["trialsAPI","list","params","api","get","id","create","data","post","companyTrials","toggleFavorite","getFavorites","getIndustries","followIndustries","industries","getUserIndustries","approveTrial","toggleFeatured","adminList","locales","en","enUS","es","fr","de","ar","he","useTranslation","t","i18n","useI18nTranslation","formatDate","date","formatStr","arguments","length","undefined","locale","language","format","Date","formatCurrency","amount","currency","Intl","NumberFormat","style","formatNumber","num","isRTL","includes","notificationsAPI","markRead","contact","apiCache","constructor","options","this","cache","Map","pendingRequests","maxSize","max","defaultTTL","ttl","generateKey","url","JSON","stringify","Object","keys","sort","isExpired","item","now","expiry","evictOldest","size","firstKey","next","value","delete","key","set","getOrFetch","fetcher","cached","pending","request","then","catch","error","invalidate","pattern","clear","Array","from","invalidateUser","userId","invalidateTrial","trialId","API_BASE_URL","axios","baseURL","headers","common","withCredentials","timeout","axiosInstance","interceptors","console","use","config","method","cacheKey","adapter","Promise","resolve","status","statusText","response","cacheTTL","setupCacheInterceptor","token","localStorage","getItem","Authorization","csrfToken","name","cookieValue","document","cookie","cookies","split","i","trim","substring","decodeURIComponent","getCookie","async","originalRequest","process","reject","_retry","refreshToken","Error","refresh","setItem","access","defaults","refreshError","window","location","href","appReducer","state","action","type","user","payload","trials","map","trial","notifications","notif","is_read","loading","errors","fromEntries","entries","filter","_ref","TrialsFinderError","message","code","details","super","handleError","context","parsedError","isAxiosError","axiosError","apiError","parseError","logger","ErrorBoundary","Component","props","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","resetError","setState","render","fallback","_jsx","className","children","_jsxs","onClick","SUPPORTED_LANGUAGES","dir","customBackend","init","read","namespace","callback","loadPath","fetch","ok","json","LanguageDetector","initReactI18next","fallbackLng","debug","interpolation","escapeValue","detection","order","caches","react","useSuspense","LanguageSelector","htmlFor","onChange","lang","e","target","changeLanguage","documentElement","accessToken","body","Layout","logout","useAuth","navigate","useNavigate","handleUserClick","user_type","role","Link","to","onKeyPress","event","preventDefault","email","handleLogout","initialState","AppContext","createContext","AppProvider","_ref2","dispatch","useReducer","Provider","HomePage","lazy","LoginPage","SearchResultsPage","RegisterPage","TrialDetailsPage","UserProfilePage","CompanyDashboardPage","PrivateRoute","m","default","CreateTrialPage","AnalyticsPage","SubscriptionPage","AboutPage","ContactPage","FAQPage","TermsPage","PrivacyPage","PrivacyDashboard","PageLoading","display","justifyContent","alignItems","minHeight","Router","Suspense","Routes","Route","path","element","userType","createAuthSlice","mockMode","setUser","setLoading","setError","setMockMode","login","password","tokens","register","authAPI","verification_token","removeItem","loadUser","createNotificationSlice","unreadCount","fetchNotifications","n","markAsRead","currentNotifications","currentUnreadCount","updatedNotifications","updatedUnreadCount","Math","createTrialsSlice","favoriteTrials","selectedIndustries","loadingTrials","isFavorited","updatedFavorites","updatedTrials","is_favorited","loadFavorites","favoriteIds","fav","updateIndustries","fetchTrials","trialsData","results","isArray","fetchIndustries","createUISlice","sidebarOpen","theme","loadingStates","toggleSidebar","setTheme","setLoadingState","clearLoadingStates","useStore","devtools","persist","subscribeWithSelector","immer","partialize","useZustandStore","useTrials"],"sourceRoot":""}