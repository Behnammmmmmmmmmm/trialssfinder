{"version":3,"file":"static/js/289.c96a3e4b.chunk.js","mappings":"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","sources":["webpack://trialsfinder/./src/pages/HomePage.tsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useMemo, lazy, Suspense } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { useTrials, useAuth } from '../hooks/useStore';\r\nimport { LoadingState } from '../components/LoadingState';\r\n\r\n// Lazy load heavy components\r\nconst TrialCard = lazy(() => import('../components/TrialCard'));\r\n\r\n// Debounce without lodash\r\nconst debounce = (func: Function, delay: number) => {\r\n  let timeoutId: NodeJS.Timeout;\r\n  return (...args: any[]) => {\r\n    clearTimeout(timeoutId);\r\n    timeoutId = setTimeout(() => func(...args), delay);\r\n  };\r\n};\r\n\r\n// Simple card skeleton\r\nconst CardSkeleton = () => (\r\n  <div className=\"card\" style={{ minHeight: '320px' }}>\r\n    <div className=\"card-body\">\r\n      <div className=\"skeleton h-6 w-3/4 mb-3\"></div>\r\n      <div className=\"skeleton h-4 w-full mb-2\"></div>\r\n      <div className=\"skeleton h-4 w-5/6 mb-4\"></div>\r\n      <div className=\"skeleton h-10 w-full\"></div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n// Hero section as separate component\r\nconst HeroSection = React.memo(() => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const debouncedSearch = useMemo(\r\n    () =>\r\n      debounce((query: string) => {\r\n        if (query.length > 2) {\r\n          navigate(`/search?q=${encodeURIComponent(query)}`);\r\n        }\r\n      }, 500),\r\n    [navigate]\r\n  );\r\n\r\n  const handleSearchChange = useCallback(\r\n    (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      const value = e.target.value;\r\n      setSearchQuery(value);\r\n      debouncedSearch(value);\r\n    },\r\n    [debouncedSearch]\r\n  );\r\n\r\n  return (\r\n    <div className=\"text-center mb-12\">\r\n      <h1 className=\"text-5xl font-bold mb-6 text-primary\">Find Your Perfect Trial</h1>\r\n      <p className=\"text-xl text-muted mb-8\">\r\n        Discover free trials for the tools and services your business needs\r\n      </p>\r\n      <div className=\"max-w-full mx-auto mb-8\" style={{ maxWidth: '600px' }}>\r\n        <div className=\"relative\">\r\n          <label htmlFor=\"search-trials\" className=\"sr-only\">\r\n            Search trials\r\n          </label>\r\n          <input\r\n            id=\"search-trials\"\r\n            type=\"search\"\r\n            value={searchQuery}\r\n            onChange={handleSearchChange}\r\n            placeholder=\"Search trials...\"\r\n            className=\"form-control form-control-lg px-6\"\r\n            style={{ paddingLeft: '3rem' }}\r\n            aria-label=\"Search for clinical trials\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <span className=\"search-icon\" aria-hidden=\"true\">\r\n            üîç\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <Link to=\"/search\" className=\"btn\" data-variant=\"outline\" data-size=\"lg\">\r\n        Browse All Trials\r\n      </Link>\r\n    </div>\r\n  );\r\n});\r\n\r\nHeroSection.displayName = 'HeroSection';\r\n\r\nconst HomePage: React.FC = () => {\r\n  const { trials, fetchTrials, loadingTrials } = useTrials();\r\n  const { mockMode } = useAuth();\r\n  const [visibleTrials, setVisibleTrials] = useState(6);\r\n  const [initialLoad, setInitialLoad] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Fetch only what's needed initially\r\n    const loadInitialData = async () => {\r\n      if (!mockMode) {\r\n        // Only fetch if not in mock mode\r\n        await fetchTrials({ page_size: 12 });\r\n      }\r\n      setInitialLoad(false);\r\n    };\r\n    loadInitialData();\r\n  }, [fetchTrials, mockMode]);\r\n\r\n  const trialsArray = useMemo(() => (Array.isArray(trials) ? trials : []), [trials]);\r\n\r\n  const { featuredTrials, latestTrials } = useMemo(() => {\r\n    const featured: any[] = [];\r\n    const latest: any[] = [];\r\n\r\n    trialsArray.forEach((trial) => {\r\n      if (trial.is_featured) {\r\n        featured.push(trial);\r\n      } else {\r\n        latest.push(trial);\r\n      }\r\n    });\r\n\r\n    return {\r\n      featuredTrials: featured.slice(0, visibleTrials),\r\n      latestTrials: latest.slice(0, visibleTrials),\r\n    };\r\n  }, [trialsArray, visibleTrials]);\r\n\r\n  // Load more trials on scroll\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      if (window.innerHeight + window.scrollY >= document.body.offsetHeight - 1000) {\r\n        setVisibleTrials((prev) => Math.min(prev + 6, trialsArray.length));\r\n      }\r\n    };\r\n\r\n    window.addEventListener('scroll', handleScroll, { passive: true });\r\n    return () => window.removeEventListener('scroll', handleScroll);\r\n  }, [trialsArray.length]);\r\n\r\n  if (loadingTrials && initialLoad) {\r\n    return <LoadingState fullScreen message=\"Loading trials...\" />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container py-8\">\r\n      <HeroSection />\r\n\r\n      {mockMode && (\r\n        <div className=\"alert mb-4\" data-variant=\"warning\">\r\n          <p className=\"font-semibold\">Development Mode</p>\r\n          <p className=\"text-sm\">Backend is not available. Using mock data.</p>\r\n        </div>\r\n      )}\r\n\r\n      {featuredTrials.length > 0 && (\r\n        <section className=\"mb-12\">\r\n          <h2 className=\"text-3xl font-semibold mb-6\">Featured Free Trials</h2>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {featuredTrials.map((trial, index) => (\r\n              <Suspense key={trial.id} fallback={<CardSkeleton />}>\r\n                <TrialCard trial={trial} featured={true} priority={index < 3} />\r\n              </Suspense>\r\n            ))}\r\n          </div>\r\n        </section>\r\n      )}\r\n\r\n      {latestTrials.length > 0 && (\r\n        <section className=\"mb-12\">\r\n          <h2 className=\"text-3xl font-semibold mb-6\">Latest Free Trials</h2>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {latestTrials.map((trial) => (\r\n              <Suspense key={trial.id} fallback={<CardSkeleton />}>\r\n                <TrialCard trial={trial} featured={false} priority={false} />\r\n              </Suspense>\r\n            ))}\r\n          </div>\r\n        </section>\r\n      )}\r\n\r\n      {trialsArray.length === 0 && !loadingTrials && (\r\n        <div className=\"text-center py-12\">\r\n          <div className=\"text-6xl mb-4\" aria-hidden=\"true\">\r\n            üîç\r\n          </div>\r\n          <p className=\"text-xl text-muted\">No trials available at the moment</p>\r\n          <p className=\"text-lg text-muted\">Check back soon for new opportunities!</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;"],"names":["TrialCard","lazy","CardSkeleton","_jsx","className","style","minHeight","children","_jsxs","HeroSection","React","searchQuery","setSearchQuery","useState","navigate","useNavigate","debouncedSearch","useMemo","debounce","timeoutId","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","query","encodeURIComponent","func","handleSearchChange","useCallback","e","value","target","maxWidth","htmlFor","id","type","onChange","placeholder","paddingLeft","autoComplete","Link","to","displayName","HomePage","trials","fetchTrials","loadingTrials","useTrials","mockMode","useAuth","visibleTrials","setVisibleTrials","initialLoad","setInitialLoad","useEffect","async","page_size","loadInitialData","trialsArray","isArray","featuredTrials","latestTrials","featured","latest","forEach","trial","is_featured","push","slice","handleScroll","window","innerHeight","scrollY","document","body","offsetHeight","prev","Math","min","addEventListener","passive","removeEventListener","LoadingState","fullScreen","message","map","index","Suspense","fallback","priority"],"sourceRoot":""}