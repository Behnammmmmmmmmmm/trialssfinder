{"ast":null,"code":"import api from '../utils/api';\nexport const trialsAPI = {\n  list: params => api.get('/trials/', {\n    params\n  }),\n  get: id => api.get(`/trials/${id}/`),\n  create: data => api.post('/trials/create/', data),\n  companyTrials: () => api.get('/trials/company/'),\n  toggleFavorite: id => api.post(`/trials/${id}/favorite/`),\n  getFavorites: () => api.get('/trials/favorites/'),\n  getIndustries: () => api.get('/trials/industries/'),\n  followIndustries: industries => api.post('/trials/industries/follow/', {\n    industries\n  }),\n  getUserIndustries: () => api.get('/trials/industries/user/'),\n  approveTrial: id => api.post(`/trials/${id}/approve/`),\n  toggleFeatured: id => api.post(`/trials/${id}/toggle-featured/`),\n  adminList: () => api.get('/trials/admin/')\n};","map":{"version":3,"names":["api","trialsAPI","list","params","get","id","create","data","post","companyTrials","toggleFavorite","getFavorites","getIndustries","followIndustries","industries","getUserIndustries","approveTrial","toggleFeatured","adminList"],"sources":["C:/Users/behna/Desktop/trialssfinder/trialsfinder/src/api/trials.ts"],"sourcesContent":["import api from '../utils/api';\r\n\r\nexport const trialsAPI = {\r\n  list: (params?: any) => api.get('/trials/', { params }),\r\n  get: (id: number) => api.get(`/trials/${id}/`),\r\n  create: (data: any) => api.post('/trials/create/', data),\r\n  companyTrials: () => api.get('/trials/company/'),\r\n  toggleFavorite: (id: number) => api.post(`/trials/${id}/favorite/`),\r\n  getFavorites: () => api.get('/trials/favorites/'),\r\n  getIndustries: () => api.get('/trials/industries/'),\r\n  followIndustries: (industries: number[]) => api.post('/trials/industries/follow/', { industries }),\r\n  getUserIndustries: () => api.get('/trials/industries/user/'),\r\n  approveTrial: (id: number) => api.post(`/trials/${id}/approve/`),\r\n  toggleFeatured: (id: number) => api.post(`/trials/${id}/toggle-featured/`),\r\n  adminList: () => api.get('/trials/admin/'),\r\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,cAAc;AAE9B,OAAO,MAAMC,SAAS,GAAG;EACvBC,IAAI,EAAGC,MAAY,IAAKH,GAAG,CAACI,GAAG,CAAC,UAAU,EAAE;IAAED;EAAO,CAAC,CAAC;EACvDC,GAAG,EAAGC,EAAU,IAAKL,GAAG,CAACI,GAAG,CAAC,WAAWC,EAAE,GAAG,CAAC;EAC9CC,MAAM,EAAGC,IAAS,IAAKP,GAAG,CAACQ,IAAI,CAAC,iBAAiB,EAAED,IAAI,CAAC;EACxDE,aAAa,EAAEA,CAAA,KAAMT,GAAG,CAACI,GAAG,CAAC,kBAAkB,CAAC;EAChDM,cAAc,EAAGL,EAAU,IAAKL,GAAG,CAACQ,IAAI,CAAC,WAAWH,EAAE,YAAY,CAAC;EACnEM,YAAY,EAAEA,CAAA,KAAMX,GAAG,CAACI,GAAG,CAAC,oBAAoB,CAAC;EACjDQ,aAAa,EAAEA,CAAA,KAAMZ,GAAG,CAACI,GAAG,CAAC,qBAAqB,CAAC;EACnDS,gBAAgB,EAAGC,UAAoB,IAAKd,GAAG,CAACQ,IAAI,CAAC,4BAA4B,EAAE;IAAEM;EAAW,CAAC,CAAC;EAClGC,iBAAiB,EAAEA,CAAA,KAAMf,GAAG,CAACI,GAAG,CAAC,0BAA0B,CAAC;EAC5DY,YAAY,EAAGX,EAAU,IAAKL,GAAG,CAACQ,IAAI,CAAC,WAAWH,EAAE,WAAW,CAAC;EAChEY,cAAc,EAAGZ,EAAU,IAAKL,GAAG,CAACQ,IAAI,CAAC,WAAWH,EAAE,mBAAmB,CAAC;EAC1Ea,SAAS,EAAEA,CAAA,KAAMlB,GAAG,CAACI,GAAG,CAAC,gBAAgB;AAC3C,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}