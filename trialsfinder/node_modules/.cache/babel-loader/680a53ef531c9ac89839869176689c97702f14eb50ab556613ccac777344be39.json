{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\behna\\\\Desktop\\\\trialssfinder\\\\trialsfinder\\\\src\\\\pages\\\\AnalyticsPage.tsx\";\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { analyticsAPI } from '../api/analytics';\nimport { trialsAPI } from '../api/trials';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AnalyticsPage = () => {\n  const [searchParams] = useSearchParams();\n  const [trials, setTrials] = useState([]);\n  const [selectedTrial, setSelectedTrial] = useState(null);\n  const [dateRange, setDateRange] = useState({\n    start_date: '',\n    end_date: ''\n  });\n  const [metrics, setMetrics] = useState(null);\n  const loadMetrics = useCallback(async () => {\n    if (!selectedTrial) {\n      return;\n    }\n    try {\n      const response = await analyticsAPI.getTrialMetrics(selectedTrial, dateRange);\n      setMetrics(response.data);\n    } catch (error) {\n      console.error('Failed to load metrics:', error);\n    }\n  }, [selectedTrial, dateRange]);\n  useEffect(() => {\n    loadTrials();\n    const trialId = searchParams.get('trial');\n    if (trialId) {\n      setSelectedTrial(parseInt(trialId));\n    }\n  }, [searchParams]);\n  useEffect(() => {\n    if (selectedTrial) {\n      loadMetrics();\n    }\n  }, [selectedTrial, dateRange, loadMetrics]);\n  const loadTrials = async () => {\n    try {\n      const response = await trialsAPI.companyTrials();\n      // Handle both paginated and non-paginated responses\n      const trialsData = response.data.results || response.data;\n      setTrials(Array.isArray(trialsData) ? trialsData : []);\n    } catch (error) {\n      console.error('Failed to load trials:', error);\n      setTrials([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Analytics Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedTrial || '',\n        onChange: e => setSelectedTrial(e.target.value ? parseInt(e.target.value) : null),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a trial\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), trials.map(trial => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: trial.id,\n          children: trial.title\n        }, trial.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: dateRange.start_date,\n        onChange: e => setDateRange({\n          ...dateRange,\n          start_date: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: dateRange.end_date,\n        onChange: e => setDateRange({\n          ...dateRange,\n          end_date: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), metrics && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Summary Stats\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Views: \", metrics.views]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Clicks: \", metrics.clicks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Conversions: \", metrics.conversions.toFixed(2), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weekly Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), metrics.weekly_data.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [day.date, \": Views: \", day.views, \", Clicks: \", day.clicks]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)\n      }, day.date, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Monthly Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), metrics.monthly_data.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [day.date, \": Events: \", day.events]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)\n      }, day.date, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\nexport default AnalyticsPage;","map":{"version":3,"names":["React","useEffect","useState","useCallback","useSearchParams","analyticsAPI","trialsAPI","jsxDEV","_jsxDEV","AnalyticsPage","searchParams","trials","setTrials","selectedTrial","setSelectedTrial","dateRange","setDateRange","start_date","end_date","metrics","setMetrics","loadMetrics","response","getTrialMetrics","data","error","console","loadTrials","trialId","get","parseInt","companyTrials","trialsData","results","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","trial","id","title","type","views","clicks","conversions","toFixed","weekly_data","day","date","monthly_data","events"],"sources":["C:/Users/behna/Desktop/trialssfinder/trialsfinder/src/pages/AnalyticsPage.tsx"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport { analyticsAPI } from '../api/analytics';\r\nimport { trialsAPI } from '../api/trials';\r\nimport { Trial } from '../types';\r\n\r\nexport const AnalyticsPage: React.FC = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const [trials, setTrials] = useState<Trial[]>([]);\r\n  const [selectedTrial, setSelectedTrial] = useState<number | null>(null);\r\n  const [dateRange, setDateRange] = useState({\r\n    start_date: '',\r\n    end_date: ''\r\n  });\r\n  const [metrics, setMetrics] = useState<any>(null);\r\n\r\n  const loadMetrics = useCallback(async () => {\r\n    if (!selectedTrial) {\r\n      return;\r\n    }\r\n    try {\r\n      const response = await analyticsAPI.getTrialMetrics(selectedTrial, dateRange);\r\n      setMetrics(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to load metrics:', error);\r\n    }\r\n  }, [selectedTrial, dateRange]);\r\n\r\n  useEffect(() => {\r\n    loadTrials();\r\n    const trialId = searchParams.get('trial');\r\n    if (trialId) {\r\n      setSelectedTrial(parseInt(trialId));\r\n    }\r\n  }, [searchParams]);\r\n\r\n  useEffect(() => {\r\n    if (selectedTrial) {\r\n      loadMetrics();\r\n    }\r\n  }, [selectedTrial, dateRange, loadMetrics]);\r\n\r\n  const loadTrials = async () => {\r\n    try {\r\n      const response = await trialsAPI.companyTrials();\r\n      // Handle both paginated and non-paginated responses\r\n      const trialsData = response.data.results || response.data;\r\n      setTrials(Array.isArray(trialsData) ? trialsData : []);\r\n    } catch (error) {\r\n      console.error('Failed to load trials:', error);\r\n      setTrials([]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Analytics Dashboard</h1>\r\n\r\n      <div>\r\n        <select \r\n          value={selectedTrial || ''} \r\n          onChange={(e) => setSelectedTrial(e.target.value ? parseInt(e.target.value) : null)}\r\n        >\r\n          <option value=\"\">Select a trial</option>\r\n          {trials.map(trial => (\r\n            <option key={trial.id} value={trial.id}>{trial.title}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <input\r\n          type=\"date\"\r\n          value={dateRange.start_date}\r\n          onChange={(e) => setDateRange({...dateRange, start_date: e.target.value})}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          value={dateRange.end_date}\r\n          onChange={(e) => setDateRange({...dateRange, end_date: e.target.value})}\r\n        />\r\n      </div>\r\n\r\n      {metrics && (\r\n        <div>\r\n          <h2>Summary Stats</h2>\r\n          <p>Views: {metrics.views}</p>\r\n          <p>Clicks: {metrics.clicks}</p>\r\n          <p>Conversions: {metrics.conversions.toFixed(2)}%</p>\r\n\r\n          <h2>Weekly Chart</h2>\r\n          {metrics.weekly_data.map((day: any) => (\r\n            <div key={day.date}>\r\n              <span>{day.date}: Views: {day.views}, Clicks: {day.clicks}</span>\r\n            </div>\r\n          ))}\r\n\r\n          <h2>Monthly Chart</h2>\r\n          {metrics.monthly_data.map((day: any) => (\r\n            <div key={day.date}>\r\n              <span>{day.date}: Events: {day.events}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalyticsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}