{"ast":null,"code":"import axios from'axios';export class TrialsFinderError extends Error{constructor(message){let code=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'unknown_error';let details=arguments.length>2?arguments[2]:undefined;super(message);this.name='TrialsFinderError';this.code=code;this.details=details;}}export const parseError=error=>{if(axios.isAxiosError(error)){const axiosError=error;if(axiosError.response?.data?.error){const apiError=axiosError.response.data.error;return new TrialsFinderError(apiError.message,apiError.code,apiError.details);}if(axiosError.code==='ECONNABORTED'){return new TrialsFinderError('Request timeout','timeout_error');}if(axiosError.code==='ERR_NETWORK'){return new TrialsFinderError('Network error','network_error');}if(!axiosError.response){return new TrialsFinderError('Network error','network_error');}return new TrialsFinderError(axiosError.message||'Request failed','request_error');}if(error instanceof TrialsFinderError){return error;}if(error instanceof Error){return new TrialsFinderError(error.message,'client_error');}return new TrialsFinderError('An unexpected error occurred','unknown_error');};export const getErrorMessage=error=>{const parsedError=parseError(error);const errorMessages={'network_error':'Unable to connect to the server. Please check your internet connection.','timeout_error':'Request took too long. Please try again.','authentication_error':'Please log in to continue.','permission_error':\"You don't have permission to perform this action.\",'validation_error':'Please check your input and try again.','not_found':'The requested resource was not found.','internal_error':'Something went wrong on our end. Please try again later.'};return errorMessages[parsedError.code]||parsedError.message;};// Global error handler\nexport const handleError=(error,context)=>{const parsedError=parseError(error);// Log to console in development\nif(process.env.NODE_ENV==='development'){console.error(`[${context}] Application Error:`,parsedError);}// You can add your own error logging service here\n// For example, send to your backend logging endpoint\nif(window.logger){window.logger.error('Application error',{error:parsedError,context});}};// Setup global error handlers\nexport const setupGlobalErrorHandlers=()=>{window.addEventListener('unhandledrejection',event=>{handleError(event.reason,'Unhandled Promise Rejection');event.preventDefault();});window.addEventListener('error',event=>{handleError(event.error,'Global Error');event.preventDefault();});};","map":{"version":3,"names":["axios","TrialsFinderError","Error","constructor","message","code","arguments","length","undefined","details","name","parseError","error","isAxiosError","axiosError","response","data","apiError","getErrorMessage","parsedError","errorMessages","handleError","context","process","env","NODE_ENV","console","window","logger","setupGlobalErrorHandlers","addEventListener","event","reason","preventDefault"],"sources":["C:/Users/behna/Desktop/trialssfinder/trialsfinder/src/utils/errors.ts"],"sourcesContent":["import axios, { AxiosError } from 'axios';\r\n\r\nexport interface ApiError {\r\n  code: string;\r\n  message: string;\r\n  details?: Record<string, any>;\r\n  request_id?: string;\r\n}\r\n\r\nexport interface ErrorResponse {\r\n  error: ApiError;\r\n}\r\n\r\nexport class TrialsFinderError extends Error {\r\n  code: string;\r\n  details?: Record<string, any>;\r\n  request_id?: string;\r\n\r\n  constructor(message: string, code: string = 'unknown_error', details?: Record<string, any>) {\r\n    super(message);\r\n    this.name = 'TrialsFinderError';\r\n    this.code = code;\r\n    this.details = details;\r\n  }\r\n}\r\n\r\nexport const parseError = (error: unknown): TrialsFinderError => {\r\n  if (axios.isAxiosError(error)) {\r\n    const axiosError = error as AxiosError<ErrorResponse>;\r\n    \r\n    if (axiosError.response?.data?.error) {\r\n      const apiError = axiosError.response.data.error;\r\n      return new TrialsFinderError(\r\n        apiError.message,\r\n        apiError.code,\r\n        apiError.details\r\n      );\r\n    }\r\n    \r\n    if (axiosError.code === 'ECONNABORTED') {\r\n      return new TrialsFinderError('Request timeout', 'timeout_error');\r\n    }\r\n    \r\n    if (axiosError.code === 'ERR_NETWORK') {\r\n      return new TrialsFinderError('Network error', 'network_error');\r\n    }\r\n    \r\n    if (!axiosError.response) {\r\n      return new TrialsFinderError('Network error', 'network_error');\r\n    }\r\n    \r\n    return new TrialsFinderError(axiosError.message || 'Request failed', 'request_error');\r\n  }\r\n  \r\n  if (error instanceof TrialsFinderError) {\r\n    return error;\r\n  }\r\n  \r\n  if (error instanceof Error) {\r\n    return new TrialsFinderError(error.message, 'client_error');\r\n  }\r\n  \r\n  return new TrialsFinderError('An unexpected error occurred', 'unknown_error');\r\n};\r\n\r\nexport const getErrorMessage = (error: unknown): string => {\r\n  const parsedError = parseError(error);\r\n  \r\n  const errorMessages: Record<string, string> = {\r\n    'network_error': 'Unable to connect to the server. Please check your internet connection.',\r\n    'timeout_error': 'Request took too long. Please try again.',\r\n    'authentication_error': 'Please log in to continue.',\r\n    'permission_error': \"You don't have permission to perform this action.\",\r\n    'validation_error': 'Please check your input and try again.',\r\n    'not_found': 'The requested resource was not found.',\r\n    'internal_error': 'Something went wrong on our end. Please try again later.',\r\n  };\r\n  \r\n  return errorMessages[parsedError.code] || parsedError.message;\r\n};\r\n\r\n// Global error handler\r\nexport const handleError = (error: unknown, context: string): void => {\r\n  const parsedError = parseError(error);\r\n  \r\n  // Log to console in development\r\n  if (process.env.NODE_ENV === 'development') {\r\n    console.error(`[${context}] Application Error:`, parsedError);\r\n  }\r\n  \r\n  // You can add your own error logging service here\r\n  // For example, send to your backend logging endpoint\r\n  if (window.logger) {\r\n    window.logger.error('Application error', { error: parsedError, context });\r\n  }\r\n};\r\n\r\n// Setup global error handlers\r\nexport const setupGlobalErrorHandlers = (): void => {\r\n  window.addEventListener('unhandledrejection', (event) => {\r\n    handleError(event.reason, 'Unhandled Promise Rejection');\r\n    event.preventDefault();\r\n  });\r\n  \r\n  window.addEventListener('error', (event) => {\r\n    handleError(event.error, 'Global Error');\r\n    event.preventDefault();\r\n  });\r\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAsB,OAAO,CAazC,MAAO,MAAM,CAAAC,iBAAiB,QAAS,CAAAC,KAAM,CAK3CC,WAAWA,CAACC,OAAe,CAAiE,IAA/D,CAAAC,IAAY,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,eAAe,IAAE,CAAAG,OAA6B,CAAAH,SAAA,CAAAC,MAAA,GAAAD,SAAA,IAAAE,SAAA,CACxF,KAAK,CAACJ,OAAO,CAAC,CACd,IAAI,CAACM,IAAI,CAAG,mBAAmB,CAC/B,IAAI,CAACL,IAAI,CAAGA,IAAI,CAChB,IAAI,CAACI,OAAO,CAAGA,OAAO,CACxB,CACF,CAEA,MAAO,MAAM,CAAAE,UAAU,CAAIC,KAAc,EAAwB,CAC/D,GAAIZ,KAAK,CAACa,YAAY,CAACD,KAAK,CAAC,CAAE,CAC7B,KAAM,CAAAE,UAAU,CAAGF,KAAkC,CAErD,GAAIE,UAAU,CAACC,QAAQ,EAAEC,IAAI,EAAEJ,KAAK,CAAE,CACpC,KAAM,CAAAK,QAAQ,CAAGH,UAAU,CAACC,QAAQ,CAACC,IAAI,CAACJ,KAAK,CAC/C,MAAO,IAAI,CAAAX,iBAAiB,CAC1BgB,QAAQ,CAACb,OAAO,CAChBa,QAAQ,CAACZ,IAAI,CACbY,QAAQ,CAACR,OACX,CAAC,CACH,CAEA,GAAIK,UAAU,CAACT,IAAI,GAAK,cAAc,CAAE,CACtC,MAAO,IAAI,CAAAJ,iBAAiB,CAAC,iBAAiB,CAAE,eAAe,CAAC,CAClE,CAEA,GAAIa,UAAU,CAACT,IAAI,GAAK,aAAa,CAAE,CACrC,MAAO,IAAI,CAAAJ,iBAAiB,CAAC,eAAe,CAAE,eAAe,CAAC,CAChE,CAEA,GAAI,CAACa,UAAU,CAACC,QAAQ,CAAE,CACxB,MAAO,IAAI,CAAAd,iBAAiB,CAAC,eAAe,CAAE,eAAe,CAAC,CAChE,CAEA,MAAO,IAAI,CAAAA,iBAAiB,CAACa,UAAU,CAACV,OAAO,EAAI,gBAAgB,CAAE,eAAe,CAAC,CACvF,CAEA,GAAIQ,KAAK,WAAY,CAAAX,iBAAiB,CAAE,CACtC,MAAO,CAAAW,KAAK,CACd,CAEA,GAAIA,KAAK,WAAY,CAAAV,KAAK,CAAE,CAC1B,MAAO,IAAI,CAAAD,iBAAiB,CAACW,KAAK,CAACR,OAAO,CAAE,cAAc,CAAC,CAC7D,CAEA,MAAO,IAAI,CAAAH,iBAAiB,CAAC,8BAA8B,CAAE,eAAe,CAAC,CAC/E,CAAC,CAED,MAAO,MAAM,CAAAiB,eAAe,CAAIN,KAAc,EAAa,CACzD,KAAM,CAAAO,WAAW,CAAGR,UAAU,CAACC,KAAK,CAAC,CAErC,KAAM,CAAAQ,aAAqC,CAAG,CAC5C,eAAe,CAAE,yEAAyE,CAC1F,eAAe,CAAE,0CAA0C,CAC3D,sBAAsB,CAAE,4BAA4B,CACpD,kBAAkB,CAAE,mDAAmD,CACvE,kBAAkB,CAAE,wCAAwC,CAC5D,WAAW,CAAE,uCAAuC,CACpD,gBAAgB,CAAE,0DACpB,CAAC,CAED,MAAO,CAAAA,aAAa,CAACD,WAAW,CAACd,IAAI,CAAC,EAAIc,WAAW,CAACf,OAAO,CAC/D,CAAC,CAED;AACA,MAAO,MAAM,CAAAiB,WAAW,CAAGA,CAACT,KAAc,CAAEU,OAAe,GAAW,CACpE,KAAM,CAAAH,WAAW,CAAGR,UAAU,CAACC,KAAK,CAAC,CAErC;AACA,GAAIW,OAAO,CAACC,GAAG,CAACC,QAAQ,GAAK,aAAa,CAAE,CAC1CC,OAAO,CAACd,KAAK,CAAC,IAAIU,OAAO,sBAAsB,CAAEH,WAAW,CAAC,CAC/D,CAEA;AACA;AACA,GAAIQ,MAAM,CAACC,MAAM,CAAE,CACjBD,MAAM,CAACC,MAAM,CAAChB,KAAK,CAAC,mBAAmB,CAAE,CAAEA,KAAK,CAAEO,WAAW,CAAEG,OAAQ,CAAC,CAAC,CAC3E,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAO,wBAAwB,CAAGA,CAAA,GAAY,CAClDF,MAAM,CAACG,gBAAgB,CAAC,oBAAoB,CAAGC,KAAK,EAAK,CACvDV,WAAW,CAACU,KAAK,CAACC,MAAM,CAAE,6BAA6B,CAAC,CACxDD,KAAK,CAACE,cAAc,CAAC,CAAC,CACxB,CAAC,CAAC,CAEFN,MAAM,CAACG,gBAAgB,CAAC,OAAO,CAAGC,KAAK,EAAK,CAC1CV,WAAW,CAACU,KAAK,CAACnB,KAAK,CAAE,cAAc,CAAC,CACxCmB,KAAK,CAACE,cAAc,CAAC,CAAC,CACxB,CAAC,CAAC,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}