{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\behna\\\\Desktop\\\\trialssfinder\\\\trialsfinder\\\\src\\\\index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\n\n// Critical CSS only - this will be bundled by webpack\nimport './styles/critical.css';\nimport './styles/index.css';\n\n// Get root element\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootElement = document.getElementById('root');\nif (!rootElement) throw new Error('Failed to find the root element');\n\n// Create root\nconst root = ReactDOM.createRoot(rootElement);\n\n// Fast initial render\nroot.render(/*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    minHeight: '100vh',\n    backgroundColor: '#f8f9fa'\n  },\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      \"data-size\": \"lg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: '1rem',\n        color: '#6b7280'\n      },\n      children: \"Loading TrialsFinder...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this));\n\n// Load the app asynchronously\n(async () => {\n  try {\n    const {\n      default: App\n    } = await import('./App');\n\n    // Render full app\n    root.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this));\n\n    // Register service worker with proper cleanup\n    if ('serviceWorker' in navigator && process.env.NODE_ENV === 'production') {\n      window.addEventListener('load', () => {\n        navigator.serviceWorker.register('/service-worker.js').catch(() => {\n          // Silently fail\n        });\n      });\n    }\n  } catch (error) {\n    console.error('Failed to load app:', error);\n  }\n})();\n\n// Clean up event listeners on page unload to allow bfcache\nwindow.addEventListener('pagehide', () => {\n  // Remove any event listeners that might prevent bfcache\n  if ('serviceWorker' in navigator) {\n    // Don't unregister service worker, just clean up listeners\n  }\n});\n\n// Avoid using unload event which prevents bfcache\n// window.addEventListener('unload', () => {}); // DON'T USE THIS","map":{"version":3,"names":["React","ReactDOM","jsxDEV","_jsxDEV","rootElement","document","getElementById","Error","root","createRoot","render","style","minHeight","backgroundColor","children","textAlign","padding","className","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","color","default","App","StrictMode","navigator","process","env","NODE_ENV","window","addEventListener","serviceWorker","register","catch","error","console"],"sources":["C:/Users/behna/Desktop/trialssfinder/trialsfinder/src/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\n// Critical CSS only - this will be bundled by webpack\r\nimport './styles/critical.css';\r\nimport './styles/index.css';\r\n\r\n// Get root element\r\nconst rootElement = document.getElementById('root');\r\nif (!rootElement) throw new Error('Failed to find the root element');\r\n\r\n// Create root\r\nconst root = ReactDOM.createRoot(rootElement);\r\n\r\n// Fast initial render\r\nroot.render(\r\n  <div style={{ minHeight: '100vh', backgroundColor: '#f8f9fa' }}>\r\n    <div style={{ textAlign: 'center', padding: '2rem' }}>\r\n      <div className=\"spinner\" data-size=\"lg\"></div>\r\n      <p style={{ marginTop: '1rem', color: '#6b7280' }}>Loading TrialsFinder...</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\n// Load the app asynchronously\r\n(async () => {\r\n  try {\r\n    const { default: App } = await import('./App');\r\n    \r\n    // Render full app\r\n    root.render(\r\n      <React.StrictMode>\r\n        <App />\r\n      </React.StrictMode>\r\n    );\r\n\r\n    // Register service worker with proper cleanup\r\n    if ('serviceWorker' in navigator && process.env.NODE_ENV === 'production') {\r\n      window.addEventListener('load', () => {\r\n        navigator.serviceWorker.register('/service-worker.js').catch(() => {\r\n          // Silently fail\r\n        });\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error('Failed to load app:', error);\r\n  }\r\n})();\r\n\r\n// Clean up event listeners on page unload to allow bfcache\r\nwindow.addEventListener('pagehide', () => {\r\n  // Remove any event listeners that might prevent bfcache\r\n  if ('serviceWorker' in navigator) {\r\n    // Don't unregister service worker, just clean up listeners\r\n  }\r\n});\r\n\r\n// Avoid using unload event which prevents bfcache\r\n// window.addEventListener('unload', () => {}); // DON'T USE THIS"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;;AAEvC;AACA,OAAO,uBAAuB;AAC9B,OAAO,oBAAoB;;AAE3B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;AACnD,IAAI,CAACF,WAAW,EAAE,MAAM,IAAIG,KAAK,CAAC,iCAAiC,CAAC;;AAEpE;AACA,MAAMC,IAAI,GAAGP,QAAQ,CAACQ,UAAU,CAACL,WAAW,CAAC;;AAE7C;AACAI,IAAI,CAACE,MAAM,cACTP,OAAA;EAAKQ,KAAK,EAAE;IAAEC,SAAS,EAAE,OAAO;IAAEC,eAAe,EAAE;EAAU,CAAE;EAAAC,QAAA,eAC7DX,OAAA;IAAKQ,KAAK,EAAE;MAAEI,SAAS,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAF,QAAA,gBACnDX,OAAA;MAAKc,SAAS,EAAC,SAAS;MAAC,aAAU;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAC9ClB,OAAA;MAAGQ,KAAK,EAAE;QAAEW,SAAS,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAU,CAAE;MAAAT,QAAA,EAAC;IAAuB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3E;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACH,CACP,CAAC;;AAED;AACA,CAAC,YAAY;EACX,IAAI;IACF,MAAM;MAAEG,OAAO,EAAEC;IAAI,CAAC,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;;IAE9C;IACAjB,IAAI,CAACE,MAAM,cACTP,OAAA,CAACH,KAAK,CAAC0B,UAAU;MAAAZ,QAAA,eACfX,OAAA,CAACsB,GAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CACpB,CAAC;;IAED;IACA,IAAI,eAAe,IAAIM,SAAS,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzEC,MAAM,CAACC,gBAAgB,CAAC,MAAM,EAAE,MAAM;QACpCL,SAAS,CAACM,aAAa,CAACC,QAAQ,CAAC,oBAAoB,CAAC,CAACC,KAAK,CAAC,MAAM;UACjE;QAAA,CACD,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;EAC7C;AACF,CAAC,EAAE,CAAC;;AAEJ;AACAL,MAAM,CAACC,gBAAgB,CAAC,UAAU,EAAE,MAAM;EACxC;EACA,IAAI,eAAe,IAAIL,SAAS,EAAE;IAChC;EAAA;AAEJ,CAAC,CAAC;;AAEF;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}