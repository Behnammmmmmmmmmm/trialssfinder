{"ast":null,"code":"import api from '../utils/api';\nexport const authAPI = {\n  register: data => api.post('/auth/register/', data),\n  login: data => api.post('/auth/login/', data),\n  verifyEmail: token => api.post('/auth/verify-email/', {\n    token\n  }),\n  forgotPassword: email => api.post('/auth/forgot-password/', {\n    email\n  }),\n  resetPassword: data => api.post('/auth/reset-password/', data),\n  getMe: () => api.get('/auth/me/')\n};","map":{"version":3,"names":["api","authAPI","register","data","post","login","verifyEmail","token","forgotPassword","email","resetPassword","getMe","get"],"sources":["C:/Users/behna/Desktop/trialssfinder/trialsfinder/src/api/auth.ts"],"sourcesContent":["import api from '../utils/api';\r\n\r\ninterface RegisterData {\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n  user_type: 'user' | 'company';\r\n  company_name?: string;\r\n}\r\n\r\ninterface LoginData {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\ninterface ResetPasswordData {\r\n  token: string;\r\n  password: string;\r\n}\r\n\r\nexport const authAPI = {\r\n  register: (data: RegisterData) => api.post('/auth/register/', data),\r\n  login: (data: LoginData) => api.post('/auth/login/', data),\r\n  verifyEmail: (token: string) => api.post('/auth/verify-email/', { token }),\r\n  forgotPassword: (email: string) => api.post('/auth/forgot-password/', { email }),\r\n  resetPassword: (data: ResetPasswordData) => api.post('/auth/reset-password/', data),\r\n  getMe: () => api.get('/auth/me/'),\r\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,cAAc;AAoB9B,OAAO,MAAMC,OAAO,GAAG;EACrBC,QAAQ,EAAGC,IAAkB,IAAKH,GAAG,CAACI,IAAI,CAAC,iBAAiB,EAAED,IAAI,CAAC;EACnEE,KAAK,EAAGF,IAAe,IAAKH,GAAG,CAACI,IAAI,CAAC,cAAc,EAAED,IAAI,CAAC;EAC1DG,WAAW,EAAGC,KAAa,IAAKP,GAAG,CAACI,IAAI,CAAC,qBAAqB,EAAE;IAAEG;EAAM,CAAC,CAAC;EAC1EC,cAAc,EAAGC,KAAa,IAAKT,GAAG,CAACI,IAAI,CAAC,wBAAwB,EAAE;IAAEK;EAAM,CAAC,CAAC;EAChFC,aAAa,EAAGP,IAAuB,IAAKH,GAAG,CAACI,IAAI,CAAC,uBAAuB,EAAED,IAAI,CAAC;EACnFQ,KAAK,EAAEA,CAAA,KAAMX,GAAG,CAACY,GAAG,CAAC,WAAW;AAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}