{"ast":null,"code":"import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nexport const SUPPORTED_LANGUAGES = {\n  en: {\n    name: 'English',\n    dir: 'ltr'\n  },\n  es: {\n    name: 'Español',\n    dir: 'ltr'\n  },\n  fr: {\n    name: 'Français',\n    dir: 'ltr'\n  },\n  de: {\n    name: 'Deutsch',\n    dir: 'ltr'\n  },\n  ar: {\n    name: 'العربية',\n    dir: 'rtl'\n  },\n  he: {\n    name: 'עברית',\n    dir: 'rtl'\n  }\n};\n\n// Custom backend that uses native fetch\nconst customBackend = {\n  type: 'backend',\n  init: function () {},\n  read: function (language, namespace, callback) {\n    const loadPath = `/locales/${language}/${namespace}.json`;\n    fetch(loadPath).then(response => {\n      if (!response.ok) {\n        throw new Error(`Failed to load ${loadPath}`);\n      }\n      return response.json();\n    }).then(data => {\n      callback(null, data);\n    }).catch(error => {\n      callback(error, null);\n    });\n  }\n};\nvoid i18n.use(customBackend).use(LanguageDetector).use(initReactI18next).init({\n  fallbackLng: 'en',\n  debug: process.env.NODE_ENV === 'development',\n  interpolation: {\n    escapeValue: false\n  },\n  detection: {\n    order: ['cookie', 'localStorage', 'navigator', 'htmlTag'],\n    caches: ['cookie', 'localStorage']\n  },\n  react: {\n    useSuspense: false\n  }\n});\nexport default i18n;","map":{"version":3,"names":["i18n","initReactI18next","LanguageDetector","SUPPORTED_LANGUAGES","en","name","dir","es","fr","de","ar","he","customBackend","type","init","read","language","namespace","callback","loadPath","fetch","then","response","ok","Error","json","data","catch","error","use","fallbackLng","debug","process","env","NODE_ENV","interpolation","escapeValue","detection","order","caches","react","useSuspense"],"sources":["C:/Users/behna/Desktop/trialssfinder/trialsfinder/src/i18n/config.ts"],"sourcesContent":["import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\nexport const SUPPORTED_LANGUAGES = {\r\n  en: { name: 'English', dir: 'ltr' },\r\n  es: { name: 'Español', dir: 'ltr' },\r\n  fr: { name: 'Français', dir: 'ltr' },\r\n  de: { name: 'Deutsch', dir: 'ltr' },\r\n  ar: { name: 'العربية', dir: 'rtl' },\r\n  he: { name: 'עברית', dir: 'rtl' },\r\n};\r\n\r\n// Custom backend that uses native fetch\r\nconst customBackend = {\r\n  type: 'backend' as const,\r\n  init: function() {},\r\n  read: function(language: string, namespace: string, callback: Function) {\r\n    const loadPath = `/locales/${language}/${namespace}.json`;\r\n    \r\n    fetch(loadPath)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error(`Failed to load ${loadPath}`);\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        callback(null, data);\r\n      })\r\n      .catch(error => {\r\n        callback(error, null);\r\n      });\r\n  }\r\n};\r\n\r\nvoid i18n\r\n  .use(customBackend as any)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    fallbackLng: 'en',\r\n    debug: process.env.NODE_ENV === 'development',\r\n    \r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n    \r\n    detection: {\r\n      order: ['cookie', 'localStorage', 'navigator', 'htmlTag'],\r\n      caches: ['cookie', 'localStorage'],\r\n    },\r\n    \r\n    react: {\r\n      useSuspense: false,\r\n    },\r\n  });\r\n\r\nexport default i18n;"],"mappings":"AAAA,OAAOA,IAAI,MAAM,SAAS;AAC1B,SAASC,gBAAgB,QAAQ,eAAe;AAChD,OAAOC,gBAAgB,MAAM,kCAAkC;AAE/D,OAAO,MAAMC,mBAAmB,GAAG;EACjCC,EAAE,EAAE;IAAEC,IAAI,EAAE,SAAS;IAAEC,GAAG,EAAE;EAAM,CAAC;EACnCC,EAAE,EAAE;IAAEF,IAAI,EAAE,SAAS;IAAEC,GAAG,EAAE;EAAM,CAAC;EACnCE,EAAE,EAAE;IAAEH,IAAI,EAAE,UAAU;IAAEC,GAAG,EAAE;EAAM,CAAC;EACpCG,EAAE,EAAE;IAAEJ,IAAI,EAAE,SAAS;IAAEC,GAAG,EAAE;EAAM,CAAC;EACnCI,EAAE,EAAE;IAAEL,IAAI,EAAE,SAAS;IAAEC,GAAG,EAAE;EAAM,CAAC;EACnCK,EAAE,EAAE;IAAEN,IAAI,EAAE,OAAO;IAAEC,GAAG,EAAE;EAAM;AAClC,CAAC;;AAED;AACA,MAAMM,aAAa,GAAG;EACpBC,IAAI,EAAE,SAAkB;EACxBC,IAAI,EAAE,SAAAA,CAAA,EAAW,CAAC,CAAC;EACnBC,IAAI,EAAE,SAAAA,CAASC,QAAgB,EAAEC,SAAiB,EAAEC,QAAkB,EAAE;IACtE,MAAMC,QAAQ,GAAG,YAAYH,QAAQ,IAAIC,SAAS,OAAO;IAEzDG,KAAK,CAACD,QAAQ,CAAC,CACZE,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,kBAAkBL,QAAQ,EAAE,CAAC;MAC/C;MACA,OAAOG,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZR,QAAQ,CAAC,IAAI,EAAEQ,IAAI,CAAC;IACtB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdV,QAAQ,CAACU,KAAK,EAAE,IAAI,CAAC;IACvB,CAAC,CAAC;EACN;AACF,CAAC;AAED,KAAK5B,IAAI,CACN6B,GAAG,CAACjB,aAAoB,CAAC,CACzBiB,GAAG,CAAC3B,gBAAgB,CAAC,CACrB2B,GAAG,CAAC5B,gBAAgB,CAAC,CACrBa,IAAI,CAAC;EACJgB,WAAW,EAAE,IAAI;EACjBC,KAAK,EAAEC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa;EAE7CC,aAAa,EAAE;IACbC,WAAW,EAAE;EACf,CAAC;EAEDC,SAAS,EAAE;IACTC,KAAK,EAAE,CAAC,QAAQ,EAAE,cAAc,EAAE,WAAW,EAAE,SAAS,CAAC;IACzDC,MAAM,EAAE,CAAC,QAAQ,EAAE,cAAc;EACnC,CAAC;EAEDC,KAAK,EAAE;IACLC,WAAW,EAAE;EACf;AACF,CAAC,CAAC;AAEJ,eAAezC,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}