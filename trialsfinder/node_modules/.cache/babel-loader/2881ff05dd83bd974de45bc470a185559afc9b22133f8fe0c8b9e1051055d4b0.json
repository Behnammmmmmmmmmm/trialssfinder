{"ast":null,"code":"export const createUISlice = set => ({\n  sidebarOpen: false,\n  theme: 'light',\n  loadingStates: {},\n  toggleSidebar: () => set(state => ({\n    sidebarOpen: !state.sidebarOpen\n  })),\n  setTheme: theme => set({\n    theme\n  }),\n  setLoadingState: (key, loading) => {\n    set(state => ({\n      loadingStates: {\n        ...state.loadingStates,\n        [key]: loading\n      }\n    }));\n  },\n  clearLoadingStates: () => set({\n    loadingStates: {}\n  })\n});","map":{"version":3,"names":["createUISlice","set","sidebarOpen","theme","loadingStates","toggleSidebar","state","setTheme","setLoadingState","key","loading","clearLoadingStates"],"sources":["C:/Users/behna/Desktop/trialssfinder/trialsfinder/src/store/slices/uiSlice.ts"],"sourcesContent":["import { StateCreator } from 'zustand';\nimport { AppState } from '../index';\n\nexport interface UIState {\n  sidebarOpen: boolean;\n  theme: 'light' | 'dark';\n  loadingStates: Record<string, boolean>;\n  toggleSidebar: () => void;\n  setTheme: (theme: 'light' | 'dark') => void;\n  setLoadingState: (key: string, loading: boolean) => void;\n  clearLoadingStates: () => void;\n}\n\nexport const createUISlice: StateCreator<AppState, [], [], UIState> = (set) => ({\n  sidebarOpen: false,\n  theme: 'light',\n  loadingStates: {},\n\n  toggleSidebar: () => set((state) => ({ sidebarOpen: !state.sidebarOpen })),\n  \n  setTheme: (theme) => set({ theme }),\n  \n  setLoadingState: (key, loading) => {\n    set((state) => ({\n      loadingStates: {\n        ...state.loadingStates,\n        [key]: loading\n      }\n    }));\n  },\n  \n  clearLoadingStates: () => set({ loadingStates: {} }),\n});"],"mappings":"AAaA,OAAO,MAAMA,aAAsD,GAAIC,GAAG,KAAM;EAC9EC,WAAW,EAAE,KAAK;EAClBC,KAAK,EAAE,OAAO;EACdC,aAAa,EAAE,CAAC,CAAC;EAEjBC,aAAa,EAAEA,CAAA,KAAMJ,GAAG,CAAEK,KAAK,KAAM;IAAEJ,WAAW,EAAE,CAACI,KAAK,CAACJ;EAAY,CAAC,CAAC,CAAC;EAE1EK,QAAQ,EAAGJ,KAAK,IAAKF,GAAG,CAAC;IAAEE;EAAM,CAAC,CAAC;EAEnCK,eAAe,EAAEA,CAACC,GAAG,EAAEC,OAAO,KAAK;IACjCT,GAAG,CAAEK,KAAK,KAAM;MACdF,aAAa,EAAE;QACb,GAAGE,KAAK,CAACF,aAAa;QACtB,CAACK,GAAG,GAAGC;MACT;IACF,CAAC,CAAC,CAAC;EACL,CAAC;EAEDC,kBAAkB,EAAEA,CAAA,KAAMV,GAAG,CAAC;IAAEG,aAAa,EAAE,CAAC;EAAE,CAAC;AACrD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}