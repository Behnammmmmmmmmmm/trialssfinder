{"ast":null,"code":"import axios from'axios';export class TrialsFinderError extends Error{constructor(message){let code=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'unknown_error';let details=arguments.length>2?arguments[2]:undefined;super(message);this.name='TrialsFinderError';this.code=code;this.details=details;}}export const parseError=error=>{if(axios.isAxiosError(error)){const axiosError=error;if(axiosError.response?.data?.error){const apiError=axiosError.response.data.error;return new TrialsFinderError(apiError.message,apiError.code,apiError.details);}if(axiosError.code==='ECONNABORTED'){return new TrialsFinderError('Request timeout','timeout_error');}if(axiosError.code==='ERR_NETWORK'){return new TrialsFinderError('Network error','network_error');}if(!axiosError.response){return new TrialsFinderError('Network error','network_error');}return new TrialsFinderError(axiosError.message||'Request failed','request_error');}if(error instanceof TrialsFinderError){return error;}if(error instanceof Error){return new TrialsFinderError(error.message,'client_error');}return new TrialsFinderError('An unexpected error occurred','unknown_error');};export const getErrorMessage=error=>{const parsedError=parseError(error);const errorMessages={'network_error':'Unable to connect to the server. Please check your internet connection.','timeout_error':'Request took too long. Please try again.','authentication_error':'Please log in to continue.','permission_error':'You don\\'t have permission to perform this action.','validation_error':'Please check your input and try again.','not_found':'The requested resource was not found.','internal_error':'Something went wrong on our end. Please try again later.'};return errorMessages[parsedError.code]||parsedError.message;};// Global error handler\nexport const handleError=(error,context)=>{const parsedError=parseError(error);// Log to monitoring service\nif(window.logger){window.logger.error('Application error',{error:parsedError,context,user:window.currentUser?.username||'anonymous',url:window.location.href});}// Log to console in development\nif(process.env.NODE_ENV==='development'){console.error(`[${context||'Application'}] Error:`,parsedError);}};// Setup global error handlers\nexport const setupGlobalErrorHandlers=()=>{window.addEventListener('unhandledrejection',event=>{handleError(event.reason,'Unhandled Promise Rejection');event.preventDefault();});window.addEventListener('error',event=>{handleError(event.error,'Global Error');event.preventDefault();});};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}