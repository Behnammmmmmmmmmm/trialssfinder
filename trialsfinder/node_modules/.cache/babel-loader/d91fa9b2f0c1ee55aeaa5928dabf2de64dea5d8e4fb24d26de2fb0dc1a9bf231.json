{"ast":null,"code":"export const createUISlice=set=>({sidebarOpen:false,theme:'light',loadingStates:{},toggleSidebar:()=>set(state=>({sidebarOpen:!state.sidebarOpen})),setTheme:theme=>set({theme}),setLoadingState:(key,loading)=>{set(state=>({loadingStates:{...state.loadingStates,[key]:loading}}));},clearLoadingStates:()=>set({loadingStates:{}})});","map":{"version":3,"names":["createUISlice","set","sidebarOpen","theme","loadingStates","toggleSidebar","state","setTheme","setLoadingState","key","loading","clearLoadingStates"],"sources":["C:/Users/behna/Desktop/trialssfinder/trialsfinder/src/store/slices/uiSlice.ts"],"sourcesContent":["import { StateCreator } from 'zustand';\nimport { AppState } from '../index';\n\nexport interface UIState {\n  sidebarOpen: boolean;\n  theme: 'light' | 'dark';\n  loadingStates: Record<string, boolean>;\n  toggleSidebar: () => void;\n  setTheme: (theme: 'light' | 'dark') => void;\n  setLoadingState: (key: string, loading: boolean) => void;\n  clearLoadingStates: () => void;\n}\n\nexport const createUISlice: StateCreator<AppState, [], [], UIState> = (set) => ({\n  sidebarOpen: false,\n  theme: 'light',\n  loadingStates: {},\n\n  toggleSidebar: () => set((state) => ({ sidebarOpen: !state.sidebarOpen })),\n  \n  setTheme: (theme) => set({ theme }),\n  \n  setLoadingState: (key, loading) => {\n    set((state) => ({\n      loadingStates: {\n        ...state.loadingStates,\n        [key]: loading\n      }\n    }));\n  },\n  \n  clearLoadingStates: () => set({ loadingStates: {} }),\n});"],"mappings":"AAaA,MAAO,MAAM,CAAAA,aAAsD,CAAIC,GAAG,GAAM,CAC9EC,WAAW,CAAE,KAAK,CAClBC,KAAK,CAAE,OAAO,CACdC,aAAa,CAAE,CAAC,CAAC,CAEjBC,aAAa,CAAEA,CAAA,GAAMJ,GAAG,CAAEK,KAAK,GAAM,CAAEJ,WAAW,CAAE,CAACI,KAAK,CAACJ,WAAY,CAAC,CAAC,CAAC,CAE1EK,QAAQ,CAAGJ,KAAK,EAAKF,GAAG,CAAC,CAAEE,KAAM,CAAC,CAAC,CAEnCK,eAAe,CAAEA,CAACC,GAAG,CAAEC,OAAO,GAAK,CACjCT,GAAG,CAAEK,KAAK,GAAM,CACdF,aAAa,CAAE,CACb,GAAGE,KAAK,CAACF,aAAa,CACtB,CAACK,GAAG,EAAGC,OACT,CACF,CAAC,CAAC,CAAC,CACL,CAAC,CAEDC,kBAAkB,CAAEA,CAAA,GAAMV,GAAG,CAAC,CAAEG,aAAa,CAAE,CAAC,CAAE,CAAC,CACrD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}