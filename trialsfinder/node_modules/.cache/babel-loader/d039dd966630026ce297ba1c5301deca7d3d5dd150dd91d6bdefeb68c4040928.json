{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\behna\\\\Desktop\\\\trialssfinder\\\\trialsfinder\\\\src\\\\pages\\\\CreateTrialPage.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { trialsAPI } from '../api/trials';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateTrialPage = () => {\n  const navigate = useNavigate();\n  const [industries, setIndustries] = useState([]);\n  const [formData, setFormData] = useState({\n    title: '',\n    description: '',\n    industry: '',\n    location: '',\n    start_date: '',\n    end_date: ''\n  });\n  useEffect(() => {\n    loadIndustries();\n  }, []);\n  const loadIndustries = async () => {\n    try {\n      const response = await trialsAPI.getIndustries();\n      setIndustries(response.data);\n    } catch (error) {\n      console.error('Failed to load industries:', error);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await trialsAPI.create(formData);\n      navigate(`/payment/${response.data.id}`);\n    } catch (error) {\n      console.error('Failed to create trial:', error);\n    }\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create Trial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: formData.title,\n        onChange: handleChange,\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: formData.description,\n        onChange: handleChange,\n        placeholder: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"industry\",\n        value: formData.industry,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Industry\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), industries.map(industry => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: industry.id,\n          children: industry.name\n        }, industry.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"location\",\n        value: formData.location,\n        onChange: handleChange,\n        placeholder: \"Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"start_date\",\n        value: formData.start_date,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"end_date\",\n        value: formData.end_date,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Create Trial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\nexport default CreateTrialPage;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","trialsAPI","jsxDEV","_jsxDEV","CreateTrialPage","navigate","industries","setIndustries","formData","setFormData","title","description","industry","location","start_date","end_date","loadIndustries","response","getIndustries","data","error","console","handleSubmit","e","preventDefault","create","id","handleChange","target","name","value","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","map"],"sources":["C:/Users/behna/Desktop/trialssfinder/trialsfinder/src/pages/CreateTrialPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { trialsAPI } from '../api/trials';\r\nimport { Industry } from '../types';\r\n\r\nexport const CreateTrialPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [industries, setIndustries] = useState<Industry[]>([]);\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    description: '',\r\n    industry: '',\r\n    location: '',\r\n    start_date: '',\r\n    end_date: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadIndustries();\r\n  }, []);\r\n\r\n  const loadIndustries = async () => {\r\n    try {\r\n      const response = await trialsAPI.getIndustries();\r\n      setIndustries(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to load industries:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await trialsAPI.create(formData);\r\n      navigate(`/payment/${response.data.id}`);\r\n    } catch (error) {\r\n      console.error('Failed to create trial:', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Create Trial</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={formData.title}\r\n          onChange={handleChange}\r\n          placeholder=\"Title\"\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          value={formData.description}\r\n          onChange={handleChange}\r\n          placeholder=\"Description\"\r\n        />\r\n        <select name=\"industry\" value={formData.industry} onChange={handleChange}>\r\n          <option value=\"\">Select Industry</option>\r\n          {industries.map(industry => (\r\n            <option key={industry.id} value={industry.id}>{industry.name}</option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          name=\"location\"\r\n          value={formData.location}\r\n          onChange={handleChange}\r\n          placeholder=\"Location\"\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"start_date\"\r\n          value={formData.start_date}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"end_date\"\r\n          value={formData.end_date}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\">Create Trial</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTrialPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}