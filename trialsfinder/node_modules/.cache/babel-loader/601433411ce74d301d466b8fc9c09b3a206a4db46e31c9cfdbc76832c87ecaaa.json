{"ast":null,"code":"import React,{useState}from'react';import{notificationsAPI}from'../api/notifications';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const ContactPage=()=>{const[formData,setFormData]=useState({name:'',email:'',subject:'',message:''});const[submitted,setSubmitted]=useState(false);const handleSubmit=async e=>{e.preventDefault();try{await notificationsAPI.contact(formData);setSubmitted(true);}catch(error){console.error('Failed to send message:',error);}};const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};if(submitted){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Thanks!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"We'll get back to you shortly.\"})]});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Contact Us\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:formData.name,onChange:handleChange,placeholder:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleChange,placeholder:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"subject\",value:formData.subject,onChange:handleChange,placeholder:\"Subject\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"message\",value:formData.message,onChange:handleChange,placeholder:\"Message\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Send\"})]})]});};export default ContactPage;","map":{"version":3,"names":["React","useState","notificationsAPI","jsx","_jsx","jsxs","_jsxs","ContactPage","formData","setFormData","name","email","subject","message","submitted","setSubmitted","handleSubmit","e","preventDefault","contact","error","console","handleChange","target","value","children","onSubmit","type","onChange","placeholder"],"sources":["C:/Users/behna/Desktop/trialssfinder/trialsfinder/src/pages/ContactPage.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { notificationsAPI } from '../api/notifications';\r\n\r\nexport const ContactPage: React.FC = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    subject: '',\r\n    message: ''\r\n  });\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      await notificationsAPI.contact(formData);\r\n      setSubmitted(true);\r\n    } catch (error) {\r\n      console.error('Failed to send message:', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  if (submitted) {\r\n    return (\r\n      <div>\r\n        <h1>Thanks!</h1>\r\n        <p>We'll get back to you shortly.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Contact Us</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          placeholder=\"Name\"\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          placeholder=\"Email\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"subject\"\r\n          value={formData.subject}\r\n          onChange={handleChange}\r\n          placeholder=\"Subject\"\r\n        />\r\n        <textarea\r\n          name=\"message\"\r\n          value={formData.message}\r\n          onChange={handleChange}\r\n          placeholder=\"Message\"\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactPage;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,gBAAgB,KAAQ,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExD,MAAO,MAAM,CAAAC,WAAqB,CAAGA,CAAA,GAAM,CACzC,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,CACvCS,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,EAAE,CACXC,OAAO,CAAE,EACX,CAAC,CAAC,CACF,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGd,QAAQ,CAAC,KAAK,CAAC,CAEjD,KAAM,CAAAe,YAAY,CAAG,KAAO,CAAAC,CAAkB,EAAK,CACjDA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB,GAAI,CACF,KAAM,CAAAhB,gBAAgB,CAACiB,OAAO,CAACX,QAAQ,CAAC,CACxCO,YAAY,CAAC,IAAI,CAAC,CACpB,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CACjD,CACF,CAAC,CAED,KAAM,CAAAE,YAAY,CAAIL,CAA4D,EAAK,CACrFR,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAE,CAACS,CAAC,CAACM,MAAM,CAACb,IAAI,EAAGO,CAAC,CAACM,MAAM,CAACC,KAAM,CAAC,CAAC,CAC/D,CAAC,CAED,GAAIV,SAAS,CAAE,CACb,mBACER,KAAA,QAAAmB,QAAA,eACErB,IAAA,OAAAqB,QAAA,CAAI,SAAO,CAAI,CAAC,cAChBrB,IAAA,MAAAqB,QAAA,CAAG,gCAA8B,CAAG,CAAC,EAClC,CAAC,CAEV,CAEA,mBACEnB,KAAA,QAAAmB,QAAA,eACErB,IAAA,OAAAqB,QAAA,CAAI,YAAU,CAAI,CAAC,cACnBnB,KAAA,SAAMoB,QAAQ,CAAEV,YAAa,CAAAS,QAAA,eAC3BrB,IAAA,UACEuB,IAAI,CAAC,MAAM,CACXjB,IAAI,CAAC,MAAM,CACXc,KAAK,CAAEhB,QAAQ,CAACE,IAAK,CACrBkB,QAAQ,CAAEN,YAAa,CACvBO,WAAW,CAAC,MAAM,CACnB,CAAC,cACFzB,IAAA,UACEuB,IAAI,CAAC,OAAO,CACZjB,IAAI,CAAC,OAAO,CACZc,KAAK,CAAEhB,QAAQ,CAACG,KAAM,CACtBiB,QAAQ,CAAEN,YAAa,CACvBO,WAAW,CAAC,OAAO,CACpB,CAAC,cACFzB,IAAA,UACEuB,IAAI,CAAC,MAAM,CACXjB,IAAI,CAAC,SAAS,CACdc,KAAK,CAAEhB,QAAQ,CAACI,OAAQ,CACxBgB,QAAQ,CAAEN,YAAa,CACvBO,WAAW,CAAC,SAAS,CACtB,CAAC,cACFzB,IAAA,aACEM,IAAI,CAAC,SAAS,CACdc,KAAK,CAAEhB,QAAQ,CAACK,OAAQ,CACxBe,QAAQ,CAAEN,YAAa,CACvBO,WAAW,CAAC,SAAS,CACtB,CAAC,cACFzB,IAAA,WAAQuB,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,MAAI,CAAQ,CAAC,EAC/B,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAlB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}