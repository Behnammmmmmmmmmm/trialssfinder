{"ast":null,"code":"import axios from'axios';import{apiCache,setupCacheInterceptor}from'./apiCache';// Use proxy for development, direct path for production\nconst API_BASE_URL=process.env.NODE_ENV==='development'?'/api'// This will use the proxy defined in webpack.config.js\n:'/api';const api=axios.create({baseURL:API_BASE_URL,headers:{common:{'Content-Type':'application/json'}},withCredentials:true,// Important for CSRF\ntimeout:30000// 30 second timeout\n});// Get CSRF token from cookie\nfunction getCookie(name){let cookieValue=null;if(document.cookie&&document.cookie!==''){const cookies=document.cookie.split(';');for(let i=0;i<cookies.length;i++){const cookie=cookies[i].trim();if(cookie.substring(0,name.length+1)===name+'='){cookieValue=decodeURIComponent(cookie.substring(name.length+1));break;}}}return cookieValue;}// Setup cache interceptor\nsetupCacheInterceptor(api);// Request interceptor\napi.interceptors.request.use(config=>{// Add auth token\nconst token=localStorage.getItem('access_token');if(token){config.headers['Authorization']=`Bearer ${token}`;}// Add CSRF token for non-GET requests\nif(config.method!=='get'){const csrfToken=getCookie('csrftoken');if(csrfToken){config.headers['X-CSRFToken']=csrfToken;}}// Add security headers\nconfig.headers['X-Requested-With']='XMLHttpRequest';return config;});// Response interceptor\napi.interceptors.response.use(response=>response,async error=>{const originalRequest=error.config;// Handle network errors\nif(!error.response){// Backend is not available\nif(process.env.NODE_ENV==='development'){console.warn('Backend server is not running. Returning mock data.');// Return mock data based on the endpoint\nif(originalRequest.url.includes('trials')){return{data:{results:[],count:0,next:null,previous:null}};}if(originalRequest.url.includes('auth/me')){return Promise.reject(new Error('Not authenticated'));}}return Promise.reject(error);}// Handle 401 errors\nif(error.response.status===401&&!originalRequest._retry){originalRequest._retry=true;try{const refreshToken=localStorage.getItem('refresh_token');if(!refreshToken)throw new Error('No refresh token');const response=await axios.post(`${API_BASE_URL}/auth/refresh/`,{refresh:refreshToken});localStorage.setItem('access_token',response.data.access);api.defaults.headers.common['Authorization']=`Bearer ${response.data.access}`;return api(originalRequest);}catch(refreshError){// Clear cache on logout\napiCache.invalidate('');localStorage.clear();// Only redirect in production\nif(process.env.NODE_ENV==='production'){window.location.href='/login';}return Promise.reject(error);}}return Promise.reject(error);});// Cache invalidation helpers\nexport const invalidateUserCache=userId=>{apiCache.invalidateUser(userId);};export const invalidateTrialCache=trialId=>{apiCache.invalidateTrial(trialId);};export default api;","map":{"version":3,"names":["axios","apiCache","setupCacheInterceptor","API_BASE_URL","process","env","NODE_ENV","api","create","baseURL","headers","common","withCredentials","timeout","getCookie","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","interceptors","request","use","config","token","localStorage","getItem","method","csrfToken","response","error","originalRequest","console","warn","url","includes","data","results","count","next","previous","Promise","reject","Error","status","_retry","refreshToken","post","refresh","setItem","access","defaults","refreshError","invalidate","clear","window","location","href","invalidateUserCache","userId","invalidateUser","invalidateTrialCache","trialId","invalidateTrial"],"sources":["C:/Users/behna/Desktop/trialssfinder/trialsfinder/src/utils/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { apiCache, setupCacheInterceptor } from './apiCache';\r\n\r\n// Use proxy for development, direct path for production\r\nconst API_BASE_URL = process.env.NODE_ENV === 'development' \r\n  ? '/api' // This will use the proxy defined in webpack.config.js\r\n  : '/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    common: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  },\r\n  withCredentials: true, // Important for CSRF\r\n  timeout: 30000, // 30 second timeout\r\n});\r\n\r\n// Get CSRF token from cookie\r\nfunction getCookie(name: string): string | null {\r\n  let cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n    const cookies = document.cookie.split(';');\r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i].trim();\r\n      if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n        cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\n// Setup cache interceptor\r\nsetupCacheInterceptor(api);\r\n\r\n// Request interceptor\r\napi.interceptors.request.use((config) => {\r\n  // Add auth token\r\n  const token = localStorage.getItem('access_token');\r\n  if (token) {\r\n    config.headers['Authorization'] = `Bearer ${token}`;\r\n  }\r\n\r\n  // Add CSRF token for non-GET requests\r\n  if (config.method !== 'get') {\r\n    const csrfToken = getCookie('csrftoken');\r\n    if (csrfToken) {\r\n      config.headers['X-CSRFToken'] = csrfToken;\r\n    }\r\n  }\r\n\r\n  // Add security headers\r\n  config.headers['X-Requested-With'] = 'XMLHttpRequest';\r\n\r\n  return config;\r\n});\r\n\r\n// Response interceptor\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  async (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    // Handle network errors\r\n    if (!error.response) {\r\n      // Backend is not available\r\n      if (process.env.NODE_ENV === 'development') {\r\n        console.warn('Backend server is not running. Returning mock data.');\r\n        // Return mock data based on the endpoint\r\n        if (originalRequest.url.includes('trials')) {\r\n          return { data: { results: [], count: 0, next: null, previous: null } };\r\n        }\r\n        if (originalRequest.url.includes('auth/me')) {\r\n          return Promise.reject(new Error('Not authenticated'));\r\n        }\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    // Handle 401 errors\r\n    if (error.response.status === 401 && !originalRequest._retry) {\r\n      originalRequest._retry = true;\r\n      \r\n      try {\r\n        const refreshToken = localStorage.getItem('refresh_token');\r\n        if (!refreshToken) throw new Error('No refresh token');\r\n        \r\n        const response = await axios.post(`${API_BASE_URL}/auth/refresh/`, {\r\n          refresh: refreshToken\r\n        });\r\n        \r\n        localStorage.setItem('access_token', response.data.access);\r\n        api.defaults.headers.common['Authorization'] = `Bearer ${response.data.access}`;\r\n        \r\n        return api(originalRequest);\r\n      } catch (refreshError) {\r\n        // Clear cache on logout\r\n        apiCache.invalidate('');\r\n        localStorage.clear();\r\n        \r\n        // Only redirect in production\r\n        if (process.env.NODE_ENV === 'production') {\r\n          window.location.href = '/login';\r\n        }\r\n        \r\n        return Promise.reject(error);\r\n      }\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Cache invalidation helpers\r\nexport const invalidateUserCache = (userId: number) => {\r\n  apiCache.invalidateUser(userId);\r\n};\r\n\r\nexport const invalidateTrialCache = (trialId: number) => {\r\n  apiCache.invalidateTrial(trialId);\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}