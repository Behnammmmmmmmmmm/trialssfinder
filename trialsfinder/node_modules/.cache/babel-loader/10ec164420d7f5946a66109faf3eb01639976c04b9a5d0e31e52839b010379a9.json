{"ast":null,"code":"import{useStore as useZustandStore}from'../store';// Selectors with manual shallow comparison\nexport const useAuth=()=>{const user=useZustandStore(state=>state.user);const loading=useZustandStore(state=>state.loading);const mockMode=useZustandStore(state=>state.mockMode);const login=useZustandStore(state=>state.login);const register=useZustandStore(state=>state.register);const logout=useZustandStore(state=>state.logout);const loadUser=useZustandStore(state=>state.loadUser);return{user,loading,mockMode,login,register,logout,loadUser};};export const useTrials=()=>{const trials=useZustandStore(state=>state.trials);const favoriteTrials=useZustandStore(state=>state.favoriteTrials);const loadingTrials=useZustandStore(state=>state.loadingTrials);const toggleFavorite=useZustandStore(state=>state.toggleFavorite);const fetchTrials=useZustandStore(state=>state.fetchTrials);return{trials,favoriteTrials,loadingTrials,toggleFavorite,fetchTrials};};export const useNotifications=()=>{const notifications=useZustandStore(state=>state.notifications);const unreadCount=useZustandStore(state=>state.unreadCount);const fetchNotifications=useZustandStore(state=>state.fetchNotifications);const markAsRead=useZustandStore(state=>state.markAsRead);return{notifications,unreadCount,fetchNotifications,markAsRead};};export const useUI=()=>{const sidebarOpen=useZustandStore(state=>state.sidebarOpen);const theme=useZustandStore(state=>state.theme);const loadingStates=useZustandStore(state=>state.loadingStates);const toggleSidebar=useZustandStore(state=>state.toggleSidebar);const setTheme=useZustandStore(state=>state.setTheme);const setLoadingState=useZustandStore(state=>state.setLoadingState);return{sidebarOpen,theme,loadingStates,toggleSidebar,setTheme,setLoading:setLoadingState};};","map":{"version":3,"names":["useStore","useZustandStore","useAuth","user","state","loading","mockMode","login","register","logout","loadUser","useTrials","trials","favoriteTrials","loadingTrials","toggleFavorite","fetchTrials","useNotifications","notifications","unreadCount","fetchNotifications","markAsRead","useUI","sidebarOpen","theme","loadingStates","toggleSidebar","setTheme","setLoadingState","setLoading"],"sources":["C:/Users/behna/Desktop/trialssfinder/trialsfinder/src/hooks/useStore.ts"],"sourcesContent":["import { useStore as useZustandStore } from '../store';\n\n// Selectors with manual shallow comparison\nexport const useAuth = () => {\n  const user = useZustandStore((state) => state.user);\n  const loading = useZustandStore((state) => state.loading);\n  const mockMode = useZustandStore((state) => state.mockMode);\n  const login = useZustandStore((state) => state.login);\n  const register = useZustandStore((state) => state.register);\n  const logout = useZustandStore((state) => state.logout);\n  const loadUser = useZustandStore((state) => state.loadUser);\n  \n  return { user, loading, mockMode, login, register, logout, loadUser };\n};\n\nexport const useTrials = () => {\n  const trials = useZustandStore((state) => state.trials);\n  const favoriteTrials = useZustandStore((state) => state.favoriteTrials);\n  const loadingTrials = useZustandStore((state) => state.loadingTrials);\n  const toggleFavorite = useZustandStore((state) => state.toggleFavorite);\n  const fetchTrials = useZustandStore((state) => state.fetchTrials);\n  \n  return { trials, favoriteTrials, loadingTrials, toggleFavorite, fetchTrials };\n};\n\nexport const useNotifications = () => {\n  const notifications = useZustandStore((state) => state.notifications);\n  const unreadCount = useZustandStore((state) => state.unreadCount);\n  const fetchNotifications = useZustandStore((state) => state.fetchNotifications);\n  const markAsRead = useZustandStore((state) => state.markAsRead);\n  \n  return { notifications, unreadCount, fetchNotifications, markAsRead };\n};\n\nexport const useUI = () => {\n  const sidebarOpen = useZustandStore((state) => state.sidebarOpen);\n  const theme = useZustandStore((state) => state.theme);\n  const loadingStates = useZustandStore((state) => state.loadingStates);\n  const toggleSidebar = useZustandStore((state) => state.toggleSidebar);\n  const setTheme = useZustandStore((state) => state.setTheme);\n  const setLoadingState = useZustandStore((state) => state.setLoadingState);\n  \n  return { sidebarOpen, theme, loadingStates, toggleSidebar, setTheme, setLoading: setLoadingState };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}