{"ast":null,"code":"import axios from 'axios';\nexport class TrialsFinderError extends Error {\n  constructor(message) {\n    let code = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'unknown_error';\n    let details = arguments.length > 2 ? arguments[2] : undefined;\n    super(message);\n    this.name = 'TrialsFinderError';\n    this.code = code;\n    this.details = details;\n  }\n}\nexport const parseError = error => {\n  if (axios.isAxiosError(error)) {\n    const axiosError = error;\n    if (axiosError.response?.data?.error) {\n      const apiError = axiosError.response.data.error;\n      return new TrialsFinderError(apiError.message, apiError.code, apiError.details);\n    }\n    if (axiosError.code === 'ECONNABORTED') {\n      return new TrialsFinderError('Request timeout', 'timeout_error');\n    }\n    if (axiosError.code === 'ERR_NETWORK') {\n      return new TrialsFinderError('Network error', 'network_error');\n    }\n    if (!axiosError.response) {\n      return new TrialsFinderError('Network error', 'network_error');\n    }\n    return new TrialsFinderError(axiosError.message || 'Request failed', 'request_error');\n  }\n  if (error instanceof TrialsFinderError) {\n    return error;\n  }\n  if (error instanceof Error) {\n    return new TrialsFinderError(error.message, 'client_error');\n  }\n  return new TrialsFinderError('An unexpected error occurred', 'unknown_error');\n};\nexport const getErrorMessage = error => {\n  const parsedError = parseError(error);\n  const errorMessages = {\n    'network_error': 'Unable to connect to the server. Please check your internet connection.',\n    'timeout_error': 'Request took too long. Please try again.',\n    'authentication_error': 'Please log in to continue.',\n    'permission_error': 'You don\\'t have permission to perform this action.',\n    'validation_error': 'Please check your input and try again.',\n    'not_found': 'The requested resource was not found.',\n    'internal_error': 'Something went wrong on our end. Please try again later.'\n  };\n  return errorMessages[parsedError.code] || parsedError.message;\n};\n\n// Global error handler\nexport const handleError = (error, context) => {\n  const parsedError = parseError(error);\n\n  // Log to monitoring service\n  if (window.logger) {\n    window.logger.error('Application error', {\n      error: parsedError,\n      context,\n      user: window.currentUser?.username || 'anonymous',\n      url: window.location.href\n    });\n  }\n\n  // Log to console in development\n  if (process.env.NODE_ENV === 'development') {\n    console.error(`[${context || 'Application'}] Error:`, parsedError);\n  }\n};\n\n// Setup global error handlers\nexport const setupGlobalErrorHandlers = () => {\n  window.addEventListener('unhandledrejection', event => {\n    handleError(event.reason, 'Unhandled Promise Rejection');\n    event.preventDefault();\n  });\n  window.addEventListener('error', event => {\n    handleError(event.error, 'Global Error');\n    event.preventDefault();\n  });\n};","map":{"version":3,"names":["axios","TrialsFinderError","Error","constructor","message","code","arguments","length","undefined","details","name","parseError","error","isAxiosError","axiosError","response","data","apiError","getErrorMessage","parsedError","errorMessages","handleError","context","window","logger","user","currentUser","username","url","location","href","process","env","NODE_ENV","console","setupGlobalErrorHandlers","addEventListener","event","reason","preventDefault"],"sources":["C:/Users/behna/Desktop/trialssfinder/trialsfinder/src/utils/errors.ts"],"sourcesContent":["import axios, { AxiosError } from 'axios';\r\n\r\nexport interface ApiError {\r\n  code: string;\r\n  message: string;\r\n  details?: Record<string, any>;\r\n  request_id?: string;\r\n}\r\n\r\nexport interface ErrorResponse {\r\n  error: ApiError;\r\n}\r\n\r\nexport class TrialsFinderError extends Error {\r\n  code: string;\r\n  details?: Record<string, any>;\r\n  request_id?: string;\r\n\r\n  constructor(message: string, code: string = 'unknown_error', details?: Record<string, any>) {\r\n    super(message);\r\n    this.name = 'TrialsFinderError';\r\n    this.code = code;\r\n    this.details = details;\r\n  }\r\n}\r\n\r\nexport const parseError = (error: unknown): TrialsFinderError => {\r\n  if (axios.isAxiosError(error)) {\r\n    const axiosError = error as AxiosError<ErrorResponse>;\r\n    \r\n    if (axiosError.response?.data?.error) {\r\n      const apiError = axiosError.response.data.error;\r\n      return new TrialsFinderError(\r\n        apiError.message,\r\n        apiError.code,\r\n        apiError.details\r\n      );\r\n    }\r\n    \r\n    if (axiosError.code === 'ECONNABORTED') {\r\n      return new TrialsFinderError('Request timeout', 'timeout_error');\r\n    }\r\n    \r\n    if (axiosError.code === 'ERR_NETWORK') {\r\n      return new TrialsFinderError('Network error', 'network_error');\r\n    }\r\n    \r\n    if (!axiosError.response) {\r\n      return new TrialsFinderError('Network error', 'network_error');\r\n    }\r\n    \r\n    return new TrialsFinderError(\r\n      axiosError.message || 'Request failed',\r\n      'request_error'\r\n    );\r\n  }\r\n  \r\n  if (error instanceof TrialsFinderError) {\r\n    return error;\r\n  }\r\n  \r\n  if (error instanceof Error) {\r\n    return new TrialsFinderError(error.message, 'client_error');\r\n  }\r\n  \r\n  return new TrialsFinderError('An unexpected error occurred', 'unknown_error');\r\n};\r\n\r\nexport const getErrorMessage = (error: unknown): string => {\r\n  const parsedError = parseError(error);\r\n  \r\n  const errorMessages: Record<string, string> = {\r\n    'network_error': 'Unable to connect to the server. Please check your internet connection.',\r\n    'timeout_error': 'Request took too long. Please try again.',\r\n    'authentication_error': 'Please log in to continue.',\r\n    'permission_error': 'You don\\'t have permission to perform this action.',\r\n    'validation_error': 'Please check your input and try again.',\r\n    'not_found': 'The requested resource was not found.',\r\n    'internal_error': 'Something went wrong on our end. Please try again later.',\r\n  };\r\n  \r\n  return errorMessages[parsedError.code] || parsedError.message;\r\n};\r\n\r\n// Global error handler\r\nexport const handleError = (error: unknown, context?: string): void => {\r\n  const parsedError = parseError(error);\r\n  \r\n  // Log to monitoring service\r\n  if (window.logger) {\r\n    window.logger.error('Application error', {\r\n      error: parsedError,\r\n      context,\r\n      user: window.currentUser?.username || 'anonymous',\r\n      url: window.location.href,\r\n    });\r\n  }\r\n  \r\n  // Log to console in development\r\n  if (process.env.NODE_ENV === 'development') {\r\n    console.error(`[${context || 'Application'}] Error:`, parsedError);\r\n  }\r\n};\r\n\r\n// Setup global error handlers\r\nexport const setupGlobalErrorHandlers = (): void => {\r\n  window.addEventListener('unhandledrejection', (event) => {\r\n    handleError(event.reason, 'Unhandled Promise Rejection');\r\n    event.preventDefault();\r\n  });\r\n\r\n  window.addEventListener('error', (event) => {\r\n    handleError(event.error, 'Global Error');\r\n    event.preventDefault();\r\n  });\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}