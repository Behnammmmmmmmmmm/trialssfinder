{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\behna\\\\Desktop\\\\trialssfinder\\\\trialsfinder\\\\src\\\\components\\\\LanguageSelector.tsx\";\nimport React from 'react';\nimport { SUPPORTED_LANGUAGES } from '../i18n/config';\nimport { useTranslation } from '../i18n';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LanguageSelector = () => {\n  const {\n    i18n\n  } = useTranslation();\n  const handleChange = async e => {\n    const lang = e.target.value;\n    await i18n.changeLanguage(lang);\n\n    // Update HTML dir attribute\n    document.documentElement.dir = SUPPORTED_LANGUAGES[lang].dir;\n\n    // Update lang attribute\n    document.documentElement.lang = lang;\n\n    // Update backend language preference\n    const accessToken = localStorage.getItem('access_token');\n    if (accessToken) {\n      void fetch('/api/auth/language/', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${accessToken}`\n        },\n        body: JSON.stringify({\n          language: lang\n        })\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"language-select\",\n      className: \"sr-only\",\n      children: \"Choose language\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"language-select\",\n      value: i18n.language,\n      onChange: handleChange,\n      className: \"form-select\",\n      \"aria-label\": \"Select language\",\n      children: Object.entries(SUPPORTED_LANGUAGES).map(_ref => {\n        let [code, {\n          name\n        }] = _ref;\n        return /*#__PURE__*/_jsxDEV(\"option\", {\n          value: code,\n          children: name\n        }, code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["React","SUPPORTED_LANGUAGES","useTranslation","jsxDEV","_jsxDEV","LanguageSelector","i18n","handleChange","e","lang","target","value","changeLanguage","document","documentElement","dir","accessToken","localStorage","getItem","fetch","method","headers","body","JSON","stringify","language","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","Object","entries","map","_ref","code","name"],"sources":["C:/Users/behna/Desktop/trialssfinder/trialsfinder/src/components/LanguageSelector.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nimport { SUPPORTED_LANGUAGES } from '../i18n/config';\r\nimport { useTranslation } from '../i18n';\r\n\r\nexport const LanguageSelector: React.FC = () => {\r\n  const { i18n } = useTranslation();\r\n  \r\n  const handleChange = async (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const lang = e.target.value;\r\n    await i18n.changeLanguage(lang);\r\n    \r\n    // Update HTML dir attribute\r\n    document.documentElement.dir = SUPPORTED_LANGUAGES[lang as keyof typeof SUPPORTED_LANGUAGES].dir;\r\n    \r\n    // Update lang attribute\r\n    document.documentElement.lang = lang;\r\n    \r\n    // Update backend language preference\r\n    const accessToken = localStorage.getItem('access_token');\r\n    if (accessToken) {\r\n      void fetch('/api/auth/language/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${accessToken}`,\r\n        },\r\n        body: JSON.stringify({ language: lang }),\r\n      });\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"language-selector\">\r\n      <label htmlFor=\"language-select\" className=\"sr-only\">\r\n        Choose language\r\n      </label>\r\n      <select \r\n        id=\"language-select\"\r\n        value={i18n.language} \r\n        onChange={handleChange}\r\n        className=\"form-select\"\r\n        aria-label=\"Select language\"\r\n      >\r\n        {(Object.entries(SUPPORTED_LANGUAGES) as [string, { name: string; dir: string }][]).map(([code, { name }]) => (\r\n          <option key={code} value={code}>{name}</option>\r\n        ))}\r\n      </select>\r\n    </div>\r\n  );\r\n};"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,mBAAmB,QAAQ,gBAAgB;AACpD,SAASC,cAAc,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,OAAO,MAAMC,gBAA0B,GAAGA,CAAA,KAAM;EAC9C,MAAM;IAAEC;EAAK,CAAC,GAAGJ,cAAc,CAAC,CAAC;EAEjC,MAAMK,YAAY,GAAG,MAAOC,CAAuC,IAAK;IACtE,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC3B,MAAML,IAAI,CAACM,cAAc,CAACH,IAAI,CAAC;;IAE/B;IACAI,QAAQ,CAACC,eAAe,CAACC,GAAG,GAAGd,mBAAmB,CAACQ,IAAI,CAAqC,CAACM,GAAG;;IAEhG;IACAF,QAAQ,CAACC,eAAe,CAACL,IAAI,GAAGA,IAAI;;IAEpC;IACA,MAAMO,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACxD,IAAIF,WAAW,EAAE;MACf,KAAKG,KAAK,CAAC,qBAAqB,EAAE;QAChCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUL,WAAW;QACxC,CAAC;QACDM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,QAAQ,EAAEhB;QAAK,CAAC;MACzC,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEL,OAAA;IAAKsB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCvB,OAAA;MAAOwB,OAAO,EAAC,iBAAiB;MAACF,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAErD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACR5B,OAAA;MACE6B,EAAE,EAAC,iBAAiB;MACpBtB,KAAK,EAAEL,IAAI,CAACmB,QAAS;MACrBS,QAAQ,EAAE3B,YAAa;MACvBmB,SAAS,EAAC,aAAa;MACvB,cAAW,iBAAiB;MAAAC,QAAA,EAE1BQ,MAAM,CAACC,OAAO,CAACnC,mBAAmB,CAAC,CAA+CoC,GAAG,CAACC,IAAA;QAAA,IAAC,CAACC,IAAI,EAAE;UAAEC;QAAK,CAAC,CAAC,GAAAF,IAAA;QAAA,oBACvGlC,OAAA;UAAmBO,KAAK,EAAE4B,IAAK;UAAAZ,QAAA,EAAEa;QAAI,GAAxBD,IAAI;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6B,CAAC;MAAA,CAChD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}