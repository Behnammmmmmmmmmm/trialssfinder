{"ast":null,"code":"import React,{createContext,useContext,useReducer}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const initialState={user:null,trials:[],notifications:[],loading:{},errors:{}};function appReducer(state,action){switch(action.type){case'SET_USER':return{...state,user:action.payload};case'SET_TRIALS':return{...state,trials:action.payload};case'ADD_TRIAL':return{...state,trials:[...state.trials,action.payload]};case'UPDATE_TRIAL':return{...state,trials:state.trials.map(trial=>trial.id===action.payload.id?{...trial,...action.payload.trial}:trial)};case'SET_NOTIFICATIONS':return{...state,notifications:action.payload};case'MARK_NOTIFICATION_READ':return{...state,notifications:state.notifications.map(notif=>notif.id===action.payload?{...notif,is_read:true}:notif)};case'SET_LOADING':return{...state,loading:{...state.loading,[action.payload.key]:action.payload.value}};case'SET_ERROR':return{...state,errors:action.payload.error?{...state.errors,[action.payload.key]:action.payload.error}:Object.fromEntries(Object.entries(state.errors).filter(_ref=>{let[key]=_ref;return key!==action.payload.key;}))};case'CLEAR_ERRORS':return{...state,errors:{}};default:return state;}}const AppContext=/*#__PURE__*/createContext(null);export const AppProvider=_ref2=>{let{children}=_ref2;const[state,dispatch]=useReducer(appReducer,initialState);return/*#__PURE__*/_jsx(AppContext.Provider,{value:{state,dispatch},children:children});};export function useAppContext(){const context=useContext(AppContext);if(!context){throw new Error('useAppContext must be used within AppProvider');}return context;}// Selector hooks\nexport function useUser(){const{state}=useAppContext();return state.user;}export function useTrials(){const{state,dispatch}=useAppContext();return{trials:state.trials,setTrials:trials=>dispatch({type:'SET_TRIALS',payload:trials}),addTrial:trial=>dispatch({type:'ADD_TRIAL',payload:trial}),updateTrial:(id,trial)=>dispatch({type:'UPDATE_TRIAL',payload:{id,trial}})};}export function useLoading(key){const{state,dispatch}=useAppContext();return{isLoading:state.loading[key]||false,setLoading:value=>dispatch({type:'SET_LOADING',payload:{key,value}})};}export function useError(key){const{state,dispatch}=useAppContext();return{error:state.errors[key]||null,setError:error=>dispatch({type:'SET_ERROR',payload:{key,error}})};}export default AppProvider;","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsx","_jsx","initialState","user","trials","notifications","loading","errors","appReducer","state","action","type","payload","map","trial","id","notif","is_read","key","value","error","Object","fromEntries","entries","filter","_ref","AppContext","AppProvider","_ref2","children","dispatch","Provider","useAppContext","context","Error","useUser","useTrials","setTrials","addTrial","updateTrial","useLoading","isLoading","setLoading","useError","setError"],"sources":["C:/Users/behna/Desktop/trialssfinder/trialsfinder/src/context/AppContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from 'react';\r\nimport { User, Trial, Notification } from '../types';\r\n\r\ninterface AppState {\r\n  user: User | null;\r\n  trials: Trial[];\r\n  notifications: Notification[];\r\n  loading: Record<string, boolean>;\r\n  errors: Record<string, string>;\r\n}\r\n\r\ntype AppAction =\r\n  | { type: 'SET_USER'; payload: User | null }\r\n  | { type: 'SET_TRIALS'; payload: Trial[] }\r\n  | { type: 'ADD_TRIAL'; payload: Trial }\r\n  | { type: 'UPDATE_TRIAL'; payload: { id: number; trial: Partial<Trial> } }\r\n  | { type: 'SET_NOTIFICATIONS'; payload: Notification[] }\r\n  | { type: 'MARK_NOTIFICATION_READ'; payload: number }\r\n  | { type: 'SET_LOADING'; payload: { key: string; value: boolean } }\r\n  | { type: 'SET_ERROR'; payload: { key: string; error: string | null } }\r\n  | { type: 'CLEAR_ERRORS' };\r\n\r\nconst initialState: AppState = {\r\n  user: null,\r\n  trials: [],\r\n  notifications: [],\r\n  loading: {},\r\n  errors: {}\r\n};\r\n\r\nfunction appReducer(state: AppState, action: AppAction): AppState {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, user: action.payload };\r\n    \r\n    case 'SET_TRIALS':\r\n      return { ...state, trials: action.payload };\r\n    \r\n    case 'ADD_TRIAL':\r\n      return { ...state, trials: [...state.trials, action.payload] };\r\n    \r\n    case 'UPDATE_TRIAL':\r\n      return {\r\n        ...state,\r\n        trials: state.trials.map(trial =>\r\n          trial.id === action.payload.id\r\n            ? { ...trial, ...action.payload.trial }\r\n            : trial\r\n        )\r\n      };\r\n    \r\n    case 'SET_NOTIFICATIONS':\r\n      return { ...state, notifications: action.payload };\r\n    \r\n    case 'MARK_NOTIFICATION_READ':\r\n      return {\r\n        ...state,\r\n        notifications: state.notifications.map(notif =>\r\n          notif.id === action.payload\r\n            ? { ...notif, is_read: true }\r\n            : notif\r\n        )\r\n      };\r\n    \r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        loading: {\r\n          ...state.loading,\r\n          [action.payload.key]: action.payload.value\r\n        }\r\n      };\r\n    \r\n    case 'SET_ERROR':\r\n      return {\r\n        ...state,\r\n        errors: action.payload.error\r\n          ? { ...state.errors, [action.payload.key]: action.payload.error }\r\n          : Object.fromEntries(\r\n              Object.entries(state.errors).filter(([key]) => key !== action.payload.key)\r\n            )\r\n      };\r\n    \r\n    case 'CLEAR_ERRORS':\r\n      return { ...state, errors: {} };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst AppContext = createContext<{\r\n  state: AppState;\r\n  dispatch: React.Dispatch<AppAction>;\r\n} | null>(null);\r\n\r\nexport const AppProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\r\n  const [state, dispatch] = useReducer(appReducer, initialState);\r\n\r\n  return (\r\n    <AppContext.Provider value={{ state, dispatch }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport function useAppContext() {\r\n  const context = useContext(AppContext);\r\n  if (!context) {\r\n    throw new Error('useAppContext must be used within AppProvider');\r\n  }\r\n  return context;\r\n}\r\n\r\n// Selector hooks\r\nexport function useUser() {\r\n  const { state } = useAppContext();\r\n  return state.user;\r\n}\r\n\r\nexport function useTrials() {\r\n  const { state, dispatch } = useAppContext();\r\n  return {\r\n    trials: state.trials,\r\n    setTrials: (trials: Trial[]) => dispatch({ type: 'SET_TRIALS', payload: trials }),\r\n    addTrial: (trial: Trial) => dispatch({ type: 'ADD_TRIAL', payload: trial }),\r\n    updateTrial: (id: number, trial: Partial<Trial>) => \r\n      dispatch({ type: 'UPDATE_TRIAL', payload: { id, trial } })\r\n  };\r\n}\r\n\r\nexport function useLoading(key: string) {\r\n  const { state, dispatch } = useAppContext();\r\n  return {\r\n    isLoading: state.loading[key] || false,\r\n    setLoading: (value: boolean) => \r\n      dispatch({ type: 'SET_LOADING', payload: { key, value } })\r\n  };\r\n}\r\n\r\nexport function useError(key: string) {\r\n  const { state, dispatch } = useAppContext();\r\n  return {\r\n    error: state.errors[key] || null,\r\n    setError: (error: string | null) => \r\n      dispatch({ type: 'SET_ERROR', payload: { key, error } })\r\n  };\r\n}\r\n\r\nexport default AppProvider;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}