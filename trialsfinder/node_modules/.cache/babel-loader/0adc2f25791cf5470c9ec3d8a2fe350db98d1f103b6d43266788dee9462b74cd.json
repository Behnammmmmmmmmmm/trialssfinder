{"ast":null,"code":"import{notificationsAPI}from'../../api/notifications';export const createNotificationSlice=(set,get)=>({notifications:[],unreadCount:0,fetchNotifications:async()=>{try{const response=await notificationsAPI.list();const notifications=response.data;const unreadCount=notifications.filter(n=>!n.is_read).length;set({notifications,unreadCount});}catch(error){console.error('Failed to fetch notifications:',error);}},markAsRead:async id=>{// Optimistic update\nconst currentNotifications=get().notifications;const currentUnreadCount=get().unreadCount;const updatedNotifications=currentNotifications.map(n=>n.id===id?{...n,is_read:true}:n);const updatedUnreadCount=Math.max(0,currentUnreadCount-1);set({notifications:updatedNotifications,unreadCount:updatedUnreadCount});try{await notificationsAPI.markRead(id);}catch(error){// Revert on error\nset({notifications:currentNotifications,unreadCount:currentUnreadCount});throw error;}}});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}