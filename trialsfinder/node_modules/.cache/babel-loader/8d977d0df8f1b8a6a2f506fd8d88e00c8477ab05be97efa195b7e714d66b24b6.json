{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useParams,useNavigate}from'react-router-dom';import{subscriptionsAPI}from'../api/subscriptions';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const SubscriptionPage=()=>{const{trialId}=useParams();const navigate=useNavigate();const[paymentMethods,setPaymentMethods]=useState([]);const[subscriptions,setSubscriptions]=useState([]);const[invoices,setInvoices]=useState([]);const[address,setAddress]=useState('');const[newMethod,setNewMethod]=useState({method_type:'credit_card',last_four:'',is_default:false});useEffect(()=>{loadData();},[]);const loadData=async()=>{try{const methodsRes=await subscriptionsAPI.getPaymentMethods();setPaymentMethods(methodsRes.data);const subsRes=await subscriptionsAPI.getSubscriptions();setSubscriptions(subsRes.data);const invoicesRes=await subscriptionsAPI.getInvoices();setInvoices(invoicesRes.data);}catch(error){console.error('Failed to load subscription data:',error);}};const handleAddPaymentMethod=async()=>{try{await subscriptionsAPI.addPaymentMethod(newMethod);loadData();setNewMethod({method_type:'credit_card',last_four:'',is_default:false});}catch(error){console.error('Failed to add payment method:',error);}};const handleDeleteMethod=async id=>{try{await subscriptionsAPI.deletePaymentMethod(id);loadData();}catch(error){console.error('Failed to delete payment method:',error);}};const handleSetDefault=async id=>{try{await subscriptionsAPI.setDefaultPaymentMethod(id);loadData();}catch(error){console.error('Failed to set default payment method:',error);}};const handleUpdateAddress=async()=>{try{await subscriptionsAPI.updateAddress(address);alert('Address updated');}catch(error){console.error('Failed to update address:',error);}};const handlePayment=async methodId=>{if(!trialId){return;}try{await subscriptionsAPI.createSubscription({trial_id:parseInt(trialId),payment_method_id:methodId});navigate('/payment-success');}catch(error){console.error('Payment failed:',error);}};if(trialId){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Payment for Trial\"}),/*#__PURE__*/_jsx(\"h3\",{children:\"Select Payment Method\"}),paymentMethods.map(method=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"span\",{children:[method.method_type,\" ending in \",method.last_four]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handlePayment(method.id),children:\"Pay with this method\"})]},method.id))]});}return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Subscription Management\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Your Subscriptions\"}),subscriptions.map(sub=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:sub.trial_name}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Amount: $\",sub.amount]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Status: \",sub.status]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Date: \",sub.created_at]})]},sub.id)),/*#__PURE__*/_jsx(\"h2\",{children:\"Address\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:address,onChange:e=>setAddress(e.target.value),placeholder:\"Address\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleUpdateAddress,children:\"Update Address\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Payment Methods\"}),paymentMethods.map(method=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"span\",{children:[method.method_type,\" ending in \",method.last_four]}),method.is_default&&/*#__PURE__*/_jsx(\"span\",{children:\" (Default)\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleSetDefault(method.id),children:\"Make Default\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDeleteMethod(method.id),children:\"Remove\"})]},method.id)),/*#__PURE__*/_jsx(\"h3\",{children:\"Add Payment Method\"}),/*#__PURE__*/_jsxs(\"select\",{value:newMethod.method_type,onChange:e=>setNewMethod({...newMethod,method_type:e.target.value}),children:[/*#__PURE__*/_jsx(\"option\",{value:\"credit_card\",children:\"Credit Card\"}),/*#__PURE__*/_jsx(\"option\",{value:\"paypal\",children:\"PayPal\"})]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newMethod.last_four,onChange:e=>setNewMethod({...newMethod,last_four:e.target.value}),placeholder:\"Last 4 digits\",maxLength:4}),/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:newMethod.is_default,onChange:e=>setNewMethod({...newMethod,is_default:e.target.checked})}),\"Set as default\"]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddPaymentMethod,children:\"Add\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Invoices\"}),invoices.map(invoice=>/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"Amount: $\",invoice.amount]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Date: \",invoice.created_at]})]},invoice.id))]});};export default SubscriptionPage;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}