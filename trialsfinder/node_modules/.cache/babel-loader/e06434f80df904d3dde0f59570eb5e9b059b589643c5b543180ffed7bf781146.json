{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useNavigate}from'react-router-dom';import{trialsAPI}from'../api/trials';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const CreateTrialPage=()=>{const navigate=useNavigate();const[industries,setIndustries]=useState([]);const[formData,setFormData]=useState({title:'',description:'',industry:'',location:'',start_date:'',end_date:''});useEffect(()=>{loadIndustries();},[]);const loadIndustries=async()=>{try{const response=await trialsAPI.getIndustries();setIndustries(response.data);}catch(error){console.error('Failed to load industries:',error);}};const handleSubmit=async e=>{e.preventDefault();try{const response=await trialsAPI.create(formData);navigate(`/payment/${response.data.id}`);}catch(error){console.error('Failed to create trial:',error);}};const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Create Trial\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"title\",value:formData.title,onChange:handleChange,placeholder:\"Title\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"description\",value:formData.description,onChange:handleChange,placeholder:\"Description\"}),/*#__PURE__*/_jsxs(\"select\",{name:\"industry\",value:formData.industry,onChange:handleChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Industry\"}),industries.map(industry=>/*#__PURE__*/_jsx(\"option\",{value:industry.id,children:industry.name},industry.id))]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"location\",value:formData.location,onChange:handleChange,placeholder:\"Location\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"start_date\",value:formData.start_date,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"end_date\",value:formData.end_date,onChange:handleChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Create Trial\"})]})]});};export default CreateTrialPage;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","trialsAPI","jsx","_jsx","jsxs","_jsxs","CreateTrialPage","navigate","industries","setIndustries","formData","setFormData","title","description","industry","location","start_date","end_date","loadIndustries","response","getIndustries","data","error","console","handleSubmit","e","preventDefault","create","id","handleChange","target","name","value","children","onSubmit","type","onChange","placeholder","map"],"sources":["C:/Users/behna/Desktop/trialssfinder/trialsfinder/src/pages/CreateTrialPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { trialsAPI } from '../api/trials';\r\nimport { Industry } from '../types';\r\n\r\nexport const CreateTrialPage: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const [industries, setIndustries] = useState<Industry[]>([]);\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    description: '',\r\n    industry: '',\r\n    location: '',\r\n    start_date: '',\r\n    end_date: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadIndustries();\r\n  }, []);\r\n\r\n  const loadIndustries = async () => {\r\n    try {\r\n      const response = await trialsAPI.getIndustries();\r\n      setIndustries(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to load industries:', error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await trialsAPI.create(formData);\r\n      navigate(`/payment/${response.data.id}`);\r\n    } catch (error) {\r\n      console.error('Failed to create trial:', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Create Trial</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={formData.title}\r\n          onChange={handleChange}\r\n          placeholder=\"Title\"\r\n        />\r\n        <textarea\r\n          name=\"description\"\r\n          value={formData.description}\r\n          onChange={handleChange}\r\n          placeholder=\"Description\"\r\n        />\r\n        <select name=\"industry\" value={formData.industry} onChange={handleChange}>\r\n          <option value=\"\">Select Industry</option>\r\n          {industries.map(industry => (\r\n            <option key={industry.id} value={industry.id}>{industry.name}</option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          name=\"location\"\r\n          value={formData.location}\r\n          onChange={handleChange}\r\n          placeholder=\"Location\"\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"start_date\"\r\n          value={formData.start_date}\r\n          onChange={handleChange}\r\n        />\r\n        <input\r\n          type=\"date\"\r\n          name=\"end_date\"\r\n          value={formData.end_date}\r\n          onChange={handleChange}\r\n        />\r\n        <button type=\"submit\">Create Trial</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateTrialPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}